(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[331],{Ez99:function(s,a){s.exports='<h1 id="model-definition---\u6a21\u578b\u5b9a\u4e49">Model definition - \u6a21\u578b\u5b9a\u4e49</h1>\n<p>\u8981\u5b9a\u4e49\u6a21\u578b\u548c\u8868\u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u8bf7\u4f7f\u7528<code>define</code>\u65b9\u6cd5\u3002 \u968f\u540eSequelize\u5c06\u81ea\u52a8\u6dfb\u52a0<code>createdAt</code>\u548c<code>updatedAt</code>\u5c5e\u6027\u3002 \u56e0\u6b64\uff0c\u60a8\u5c06\u80fd\u591f\u77e5\u9053\u6570\u636e\u5e93\u6761\u76ee\u4f55\u65f6\u8fdb\u5165\u6570\u636e\u5e93\u4ee5\u53ca\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u65f6\u3002 \u5982\u679c\u60a8\u4e0d\u60f3\u5728\u6a21\u578b\u4e0a\u4f7f\u7528\u65f6\u95f4\u6233\uff0c\u53ea\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6233\uff0c\u6216\u8005\u60a8\u6b63\u5728\u4f7f\u7528\u73b0\u6709\u7684\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5217\u88ab\u547d\u540d\u4e3a\u522b\u7684\u4e1c\u897f\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230<a href="/manual/tutorial/models-definition.html#configuration">configuration</a>\u4ee5\u67e5\u770b\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u3002</p>\n<pre><code class="language-js">const Project = sequelize.define(<span class="hljs-string">\'project\'</span>, {\n  title: Sequelize<span class="hljs-selector-class">.STRING</span>,\n  description: Sequelize<span class="hljs-selector-class">.TEXT</span>\n})\n\nconst Task = sequelize.define(<span class="hljs-string">\'task\'</span>, {\n  title: Sequelize<span class="hljs-selector-class">.STRING</span>,\n  description: Sequelize<span class="hljs-selector-class">.TEXT</span>,\n  deadline: Sequelize<span class="hljs-selector-class">.DATE</span>\n})</code></pre>\n<p>\u4f60\u8fd8\u53ef\u4ee5\u5728\u6bcf\u5217\u4e0a\u8fdb\u884c\u4e00\u4e9b\u8bbe\u7f6e:</p>\n<pre><code class="language-js">const Foo = sequelize.define(<span class="hljs-string">\'foo\'</span>, {\n <span class="hljs-comment">// \u5982\u679c\u672a\u8d4b\u503c,\u5219\u81ea\u52a8\u8bbe\u7f6e\u503c\u4e3a TRUE</span>\n<span class="hljs-symbol"> flag:</span> { <span class="hljs-string">type:</span> Sequelize.BOOLEAN, <span class="hljs-string">allowNull:</span> <span class="hljs-literal">false</span>, <span class="hljs-string">defaultValue:</span> <span class="hljs-literal">true</span>},\n\n <span class="hljs-comment">// \u8bbe\u7f6e\u9ed8\u8ba4\u65f6\u95f4\u4e3a\u5f53\u524d\u65f6\u95f4</span>\n<span class="hljs-symbol"> myDate:</span> { <span class="hljs-string">type:</span> Sequelize.DATE, <span class="hljs-string">defaultValue:</span> Sequelize.NOW },\n\n <span class="hljs-comment">// \u5c06allowNull\u8bbe\u7f6e\u4e3afalse\u4f1a\u5c06NOT NULL\u6dfb\u52a0\u5230\u5217\u4e2d\uff0c</span>\n <span class="hljs-comment">// \u8fd9\u610f\u5473\u7740\u5f53\u5217\u4e3a\u7a7a\u65f6\u6267\u884c\u67e5\u8be2\u65f6\u5c06\u4eceDB\u629b\u51fa\u9519\u8bef\u3002 </span>\n <span class="hljs-comment">// \u5982\u679c\u8981\u5728\u67e5\u8be2DB\u4e4b\u524d\u68c0\u67e5\u503c\u4e0d\u4e3a\u7a7a\uff0c\u8bf7\u67e5\u770b\u4e0b\u9762\u7684\u9a8c\u8bc1\u90e8\u5206\u3002</span>\n<span class="hljs-symbol"> title:</span> { <span class="hljs-string">type:</span> Sequelize.STRING, <span class="hljs-string">allowNull:</span> <span class="hljs-literal">false</span>},\n\n <span class="hljs-comment">// \u521b\u5efa\u5177\u6709\u76f8\u540c\u503c\u7684\u4e24\u4e2a\u5bf9\u8c61\u5c06\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u3002 \u552f\u4e00\u5c5e\u6027\u53ef\u4ee5\u662f\u5e03\u5c14\u503c\u6216\u5b57\u7b26\u4e32\u3002</span>\n <span class="hljs-comment">// \u5982\u679c\u4e3a\u591a\u4e2a\u5217\u63d0\u4f9b\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u4eec\u5c06\u5f62\u6210\u590d\u5408\u552f\u4e00\u952e\u3002</span>\n<span class="hljs-symbol"> uniqueOne:</span> { <span class="hljs-string">type:</span> Sequelize.STRING,  <span class="hljs-string">unique:</span> <span class="hljs-string">\'compositeIndex\'</span>},\n<span class="hljs-symbol"> uniqueTwo:</span> { <span class="hljs-string">type:</span> Sequelize.INTEGER, <span class="hljs-string">unique:</span> <span class="hljs-string">\'compositeIndex\'</span>},\n\n <span class="hljs-comment">// unique\u5c5e\u6027\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7ea6\u675f\u3002</span>\n<span class="hljs-symbol"> someUnique:</span> {<span class="hljs-string">type:</span> Sequelize.STRING, <span class="hljs-string">unique:</span> <span class="hljs-literal">true</span>},\n\n <span class="hljs-comment">// \u8fd9\u4e0e\u5728\u6a21\u578b\u9009\u9879\u4e2d\u521b\u5efa\u7d22\u5f15\u5b8c\u5168\u76f8\u540c\u3002</span>\n {<span class="hljs-string">someUnique:</span> {<span class="hljs-string">type:</span> Sequelize.STRING}},\n {<span class="hljs-string">indexes:</span> [{<span class="hljs-string">unique:</span> <span class="hljs-literal">true</span>, <span class="hljs-string">fields:</span> [<span class="hljs-string">\'someUnique\'</span>]}]},\n\n <span class="hljs-comment">// primaryKey\u7528\u4e8e\u5b9a\u4e49\u4e3b\u952e\u3002</span>\n<span class="hljs-symbol"> identifier:</span> { <span class="hljs-string">type:</span> Sequelize.STRING, <span class="hljs-string">primaryKey:</span> <span class="hljs-literal">true</span>},\n\n <span class="hljs-comment">// autoIncrement\u53ef\u7528\u4e8e\u521b\u5efa\u81ea\u589e\u7684\u6574\u6570\u5217</span>\n<span class="hljs-symbol"> incrementMe:</span> { <span class="hljs-string">type:</span> Sequelize.INTEGER, <span class="hljs-string">autoIncrement:</span> <span class="hljs-literal">true</span> },\n\n <span class="hljs-comment">// \u4f60\u53ef\u4ee5\u901a\u8fc7\'field\'\u5c5e\u6027\u6307\u5b9a\u81ea\u5b9a\u4e49\u5b57\u6bb5\u540d\u79f0\uff1a</span>\n<span class="hljs-symbol"> fieldWithUnderscores:</span> { <span class="hljs-string">type:</span> Sequelize.STRING, <span class="hljs-string">field:</span> <span class="hljs-string">\'field_with_underscores\'</span> },\n\n <span class="hljs-comment">// \u8fd9\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5916\u952e:</span>\n<span class="hljs-symbol"> bar_id:</span> {\n<span class="hljs-symbol">   type:</span> Sequelize.INTEGER,\n<span class="hljs-symbol">\n   references:</span> {\n     <span class="hljs-comment">// \u8fd9\u662f\u5f15\u7528\u53e6\u4e00\u4e2a\u6a21\u578b</span>\n<span class="hljs-symbol">     model:</span> Bar,\n\n     <span class="hljs-comment">// \u8fd9\u662f\u5f15\u7528\u6a21\u578b\u7684\u5217\u540d\u79f0</span>\n<span class="hljs-symbol">     key:</span> <span class="hljs-string">\'id\'</span>,\n\n     <span class="hljs-comment">// \u8fd9\u58f0\u660e\u4ec0\u4e48\u65f6\u5019\u68c0\u67e5\u5916\u952e\u7ea6\u675f\u3002 \u4ec5\u9650PostgreSQL\u3002</span>\n<span class="hljs-symbol">     deferrable:</span> Sequelize.Deferrable.INITIALLY_IMMEDIATE\n   }\n }\n})</code></pre>\n<p>\u6ce8\u91ca\u9009\u9879\u4e5f\u53ef\u4ee5\u5728\u8868\u4e0a\u4f7f\u7528, \u67e5\u770b <a href="/manual/tutorial/models-definition.html#configuration">model configuration</a></p>\n<h2 id="\u65f6\u95f4\u6233">\u65f6\u95f4\u6233</h2>\n<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSequelize \u4f1a\u5c06 <code>createdAt</code> \u548c <code>updatedAt</code> \u5c5e\u6027\u6dfb\u52a0\u5230\u6a21\u578b\u4e2d\uff0c\u4ee5\u4fbf\u60a8\u80fd\u591f\u77e5\u9053\u6570\u636e\u5e93\u6761\u76ee\u4f55\u65f6\u8fdb\u5165\u6570\u636e\u5e93\u4ee5\u53ca\u4f55\u65f6\u88ab\u66f4\u65b0\u3002</p>\n<p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528 Sequelize \u8fc1\u79fb\uff0c\u5219\u9700\u8981\u5c06 <code>createdAt</code> \u548c <code>updatedAt</code> \u5b57\u6bb5\u6dfb\u52a0\u5230\u8fc1\u79fb\u5b9a\u4e49\u4e2d\uff1a</p>\n<pre><code class="language-js">module.exports = {\n  up(queryInterface, Sequelize) {\n    <span class="hljs-keyword">return</span> queryInterface.createTable(<span class="hljs-string">\'my-table\'</span>, {\n      id: {\n        <span class="hljs-keyword">type</span>: Sequelize.<span class="hljs-built_in">INTEGER</span>,\n        primaryKey: <span class="hljs-literal">true</span>,\n        autoIncrement: <span class="hljs-literal">true</span>,\n      },\n\n      <span class="hljs-comment">// \u65f6\u95f4\u6233</span>\n      createdAt: Sequelize.<span class="hljs-built_in">DATE</span>,\n      updatedAt: Sequelize.<span class="hljs-built_in">DATE</span>,\n    })\n  },\n  down(queryInterface, Sequelize) {\n    <span class="hljs-keyword">return</span> queryInterface.dropTable(<span class="hljs-string">\'my-table\'</span>);\n  },\n}\n</code></pre>\n<p>\u5982\u679c\u60a8\u4e0d\u60f3\u5728\u6a21\u578b\u4e0a\u4f7f\u7528\u65f6\u95f4\u6233\uff0c\u53ea\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6233\u8bb0\uff0c\u6216\u8005\u60a8\u6b63\u5728\u4f7f\u7528\u73b0\u6709\u7684\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5217\u88ab\u547d\u540d\u4e3a\u522b\u7684\u4e1c\u897f\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230 [configuration] <a href="/manual/tutorial/models-definition.html#configuration">0</a> \u4ee5\u67e5\u770b\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u3002</p>\n<h2 id="\u6570\u636e\u7c7b\u578b">\u6570\u636e\u7c7b\u578b</h2>\n<p>\u4ee5\u4e0b\u662f Sequelize \u652f\u6301\u7684\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\u3002 \u6709\u5173\u5b8c\u6574\u548c\u66f4\u65b0\u7684\u5217\u8868, \u53c2\u9605 <a href="/variable/index.html#static-variable-DataTypes">DataTypes</a>.</p>\n<pre><code class="language-js">Sequelize.STRING                      // <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>)\nSequelize.STRING(<span class="hljs-number">1234</span>)                // <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">1234</span>)\nSequelize.STRING.BINARY               // <span class="hljs-type">VARCHAR</span> BINARY\nSequelize.TEXT                        // <span class="hljs-type">TEXT</span>\nSequelize.TEXT(<span class="hljs-string">\'tiny\'</span>)                // TINYTEXT\n\nSequelize.INTEGER                     // <span class="hljs-type">INTEGER</span>\nSequelize.BIGINT                      // <span class="hljs-type">BIGINT</span>\nSequelize.BIGINT(<span class="hljs-number">11</span>)                  // <span class="hljs-type">BIGINT</span>(<span class="hljs-number">11</span>)\n\nSequelize.FLOAT                       // <span class="hljs-type">FLOAT</span>\nSequelize.FLOAT(<span class="hljs-number">11</span>)                   // <span class="hljs-type">FLOAT</span>(<span class="hljs-number">11</span>)\nSequelize.FLOAT(<span class="hljs-number">11</span>, <span class="hljs-number">12</span>)               // <span class="hljs-type">FLOAT</span>(<span class="hljs-number">11</span>,<span class="hljs-number">12</span>)\n\nSequelize.REAL                        // <span class="hljs-type">REAL</span>        PostgreSQL <span class="hljs-keyword">only</span>.\nSequelize.REAL(<span class="hljs-number">11</span>)                    // <span class="hljs-type">REAL</span>(<span class="hljs-number">11</span>)    PostgreSQL <span class="hljs-keyword">only</span>.\nSequelize.REAL(<span class="hljs-number">11</span>, <span class="hljs-number">12</span>)                // <span class="hljs-type">REAL</span>(<span class="hljs-number">11</span>,<span class="hljs-number">12</span>) PostgreSQL <span class="hljs-keyword">only</span>.\n\nSequelize.DOUBLE                      // <span class="hljs-type">DOUBLE</span>\nSequelize.DOUBLE(<span class="hljs-number">11</span>)                  // <span class="hljs-type">DOUBLE</span>(<span class="hljs-number">11</span>)\nSequelize.DOUBLE(<span class="hljs-number">11</span>, <span class="hljs-number">12</span>)              // <span class="hljs-type">DOUBLE</span>(<span class="hljs-number">11</span>,<span class="hljs-number">12</span>)\n\nSequelize.DECIMAL                     // <span class="hljs-type">DECIMAL</span>\nSequelize.DECIMAL(<span class="hljs-number">10</span>, <span class="hljs-number">2</span>)              // <span class="hljs-type">DECIMAL</span>(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>)\n\nSequelize.DATE                        // DATETIME <span class="hljs-keyword">for</span> mysql / sqlite, <span class="hljs-type">TIMESTAMP</span> <span class="hljs-type">WITH TIME ZONE</span> <span class="hljs-keyword">for</span> postgres\nSequelize.DATE(<span class="hljs-number">6</span>)                     // DATETIME(<span class="hljs-number">6</span>) <span class="hljs-keyword">for</span> mysql <span class="hljs-number">5.6</span><span class="hljs-number">.4</span>+. Fractional seconds support <span class="hljs-keyword">with</span> up <span class="hljs-keyword">to</span> <span class="hljs-number">6</span> digits <span class="hljs-keyword">of</span> <span class="hljs-type">precision</span>\nSequelize.DATEONLY                    // <span class="hljs-type">DATE</span> <span class="hljs-keyword">without</span> <span class="hljs-type">time</span>.\nSequelize.BOOLEAN                     // TINYINT(<span class="hljs-number">1</span>)\n\nSequelize.ENUM(<span class="hljs-string">\'value 1\'</span>, <span class="hljs-string">\'value 2\'</span>)  // An ENUM <span class="hljs-keyword">with</span> allowed <span class="hljs-keyword">values</span> <span class="hljs-string">\'value 1\'</span> <span class="hljs-keyword">and</span> <span class="hljs-string">\'value 2\'</span>\nSequelize.<span class="hljs-keyword">ARRAY</span>(Sequelize.TEXT)       // Defines an <span class="hljs-keyword">array</span>. PostgreSQL <span class="hljs-keyword">only</span>.\nSequelize.<span class="hljs-keyword">ARRAY</span>(Sequelize.ENUM)       // Defines an <span class="hljs-keyword">array</span> <span class="hljs-keyword">of</span> ENUM. PostgreSQL <span class="hljs-keyword">only</span>.\n\nSequelize.JSON                        // <span class="hljs-type">JSON</span> <span class="hljs-keyword">column</span>. PostgreSQL, SQLite <span class="hljs-keyword">and</span> MySQL <span class="hljs-keyword">only</span>.\nSequelize.JSONB                       // <span class="hljs-type">JSONB</span> <span class="hljs-keyword">column</span>. PostgreSQL <span class="hljs-keyword">only</span>.\n\nSequelize.BLOB                        // BLOB (<span class="hljs-type">bytea</span> <span class="hljs-keyword">for</span> PostgreSQL)\nSequelize.BLOB(<span class="hljs-string">\'tiny\'</span>)                // TINYBLOB (<span class="hljs-type">bytea</span> <span class="hljs-keyword">for</span> PostgreSQL. Other <span class="hljs-keyword">options</span> are medium <span class="hljs-keyword">and</span> long)\n\nSequelize.UUID                        // <span class="hljs-type">UUID</span> datatype <span class="hljs-keyword">for</span> PostgreSQL <span class="hljs-keyword">and</span> SQLite, <span class="hljs-type">CHAR</span>(<span class="hljs-number">36</span>) <span class="hljs-keyword">BINARY for</span> MySQL (use defaultValue: Sequelize.UUIDV1 <span class="hljs-keyword">or</span> Sequelize.UUIDV4 <span class="hljs-keyword">to</span> make sequelize generate the ids automatically)\n\nSequelize.RANGE(Sequelize.INTEGER)    // Defines <span class="hljs-type">int4range</span> range. PostgreSQL <span class="hljs-keyword">only</span>.\nSequelize.RANGE(Sequelize.BIGINT)     // Defined <span class="hljs-type">int8range</span> range. PostgreSQL <span class="hljs-keyword">only</span>.\nSequelize.RANGE(Sequelize.DATE)       // Defines <span class="hljs-type">tstzrange</span> range. PostgreSQL <span class="hljs-keyword">only</span>.\nSequelize.RANGE(Sequelize.DATEONLY)   // Defines <span class="hljs-type">daterange</span> range. PostgreSQL <span class="hljs-keyword">only</span>.\nSequelize.RANGE(Sequelize.DECIMAL)    // Defines <span class="hljs-type">numrange</span> range. PostgreSQL <span class="hljs-keyword">only</span>.\n\nSequelize.<span class="hljs-keyword">ARRAY</span>(Sequelize.RANGE(Sequelize.DATE)) // Defines <span class="hljs-keyword">array</span> <span class="hljs-keyword">of</span> <span class="hljs-type">tstzrange</span> ranges. PostgreSQL <span class="hljs-keyword">only</span>.\n\nSequelize.GEOMETRY                    // Spatial <span class="hljs-keyword">column</span>.  PostgreSQL (<span class="hljs-keyword">with</span> PostGIS) <span class="hljs-keyword">or</span> MySQL <span class="hljs-keyword">only</span>.\nSequelize.GEOMETRY(<span class="hljs-string">\'POINT\'</span>)           // Spatial <span class="hljs-keyword">column</span> <span class="hljs-keyword">with</span> geometry <span class="hljs-keyword">type</span>. PostgreSQL (<span class="hljs-keyword">with</span> PostGIS) <span class="hljs-keyword">or</span> MySQL <span class="hljs-keyword">only</span>.\nSequelize.GEOMETRY(<span class="hljs-string">\'POINT\'</span>, <span class="hljs-number">4326</span>)     // Spatial <span class="hljs-keyword">column</span> <span class="hljs-keyword">with</span> geometry <span class="hljs-keyword">type</span> <span class="hljs-keyword">and</span> SRID.  PostgreSQL (<span class="hljs-keyword">with</span> PostGIS) <span class="hljs-keyword">or</span> MySQL <span class="hljs-keyword">only</span>.</code></pre>\n<p>BLOB\u6570\u636e\u7c7b\u578b\u5141\u8bb8\u60a8\u5c06\u6570\u636e\u4f5c\u4e3a\u5b57\u7b26\u4e32\u548c\u4e8c\u8fdb\u5236\u63d2\u5165\u3002 \u5f53\u60a8\u5728\u5177\u6709BLOB\u5217\u7684\u6a21\u578b\u4e0a\u6267\u884cfind\u6216findAll\u65f6\uff0c\u8be5\u6570\u636e\u5c06\u59cb\u7ec8\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u8fd4\u56de\u3002</p>\n<p>\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528PostgreSQL TIMESTAMP WITHOUT TIMEZONE\uff0c\u60a8\u9700\u8981\u5c06\u5176\u89e3\u6790\u4e3a\u4e0d\u540c\u7684\u65f6\u533a\uff0c\u8bf7\u4f7f\u7528pg\u5e93\u81ea\u5df1\u7684\u89e3\u6790\u5668\uff1a</p>\n<pre><code class="language-js"><span class="hljs-built_in">require</span>(<span class="hljs-string">\'pg\'</span>).types.setTypeParser(<span class="hljs-number">1114</span>, <span class="hljs-function"><span class="hljs-params">stringValue</span> =&gt;</span> {\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(stringValue + <span class="hljs-string">\'+0000\'</span>);\n  <span class="hljs-comment">// \u4f8b\u5982UTC\u504f\u79fb\u3002 \u4f7f\u7528\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u504f\u79fb\u3002</span>\n});</code></pre>\n<p>\u9664\u4e86\u4e0a\u8ff0\u7c7b\u578b\u4e4b\u5916\uff0cinteger\uff0cbigint\uff0cfloat\u548cdouble\u4e5f\u652f\u6301unsigned\u548czerofill\u5c5e\u6027\uff0c\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u7ec4\u5408\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u9002\u7528\u4e8ePostgreSQL\uff01</p>\n<pre><code class="language-js">Sequelize<span class="hljs-selector-class">.INTEGER</span><span class="hljs-selector-class">.UNSIGNED</span>              <span class="hljs-comment">// INTEGER UNSIGNED</span>\nSequelize.INTEGER(<span class="hljs-number">11</span>)<span class="hljs-selector-class">.UNSIGNED</span>          <span class="hljs-comment">// INTEGER(11) UNSIGNED</span>\nSequelize.INTEGER(<span class="hljs-number">11</span>)<span class="hljs-selector-class">.ZEROFILL</span>          <span class="hljs-comment">// INTEGER(11) ZEROFILL</span>\nSequelize.INTEGER(<span class="hljs-number">11</span>)<span class="hljs-selector-class">.ZEROFILL</span><span class="hljs-selector-class">.UNSIGNED</span> <span class="hljs-comment">// INTEGER(11) UNSIGNED ZEROFILL</span>\nSequelize.INTEGER(<span class="hljs-number">11</span>)<span class="hljs-selector-class">.UNSIGNED</span><span class="hljs-selector-class">.ZEROFILL</span> <span class="hljs-comment">// INTEGER(11) UNSIGNED ZEROFILL</span></code></pre>\n<p><em>\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u663e\u793a\u6574\u6570\uff0c\u4f46\u662f\u53ef\u4ee5\u7528bigint\u548cfloat\u6765\u5b8c\u6210</em></p>\n<p>\u7528\u5bf9\u8c61\u8868\u793a\u6cd5:</p>\n<pre><code class="language-js"><span class="hljs-comment">// \u5bf9\u4e8e\u679a\u4e3e:</span>\n<span class="hljs-selector-tag">sequelize</span><span class="hljs-selector-class">.define</span>(<span class="hljs-string">\'model\'</span>, {\n  <span class="hljs-attribute">states</span>: {\n    <span class="hljs-attribute">type</span>:   Sequelize.ENUM,\n    <span class="hljs-attribute">values</span>: [<span class="hljs-string">\'active\'</span>, <span class="hljs-string">\'pending\'</span>, <span class="hljs-string">\'deleted\'</span>]\n  }\n})</code></pre>\n<h3 id="arrayenum">Array(ENUM)</h3>\n<p>\u6b64\u9879\u4ec5\u652f\u6301 PostgreSQL.</p>\n<p>Array(ENUM) \u7c7b\u578b\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002 \u6bcf\u5f53 Sequelize \u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u65f6\uff0c\u5b83\u5fc5\u987b\u4f7f\u7528 ENUM \u540d\u79f0\u5bf9\u6570\u7ec4\u503c\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002</p>\n<p>\u6240\u4ee5\u8fd9\u4e2a\u679a\u4e3e\u540d\u5fc5\u987b\u9075\u5faa  <code>enum_&lt;table_name&gt;_&lt;col_name&gt;</code> \u8fd9\u4e2a\u6a21\u5f0f\u3002 \u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528 <code>sync</code>\uff0c\u5219\u4f1a\u81ea\u52a8\u751f\u6210\u6b63\u786e\u7684\u540d\u79f0\u3002</p>\n<h3 id="\u8303\u56f4\u7c7b\u578b">\u8303\u56f4\u7c7b\u578b</h3>\n<p>\u7531\u4e8e\u8303\u56f4\u7c7b\u578b\u5177\u6709\u5176\u7ed1\u5b9a\u7684\u5305\u542b(inclusive)/\u6392\u9664(exclusive)\u7684\u989d\u5916\u4fe1\u606f\uff0c\u6240\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5143\u7ec4\u5728javascript\u4e2d\u8868\u793a\u5b83\u4eec\u5e76\u4e0d\u662f\u5f88\u7b80\u5355\u3002</p>\n<p>\u5c06\u8303\u56f4\u4f5c\u4e3a\u503c\u63d0\u4f9b\u65f6\uff0c\u60a8\u53ef\u4ee5\u4ece\u4ee5\u4e0bAPI\u4e2d\u8fdb\u884c\u9009\u62e9\uff1a</p>\n<pre><code class="language-js">// \u9ed8\u8ba4\u4e3a <span class="hljs-string">\'["2016-01-01 00:00:00+00:00", "2016-02-01 00:00:00+00:00")\'</span>\n// \u5305\u542b\u4e0b\u9650, \u6392\u9664\u4e0a\u9650\nTimeline.<span class="hljs-keyword">create</span>({ range: [<span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)), <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))] });\n\n// \u63a7\u5236\u5305\u542b\nconst range = [<span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)), <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))];\nrange.inclusive = <span class="hljs-keyword">false</span>; // <span class="hljs-string">\'()\'</span>\nrange.inclusive = [<span class="hljs-keyword">false</span>, <span class="hljs-keyword">true</span>]; // <span class="hljs-string">\'(]\'</span>\nrange.inclusive = <span class="hljs-keyword">true</span>; // <span class="hljs-string">\'[]\'</span>\nrange.inclusive = [<span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>]; // <span class="hljs-string">\'[)\'</span>\n\n// \u6216\u4f5c\u4e3a\u5355\u4e2a\u8868\u8fbe\u5f0f\nconst range = [\n  { <span class="hljs-keyword">value</span>: <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)), inclusive: <span class="hljs-keyword">false</span> },\n  { <span class="hljs-keyword">value</span>: <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)), inclusive: <span class="hljs-keyword">true</span> },\n];\n// <span class="hljs-string">\'("2016-01-01 00:00:00+00:00", "2016-02-01 00:00:00+00:00"]\'</span>\n\n// \u590d\u5408\u5f62\u5f0f\nconst range = [\n  { <span class="hljs-keyword">value</span>: <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>)), inclusive: <span class="hljs-keyword">false</span> },\n  <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)),\n];\n// <span class="hljs-string">\'("2016-01-01 00:00:00+00:00", "2016-02-01 00:00:00+00:00")\'</span>\n\nTimeline.<span class="hljs-keyword">create</span>({ range });</code></pre>\n<p>\u65e0\u8bba\u600e\u6837, \u8bf7\u6ce8\u610f\u65e0\u8bba\u4f55\u65f6\u4f60\u63a5\u6536\u5230\u7684\u8fd4\u56de\u503c\u5c06\u4f1a\u662f\u662f\u4e00\u4e2a\u8303\u56f4:</p>\n<pre><code class="language-js">// \u50a8\u5b58\u7684\u503c: ("2016-01-01 00:00:00+00:00", "2016-02-01 00:00:00+00:00"]\nrange // [<span class="hljs-type">Date</span>, <span class="hljs-type">Date</span>]\nrange.inclusive // [<span class="hljs-keyword">false</span>, <span class="hljs-keyword">true</span>]</code></pre>\n<p>\u786e\u4fdd\u5728\u5e8f\u5217\u5316\u4e4b\u524d\u5c06\u5176\u8f6c\u6362\u4e3a\u53ef\u5e8f\u5217\u5316\u7684\u683c\u5f0f\uff0c\u56e0\u4e3a\u6570\u7ec4\u989d\u5916\u7684\u5c5e\u6027\u5c06\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\u3002</p>\n<p><strong>\u7279\u6b8a\u60c5\u51b5</strong></p>\n<pre><code class="language-js">// \u7a7a\u8303\u56f4:\nTimeline.<span class="hljs-keyword">create</span>({ range: [] }); // range = <span class="hljs-string">\'empty\'</span>\n\n// \u65e0\u9650\u5236\u8303\u56f4:\nTimeline.<span class="hljs-keyword">create</span>({ range: [<span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>] }); // range = <span class="hljs-string">\'[,)\'</span>\n// range = <span class="hljs-string">\'[,"2016-01-01 00:00:00+00:00")\'</span>\nTimeline.<span class="hljs-keyword">create</span>({ range: [<span class="hljs-keyword">null</span>, <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>))] });\n\n// \u65e0\u7a77\u8303\u56f4:\n// range = <span class="hljs-string">\'[-infinity,"2016-01-01 00:00:00+00:00")\'</span>\nTimeline.<span class="hljs-keyword">create</span>({ range: [-<span class="hljs-keyword">Infinity</span>, <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-type">Date</span>.UTC(<span class="hljs-number">2016</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>))] });\n</code></pre>\n<h2 id="\u53ef\u5ef6\u8fdf">\u53ef\u5ef6\u8fdf</h2>\n<p>\u5f53\u4f60\u5728 PostgreSQL \u4e2d\u6307\u5b9a\u5916\u952e\u5217\u7684\u53c2\u6570\u6765\u58f0\u660e\u6210\u4e00\u4e2a\u53ef\u5ef6\u8fdf\u7c7b\u578b\u3002 \u53ef\u7528\u7684\u9009\u9879\u5982\u4e0b\uff1a</p>\n<pre><code class="language-js"><span class="hljs-comment">// \u5c06\u6240\u6709\u5916\u952e\u7ea6\u675f\u68c0\u67e5\u63a8\u8fdf\u5230\u4e8b\u52a1\u7ed3\u675f\u65f6\u3002</span>\nSequelize<span class="hljs-selector-class">.Deferrable</span><span class="hljs-selector-class">.INITIALLY_DEFERRED</span>\n\n<span class="hljs-comment">// \u7acb\u5373\u68c0\u67e5\u5916\u952e\u7ea6\u675f\u3002</span>\nSequelize<span class="hljs-selector-class">.Deferrable</span><span class="hljs-selector-class">.INITIALLY_IMMEDIATE</span>\n\n<span class="hljs-comment">// \u4e0d\u8981\u63a8\u8fdf\u68c0\u67e5\u3002</span>\nSequelize<span class="hljs-selector-class">.Deferrable</span><span class="hljs-selector-class">.NOT</span></code></pre>\n<p>\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f PostgreSQL \u7684\u9ed8\u8ba4\u503c\uff0c\u4e0d\u5141\u8bb8\u4f60\u5728\u4e8b\u52a1\u4e2d\u52a8\u6001\u7684\u66f4\u6539\u89c4\u5219\u3002 \u67e5\u770b <a href="/manual/tutorial/transactions.html#options">the transaction section</a> \u83b7\u53d6\u8865\u5145\u4fe1\u606f.</p>\n<h2 id="getters--setters">Getters &amp; setters</h2>\n<p>\u53ef\u4ee5\u5728\u6a21\u578b\u4e0a\u5b9a\u4e49&#39;\u5bf9\u8c61\u5c5e\u6027&#39;getter\u548csetter\u51fd\u6570\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u7528\u4e8e\u6620\u5c04\u5230\u6570\u636e\u5e93\u5b57\u6bb5\u7684\u201c\u4fdd\u62a4\u201d\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u201c\u4f2a\u201d\u5c5e\u6027\u3002</p>\n<p>Getters\u548cSetters\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\uff08\u60a8\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff09\uff1a</p>\n<ul>\n<li>\u4f5c\u4e3a\u5c5e\u6027\u5b9a\u4e49\u7684\u4e00\u90e8\u5206</li>\n<li>\u4f5c\u4e3a\u6a21\u578b\u53c2\u6570\u7684\u4e00\u90e8\u5206</li>\n</ul>\n<p><strong>\u6ce8\u610f:</strong> \u5982\u679c\u5728\u4e24\u4e2a\u5730\u65b9\u5b9a\u4e49\u4e86getter\u6216setter\uff0c\u90a3\u4e48\u5728\u76f8\u5173\u5c5e\u6027\u5b9a\u4e49\u4e2d\u627e\u5230\u7684\u51fd\u6570\u59cb\u7ec8\u662f\u4f18\u5148\u7684\u3002</p>\n<h3 id="\u5b9a\u4e49\u4e3a\u5c5e\u6027\u5b9a\u4e49\u7684\u4e00\u90e8\u5206">\u5b9a\u4e49\u4e3a\u5c5e\u6027\u5b9a\u4e49\u7684\u4e00\u90e8\u5206</h3>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> Employee = sequelize.define(<span class="hljs-string">\'employee\'</span>, {\n  name: {\n    type: Sequelize.STRING,\n    allowNull: <span class="hljs-literal">false</span>,\n    <span class="hljs-keyword">get</span>() {\n      <span class="hljs-keyword">const</span> title = <span class="hljs-keyword">this</span>.getDataValue(<span class="hljs-string">\'title\'</span>);\n      <span class="hljs-comment">// \'this\' \u5141\u8bb8\u4f60\u8bbf\u95ee\u5b9e\u4f8b\u7684\u5c5e\u6027</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.getDataValue(<span class="hljs-string">\'name\'</span>) + <span class="hljs-string">\' (\'</span> + title + <span class="hljs-string">\')\'</span>;\n    },\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: <span class="hljs-literal">false</span>,\n    <span class="hljs-keyword">set</span>(<span class="hljs-keyword">val</span>) {\n      <span class="hljs-keyword">this</span>.setDataValue(<span class="hljs-string">\'title\'</span>, <span class="hljs-keyword">val</span>.toUpperCase());\n    }\n  }\n});\n\nEmployee\n  .create({ name: <span class="hljs-string">\'John Doe\'</span>, title: <span class="hljs-string">\'senior engineer\'</span> })\n  .then(employee =&gt; {\n    console.log(employee.<span class="hljs-keyword">get</span>(<span class="hljs-string">\'name\'</span>)); <span class="hljs-comment">// John Doe (SENIOR ENGINEER)</span>\n    console.log(employee.<span class="hljs-keyword">get</span>(<span class="hljs-string">\'title\'</span>)); <span class="hljs-comment">// SENIOR ENGINEER</span>\n  })</code></pre>\n<h3 id="\u5b9a\u4e49\u4e3a\u6a21\u578b\u53c2\u6570\u7684\u4e00\u90e8\u5206">\u5b9a\u4e49\u4e3a\u6a21\u578b\u53c2\u6570\u7684\u4e00\u90e8\u5206</h3>\n<p>\u4ee5\u4e0b\u662f\u5728\u6a21\u578b\u53c2\u6570\u4e2d\u5b9a\u4e49 getter \u548c setter \u7684\u793a\u4f8b\u3002 <code>fullName</code> getter\uff0c\u662f\u4e00\u4e2a\u8bf4\u660e\u5982\u4f55\u5728\u6a21\u578b\u4e0a\u5b9a\u4e49\u4f2a\u5c5e\u6027\u7684\u4f8b\u5b50 - \u8fd9\u4e9b\u5c5e\u6027\u5b9e\u9645\u4e0a\u4e0d\u662f\u6570\u636e\u5e93\u6a21\u5f0f\u7684\u4e00\u90e8\u5206\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u4f2a\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\uff1a\u4f7f\u7528\u6a21\u578bgetter\uff0c\u6216\u8005\u4f7f\u7528<a href="/variable/index.html#static-variable-DataTypes"><code>\u865a\u62df</code>\u6570\u636e\u7c7b\u578b</a>\u7684\u5217\u3002 \u865a\u62df\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u6709\u9a8c\u8bc1\uff0c\u800c\u865a\u62df\u5c5e\u6027\u7684getter\u5219\u4e0d\u80fd\u3002</p>\n<p>\u8bf7\u6ce8\u610f\uff0c<code>fullName</code> getter\u51fd\u6570\u4e2d\u5f15\u7528\u7684<code>this.firstname</code>\u548c<code>this.lastname</code>\u5c06\u89e6\u53d1\u5bf9\u76f8\u5e94getter\u51fd\u6570\u7684\u8c03\u7528\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u90a3\u6837\u4f7f\u7528<code>getDataValue()</code>\u65b9\u6cd5\u6765\u8bbf\u95ee\u539f\u59cb\u503c\uff08\u89c1\u4e0b\u6587\uff09\u3002</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> Foo = sequelize.define(<span class="hljs-string">\'foo\'</span>, {\n  firstname: Sequelize.STRING,\n  lastname: Sequelize.STRING\n}, {\n  getterMethods: {\n    fullName() {\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.firstname + <span class="hljs-string">\' \'</span> + <span class="hljs-keyword">this</span>.lastname\n    }\n  },\n\n  setterMethods: {\n    fullName(value) {\n      <span class="hljs-keyword">const</span> names = value.split(<span class="hljs-string">\' \'</span>);\n\n      <span class="hljs-keyword">this</span>.setDataValue(<span class="hljs-string">\'firstname\'</span>, names.slice(<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>).join(<span class="hljs-string">\' \'</span>));\n      <span class="hljs-keyword">this</span>.setDataValue(<span class="hljs-string">\'lastname\'</span>, names.slice(-<span class="hljs-number">1</span>).join(<span class="hljs-string">\' \'</span>));\n    },\n  }\n});</code></pre>\n<h3 id="\u7528\u4e8e-getter-\u548c-setter-\u5b9a\u4e49\u5185\u90e8\u7684-helper-\u65b9\u6cd5">\u7528\u4e8e getter \u548c setter \u5b9a\u4e49\u5185\u90e8\u7684 Helper \u65b9\u6cd5</h3>\n<ul>\n<li>\u68c0\u7d22\u5e95\u5c42\u5c5e\u6027\u503c - \u603b\u662f\u4f7f\u7528 <code>this.getDataValue()</code></li>\n</ul>\n<pre><code class="language-js"><span class="hljs-comment">/* \u4e00\u4e2a\u7528\u4e8e \'title\' \u5c5e\u6027\u7684 getter */</span>\n<span class="hljs-keyword">get</span>() {\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.getDataValue(<span class="hljs-string">\'title\'</span>)\n}</code></pre>\n<ul>\n<li>\u8bbe\u7f6e\u57fa\u7840\u5c5e\u6027\u503c - \u603b\u662f\u4f7f\u7528 <code>this.setDataValue()</code></li>\n</ul>\n<pre><code class="language-js"><span class="hljs-comment">/* \u4e00\u4e2a\u7528\u4e8e \'title\' \u5c5e\u6027\u7684 setter */</span>\nset(title) {\n  this.set<span class="hljs-constructor">DataValue(\'<span class="hljs-params">title</span>\', <span class="hljs-params">title</span>.<span class="hljs-params">toString</span>()</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">LowerCase()</span>);\n}</code></pre>\n<p><strong>\u6ce8\u610f:</strong> \u575a\u6301\u4f7f\u7528 <code>setDataValue()</code> \u548c <code>getDataValue()</code> \u51fd\u6570\uff08\u800c\u4e0d\u662f\u76f4\u63a5\u8bbf\u95ee\u5e95\u5c42\u7684\u201c\u6570\u636e\u503c\u201d\u5c5e\u6027\uff09\u662f\u975e\u5e38\u91cd\u8981\u7684 - \u8fd9\u6837\u505a\u53ef\u4ee5\u4fdd\u62a4\u60a8\u7684\u5b9a\u5236getter\u548csetter\u4e0d\u53d7\u5e95\u5c42\u6a21\u578b\u5b9e\u73b0\u7684\u53d8\u5316\u3002</p>\n<h2 id="\u9a8c\u8bc1">\u9a8c\u8bc1</h2>\n<p>\u6a21\u578b\u9a8c\u8bc1\uff0c\u5141\u8bb8\u60a8\u4e3a\u6a21\u578b\u7684\u6bcf\u4e2a\u5c5e\u6027\u6307\u5b9a\u683c\u5f0f/\u5185\u5bb9/\u7ee7\u627f\u9a8c\u8bc1\u3002</p>\n<p>\u9a8c\u8bc1\u4f1a\u81ea\u52a8\u8fd0\u884c\u5728 <code>create</code> \uff0c <code>update</code> \u548c <code>save</code> \u4e0a\u3002 \u4f60\u4e5f\u53ef\u4ee5\u8c03\u7528 <code>validate()</code> \u624b\u52a8\u9a8c\u8bc1\u4e00\u4e2a\u5b9e\u4f8b\u3002</p>\n<p>\u9a8c\u8bc1\u7531 <a href="https://github.com/chriso/validator.js">validator.js</a> \u5b9e\u73b0\u3002</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> ValidateMe = sequelize.define(<span class="hljs-string">\'foo\'</span>, {\n  foo: {\n    type: Sequelize.STRING,\n    validate: {\n      <span class="hljs-keyword">is</span>: [<span class="hljs-string">"^[a-z]+$"</span>,<span class="hljs-string">\'i\'</span>],     <span class="hljs-comment">// \u53ea\u5141\u8bb8\u5b57\u6bcd</span>\n      <span class="hljs-keyword">is</span>: /^[a-z]+$/i,          <span class="hljs-comment">// \u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u76f8\u540c,\u4f7f\u7528\u4e86\u771f\u6b63\u7684\u6b63\u5219\u8868\u8fbe\u5f0f</span>\n      not: [<span class="hljs-string">"[a-z]"</span>,<span class="hljs-string">\'i\'</span>],       <span class="hljs-comment">// \u4e0d\u5141\u8bb8\u5b57\u6bcd</span>\n      isEmail: <span class="hljs-literal">true</span>,            <span class="hljs-comment">// \u68c0\u67e5\u90ae\u4ef6\u683c\u5f0f (foo@bar.com)</span>\n      isUrl: <span class="hljs-literal">true</span>,              <span class="hljs-comment">// \u68c0\u67e5\u8fde\u63a5\u683c\u5f0f (http://foo.com)</span>\n      isIP: <span class="hljs-literal">true</span>,               <span class="hljs-comment">// \u68c0\u67e5 IPv4 (129.89.23.1) \u6216 IPv6 \u683c\u5f0f</span>\n      isIPv4: <span class="hljs-literal">true</span>,             <span class="hljs-comment">// \u68c0\u67e5 IPv4 (129.89.23.1) \u683c\u5f0f</span>\n      isIPv6: <span class="hljs-literal">true</span>,             <span class="hljs-comment">// \u68c0\u67e5 IPv6 \u683c\u5f0f</span>\n      isAlpha: <span class="hljs-literal">true</span>,            <span class="hljs-comment">// \u53ea\u5141\u8bb8\u5b57\u6bcd</span>\n      isAlphanumeric: <span class="hljs-literal">true</span>,     <span class="hljs-comment">// \u53ea\u5141\u8bb8\u4f7f\u7528\u5b57\u6bcd\u6570\u5b57</span>\n      isNumeric: <span class="hljs-literal">true</span>,          <span class="hljs-comment">// \u53ea\u5141\u8bb8\u6570\u5b57</span>\n      isInt: <span class="hljs-literal">true</span>,              <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u4e3a\u6709\u6548\u6574\u6570</span>\n      isFloat: <span class="hljs-literal">true</span>,            <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u4e3a\u6709\u6548\u6d6e\u70b9\u6570</span>\n      isDecimal: <span class="hljs-literal">true</span>,          <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u4e3a\u4efb\u610f\u6570\u5b57</span>\n      isLowercase: <span class="hljs-literal">true</span>,        <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u4e3a\u5c0f\u5199</span>\n      isUppercase: <span class="hljs-literal">true</span>,        <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u4e3a\u5927\u5199</span>\n      notNull: <span class="hljs-literal">true</span>,            <span class="hljs-comment">// \u4e0d\u5141\u8bb8\u4e3a\u7a7a</span>\n      isNull: <span class="hljs-literal">true</span>,             <span class="hljs-comment">// \u53ea\u5141\u8bb8\u4e3a\u7a7a</span>\n      notEmpty: <span class="hljs-literal">true</span>,           <span class="hljs-comment">// \u4e0d\u5141\u8bb8\u7a7a\u5b57\u7b26\u4e32</span>\n      <span class="hljs-keyword">equals</span>: <span class="hljs-string">\'specific value\'</span>, <span class="hljs-comment">// \u53ea\u5141\u8bb8\u4e00\u4e2a\u7279\u5b9a\u503c</span>\n      contains: <span class="hljs-string">\'foo\'</span>,          <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u5305\u542b\u7279\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32</span>\n      notIn: [[<span class="hljs-string">\'foo\'</span>, <span class="hljs-string">\'bar\'</span>]],  <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u503c\u4e0d\u662f\u5176\u4e2d\u4e4b\u4e00</span>\n      isIn: [[<span class="hljs-string">\'foo\'</span>, <span class="hljs-string">\'bar\'</span>]],   <span class="hljs-comment">// \u68c0\u67e5\u662f\u5426\u503c\u662f\u5176\u4e2d\u4e4b\u4e00</span>\n      notContains: <span class="hljs-string">\'bar\'</span>,       <span class="hljs-comment">// \u4e0d\u5141\u8bb8\u5305\u542b\u7279\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32</span>\n      len: [<span class="hljs-number">2</span>,<span class="hljs-number">10</span>],              <span class="hljs-comment">// \u53ea\u5141\u8bb8\u957f\u5ea6\u57282\u523010\u4e4b\u95f4\u7684\u503c</span>\n      isUUID: <span class="hljs-number">4</span>,                <span class="hljs-comment">// \u53ea\u5141\u8bb8uuids</span>\n      isDate: <span class="hljs-literal">true</span>,             <span class="hljs-comment">// \u53ea\u5141\u8bb8\u65e5\u671f\u5b57\u7b26\u4e32</span>\n      isAfter: <span class="hljs-string">"2011-11-05"</span>,    <span class="hljs-comment">// \u53ea\u5141\u8bb8\u5728\u7279\u5b9a\u65e5\u671f\u4e4b\u540e\u7684\u65e5\u671f\u5b57\u7b26\u4e32</span>\n      isBefore: <span class="hljs-string">"2011-11-05"</span>,   <span class="hljs-comment">// \u53ea\u5141\u8bb8\u5728\u7279\u5b9a\u65e5\u671f\u4e4b\u524d\u7684\u65e5\u671f\u5b57\u7b26\u4e32</span>\n      max: <span class="hljs-number">23</span>,                  <span class="hljs-comment">// \u53ea\u5141\u8bb8\u503c &lt;= 23</span>\n      min: <span class="hljs-number">23</span>,                  <span class="hljs-comment">// \u53ea\u5141\u8bb8\u503c &gt;= 23</span>\n      isCreditCard: <span class="hljs-literal">true</span>,       <span class="hljs-comment">// \u68c0\u67e5\u6709\u6548\u7684\u4fe1\u7528\u5361\u53f7\u7801</span>\n\n      <span class="hljs-comment">// \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u9a8c\u8bc1:</span>\n      isEven(<span class="hljs-keyword">value</span>) {\n        <span class="hljs-keyword">if</span> (parseInt(<span class="hljs-keyword">value</span>) % <span class="hljs-number">2</span> != <span class="hljs-number">0</span>) {\n          <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Error(<span class="hljs-string">\'Only even values are allowed!\'</span>)\n          <span class="hljs-comment">// \u6211\u4eec\u4e5f\u5728\u6a21\u578b\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u5b83\u5b58\u5728\u7684\u8bdd, </span>\n          <span class="hljs-comment">// this.otherField\u4f1a\u5f97\u5230otherField\u7684\u503c\u3002</span>\n        }\n      }\n    }\n  }\n});</code></pre>\n<p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u9700\u8981\u5c06\u591a\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u5185\u7f6e\u7684\u9a8c\u8bc1\u51fd\u6570\uff0c\u5219\u8981\u4f20\u9012\u7684\u53c2\u6570\u5fc5\u987b\u4f4d\u4e8e\u6570\u7ec4\u4e2d\u3002 \u4f46\u662f\uff0c\u5982\u679c\u8981\u4f20\u9012\u5355\u4e2a\u6570\u7ec4\u53c2\u6570\uff0c\u4f8b\u5982<code>isIn</code>\u7684\u53ef\u63a5\u53d7\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5219\u5c06\u88ab\u89e3\u91ca\u4e3a\u591a\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u7ec4\u53c2\u6570\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f20\u9012\u4e00\u4e2a\u5355\u4e00\u957f\u5ea6\u7684\u53c2\u6570\u6570\u7ec4\uff0c\u6bd4\u5982<code>[[&#39;one&#39;\uff0c&#39;two&#39;]]</code>\u3002</p>\n<p>\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u9519\u8bef\u6d88\u606f\u800c\u4e0d\u662f validator.js \u63d0\u4f9b\u7684\u9519\u8bef\u6d88\u606f\uff0c\u8bf7\u4f7f\u7528\u5bf9\u8c61\u800c\u4e0d\u662f\u7eaf\u503c\u6216\u53c2\u6570\u6570\u7ec4\uff0c\u4f8b\u5982\u4e0d\u9700\u8981\u53c2\u6570\u7684\u9a8c\u8bc1\u5668\u53ef\u4ee5\u88ab\u7ed9\u5b9a\u81ea\u5b9a\u4e49\u6d88\u606f:</p>\n<pre><code class="language-js"><span class="hljs-selector-tag">isInt</span>: {\n  <span class="hljs-attribute">msg</span>: <span class="hljs-string">"Must be an integer number of pennies"</span>\n}</code></pre>\n<p>\u6216\u8005\u5982\u679c\u8fd8\u9700\u8981\u4f20\u9012\u53c2\u6570\uff0c\u8bf7\u6dfb\u52a0\u4e00\u4e2a<code>args</code>\u5c5e\u6027\uff1a</p>\n<pre><code class="language-js"><span class="hljs-selector-tag">isIn</span>: {\n  <span class="hljs-attribute">args</span>: [[<span class="hljs-string">\'en\'</span>, <span class="hljs-string">\'zh\'</span>]],\n  msg: <span class="hljs-string">"Must be English or Chinese"</span>\n}</code></pre>\n<p>\u5f53\u4f7f\u7528\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668\u51fd\u6570\u65f6\uff0c\u9519\u8bef\u6d88\u606f\u5c06\u662f\u629b\u51fa\u7684<code>Error</code>\u5bf9\u8c61\u6240\u6301\u6709\u7684\u4efb\u4f55\u6d88\u606f\u3002</p>\n<p>\u6709\u5173\u5185\u7f6e\u9a8c\u8bc1\u65b9\u6cd5\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605<a href="https://github.com/chriso/validator.js">the validator.js project</a> \u3002</p>\n<p>*<em>\u63d0\u793a: *</em>\u60a8\u8fd8\u53ef\u4ee5\u4e3a\u65e5\u5fd7\u8bb0\u5f55\u90e8\u5206\u5b9a\u4e49\u81ea\u5b9a\u4e49\u51fd\u6570\u3002 \u53ea\u662f\u4f20\u9012\u4e00\u4e2a\u65b9\u6cd5\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c06\u662f\u8bb0\u5f55\u7684\u5b57\u7b26\u4e32\u3002</p>\n<h3 id="\u9a8c\u8bc1\u5668-\u4e0e-allownull">\u9a8c\u8bc1\u5668 \u4e0e <code>allowNull</code></h3>\n<p>\u5982\u679c\u6a21\u578b\u7684\u7279\u5b9a\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u5141\u8bb8null\uff08\u4f7f\u7528<code>allowNull\uff1atrue</code>\uff09\uff0c\u5e76\u4e14\u8be5\u503c\u5df2\u8bbe\u7f6e\u4e3a<code>null</code>\uff0c\u5219\u5176\u9a8c\u8bc1\u5668\u4e0d\u4f1a\u8fd0\u884c\u3002 \u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u6bb5\u6765\u9a8c\u8bc1\u5176\u957f\u5ea6\u81f3\u5c11\u4e3a5\u4e2a\u5b57\u7b26\uff0c\u4f46\u4e5f\u5141\u8bb8<code>null</code>\u3002</p>\n<h3 id="\u6a21\u578b\u9a8c\u8bc1">\u6a21\u578b\u9a8c\u8bc1</h3>\n<p>\u9a8c\u8bc1\u5668\u4e5f\u53ef\u4ee5\u5728\u7279\u5b9a\u5b57\u6bb5\u9a8c\u8bc1\u5668\u4e4b\u540e\u7528\u6765\u5b9a\u4e49\u68c0\u67e5\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u786e\u4fdd<code>\u7eac\u5ea6</code>\u548c<code>\u7ecf\u5ea6</code>\u90fd\u4e0d\u8bbe\u7f6e\uff0c\u6216\u8005\u4e24\u8005\u90fd\u8bbe\u7f6e\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u800c\u53e6\u4e00\u4e2a\u672a\u8bbe\u7f6e\u5219\u9a8c\u8bc1\u5931\u8d25\u3002</p>\n<p>\u6a21\u578b\u9a8c\u8bc1\u5668\u65b9\u6cd5\u4e0e\u6a21\u578b\u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u4e00\u8d77\u8c03\u7528\uff0c\u5982\u679c\u5b83\u4eec\u629b\u51fa\u9519\u8bef\uff0c\u5219\u8ba4\u4e3a\u5931\u8d25\uff0c\u5426\u5219\u901a\u8fc7\u3002 \u8fd9\u4e0e\u81ea\u5b9a\u4e49\u5b57\u6bb5\u7279\u5b9a\u7684\u9a8c\u8bc1\u5668\u4e00\u6837\u3002</p>\n<p>\u6240\u6536\u96c6\u7684\u4efb\u4f55\u9519\u8bef\u6d88\u606f\u90fd\u5c06\u4e0e\u9a8c\u8bc1\u7ed3\u679c\u5bf9\u8c61\u4e00\u8d77\u653e\u5728\u5b57\u6bb5\u9a8c\u8bc1\u9519\u8bef\u4e2d\uff0c\u8fd9\u4e2a\u9519\u8bef\u4f7f\u7528\u5728<code>validate</code>\u53c2\u6570\u5bf9\u8c61\u4e2d\u4ee5\u5931\u8d25\u7684\u9a8c\u8bc1\u65b9\u6cd5\u7684\u952e\u6765\u547d\u540d\u3002\u5373\u4fbf\u5728\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\uff0c\u6bcf\u4e2a\u6a21\u578b\u9a8c\u8bc1\u65b9\u6cd5\u53ea\u80fd\u6709\u4e00\u4e2a\u9519\u8bef\u6d88\u606f\uff0c\u5b83\u4f1a\u5728\u6570\u7ec4\u4e2d\u663e\u793a\u4e3a\u5355\u4e2a\u5b57\u7b26\u4e32\u9519\u8bef\uff0c\u4ee5\u6700\u5927\u5316\u4e0e\u5b57\u6bb5\u9519\u8bef\u7684\u4e00\u81f4\u6027\u3002</p>\n<p>\u4e00\u4e2a\u4f8b\u5b50:</p>\n<pre><code class="language-js"><span class="hljs-string">const</span> <span class="hljs-string">Pub</span> <span class="hljs-string">=</span> <span class="hljs-string">Sequelize.define(\'pub\',</span> <span class="hljs-string">{</span>\n<span class="hljs-attr">  name:</span> <span class="hljs-string">{</span> <span class="hljs-attr">type:</span> <span class="hljs-string">Sequelize.STRING</span> <span class="hljs-string">},</span>\n<span class="hljs-attr">  address:</span> <span class="hljs-string">{</span> <span class="hljs-attr">type:</span> <span class="hljs-string">Sequelize.STRING</span> <span class="hljs-string">},</span>\n<span class="hljs-attr">  latitude:</span> <span class="hljs-string">{</span>\n<span class="hljs-attr">    type:</span> <span class="hljs-string">Sequelize.INTEGER,</span>\n<span class="hljs-attr">    allowNull:</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span>\n<span class="hljs-attr">    defaultValue:</span> <span class="hljs-literal">null</span><span class="hljs-string">,</span>\n<span class="hljs-attr">    validate:</span> <span class="hljs-string">{</span> <span class="hljs-attr">min:</span> <span class="hljs-bullet">-90</span><span class="hljs-string">,</span> <span class="hljs-attr">max:</span> <span class="hljs-number">90</span> <span class="hljs-string">}</span>\n  <span class="hljs-string">},</span>\n<span class="hljs-attr">  longitude:</span> <span class="hljs-string">{</span>\n<span class="hljs-attr">    type:</span> <span class="hljs-string">Sequelize.INTEGER,</span>\n<span class="hljs-attr">    allowNull:</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span>\n<span class="hljs-attr">    defaultValue:</span> <span class="hljs-literal">null</span><span class="hljs-string">,</span>\n<span class="hljs-attr">    validate:</span> <span class="hljs-string">{</span> <span class="hljs-attr">min:</span> <span class="hljs-bullet">-180</span><span class="hljs-string">,</span> <span class="hljs-attr">max:</span> <span class="hljs-number">180</span> <span class="hljs-string">}</span>\n  <span class="hljs-string">},</span>\n<span class="hljs-string">},</span> <span class="hljs-string">{</span>\n<span class="hljs-attr">  validate:</span> <span class="hljs-string">{</span>\n    <span class="hljs-string">bothCoordsOrNone()</span> <span class="hljs-string">{</span>\n      <span class="hljs-string">if</span> <span class="hljs-string">((this.latitude</span> <span class="hljs-string">===</span> <span class="hljs-literal">null</span><span class="hljs-string">)</span> <span class="hljs-string">!==</span> <span class="hljs-string">(this.longitude</span> <span class="hljs-string">===</span> <span class="hljs-literal">null</span><span class="hljs-string">))</span> <span class="hljs-string">{</span>\n        <span class="hljs-string">throw</span> <span class="hljs-string">new</span> <span class="hljs-string">Error(\'Require</span> <span class="hljs-string">either</span> <span class="hljs-string">both</span> <span class="hljs-string">latitude</span> <span class="hljs-string">and</span> <span class="hljs-string">longitude</span> <span class="hljs-string">or</span> <span class="hljs-string">neither\')</span>\n      <span class="hljs-string">}</span>\n    <span class="hljs-string">}</span>\n  <span class="hljs-string">}</span>\n<span class="hljs-string">})</span></code></pre>\n<p>\u5728\u8fd9\u79cd\u7b80\u5355\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7ed9\u5b9a\u7eac\u5ea6\u6216\u7ecf\u5ea6\uff0c\u800c\u4e0d\u662f\u540c\u65f6\u5305\u542b\u4e24\u8005\uff0c\u5219\u9a8c\u8bc1\u5931\u8d25\u3002 \u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2a\u8d85\u8303\u56f4\u7684\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff0c\u90a3\u4e48<code>raging_bullock_arms.validate()</code>\u53ef\u80fd\u4f1a\u8fd4\u56de</p>\n<pre><code class="language-js">{\n  <span class="hljs-symbol">\'latitude\'</span>: [<span class="hljs-symbol">\'Invalid</span> number: latitude\'],\n  <span class="hljs-symbol">\'bothCoordsOrNone\'</span>: [<span class="hljs-symbol">\'Require</span> either both latitude <span class="hljs-keyword">and</span> longitude or neither\']\n}</code></pre>\n<h2 id="\u914d\u7f6e">\u914d\u7f6e</h2>\n<p>\u4f60\u8fd8\u53ef\u4ee5\u4fee\u6539 Sequelize \u5904\u7406\u5217\u540d\u79f0\u7684\u65b9\u5f0f\uff1a</p>\n<pre><code class="language-js">const Bar = sequelize.<span class="hljs-class"><span class="hljs-keyword">define</span></span>(<span class="hljs-string">\'bar\'</span>, { <span class="hljs-comment">/* bla */</span> }, {\n  <span class="hljs-comment">// \u4e0d\u6dfb\u52a0\u65f6\u95f4\u6233\u5c5e\u6027 (updatedAt, createdAt)</span>\n  timestamps: <span class="hljs-literal">false</span>,\n\n  <span class="hljs-comment">// \u4e0d\u5220\u9664\u6570\u636e\u5e93\u6761\u76ee\uff0c\u4f46\u5c06\u65b0\u6dfb\u52a0\u7684\u5c5e\u6027deletedAt\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65e5\u671f\uff08\u5220\u9664\u5b8c\u6210\u65f6\uff09\u3002 </span>\n  <span class="hljs-comment">// paranoid \u53ea\u6709\u5728\u542f\u7528\u65f6\u95f4\u6233\u65f6\u624d\u80fd\u5de5\u4f5c</span>\n  paranoid: <span class="hljs-literal">true</span>,\n\n  <span class="hljs-comment">// \u4e0d\u4f7f\u7528\u9a7c\u5cf0\u6837\u5f0f\u81ea\u52a8\u6dfb\u52a0\u5c5e\u6027\uff0c\u800c\u662f\u4e0b\u5212\u7ebf\u6837\u5f0f\uff0c\u56e0\u6b64updatedAt\u5c06\u53d8\u4e3aupdated_at</span>\n  underscored: <span class="hljs-literal">true</span>,\n\n  <span class="hljs-comment">// \u7981\u7528\u4fee\u6539\u8868\u540d; \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csequelize\u5c06\u81ea\u52a8\u5c06\u6240\u6709\u4f20\u9012\u7684\u6a21\u578b\u540d\u79f0\uff08define\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09\u8f6c\u6362\u4e3a\u590d\u6570\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u8fd9\u6837\uff0c\u8bf7\u8bbe\u7f6e\u4ee5\u4e0b\u5185\u5bb9</span>\n  freezeTableName: <span class="hljs-literal">true</span>,\n\n  <span class="hljs-comment">// \u5b9a\u4e49\u8868\u7684\u540d\u79f0</span>\n  tableName: <span class="hljs-string">\'my_very_custom_table_name\'</span>,\n\n  <span class="hljs-comment">// \u542f\u7528\u4e50\u89c2\u9501\u5b9a\u3002 \u542f\u7528\u65f6\uff0csequelize\u5c06\u5411\u6a21\u578b\u6dfb\u52a0\u7248\u672c\u8ba1\u6570\u5c5e\u6027\uff0c</span>\n  <span class="hljs-comment">// \u5e76\u5728\u4fdd\u5b58\u8fc7\u65f6\u7684\u5b9e\u4f8b\u65f6\u5f15\u53d1OptimisticLockingError\u9519\u8bef\u3002</span>\n  <span class="hljs-comment">// \u8bbe\u7f6e\u4e3atrue\u6216\u5177\u6709\u8981\u7528\u4e8e\u542f\u7528\u7684\u5c5e\u6027\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u3002</span>\n  version: <span class="hljs-literal">true</span>\n})</code></pre>\n<p>\u5982\u679c\u4f60\u5e0c\u671bsequelize\u5904\u7406\u65f6\u95f4\u6233\uff0c\u4f46\u53ea\u60f3\u8981\u5176\u4e2d\u4e00\u90e8\u5206\uff0c\u6216\u8005\u5e0c\u671b\u60a8\u7684\u65f6\u95f4\u6233\u88ab\u79f0\u4e3a\u522b\u7684\u4e1c\u897f\uff0c\u5219\u53ef\u4ee5\u5355\u72ec\u8986\u76d6\u6bcf\u4e2a\u5217\uff1a</p>\n<pre><code class="language-js">const Foo = sequelize.<span class="hljs-class"><span class="hljs-keyword">define</span></span>(<span class="hljs-string">\'foo\'</span>,  { <span class="hljs-comment">/* bla */</span> }, {\n  <span class="hljs-comment">// \u4e0d\u8981\u5fd8\u8bb0\u542f\u7528\u65f6\u95f4\u6233\uff01</span>\n  timestamps: <span class="hljs-literal">true</span>,\n\n  <span class="hljs-comment">// \u6211\u4e0d\u60f3\u8981 createdAt</span>\n  createdAt: <span class="hljs-literal">false</span>,\n\n  <span class="hljs-comment">// \u6211\u60f3 updateAt \u5b9e\u9645\u4e0a\u88ab\u79f0\u4e3a updateTimestamp</span>\n  updatedAt: <span class="hljs-string">\'updateTimestamp\'</span>,\n\n  <span class="hljs-comment">// \u5e76\u4e14\u5e0c\u671b deletedA t\u88ab\u79f0\u4e3a destroyTime\uff08\u8bf7\u8bb0\u4f4f\u542f\u7528paranoid\u4ee5\u4f7f\u5176\u5de5\u4f5c\uff09</span>\n  deletedAt: <span class="hljs-string">\'destroyTime\'</span>,\n  paranoid: <span class="hljs-literal">true</span>\n})</code></pre>\n<p>\u60a8\u4e5f\u53ef\u4ee5\u66f4\u6539\u6570\u636e\u5e93\u5f15\u64ce\uff0c\u4f8b\u5982 \u53d8\u66f4\u5230\u5230MyISAM, \u9ed8\u8ba4\u503c\u662fInnoDB\u3002</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> Person = sequelize.define(<span class="hljs-string">\'person\'</span>, { <span class="hljs-comment">/* attributes */</span> }, {\n  engine: <span class="hljs-string">\'MYISAM\'</span>\n})\n\n<span class="hljs-comment">// \u6216\u5168\u5c40\u7684</span>\n<span class="hljs-keyword">const</span> sequelize = <span class="hljs-keyword">new</span> Sequelize(db, user, pw, {\n  define: { engine: <span class="hljs-string">\'MYISAM\'</span> }\n})</code></pre>\n<p>\u6700\u540e\uff0c\u60a8\u53ef\u4ee5\u4e3aMySQL\u548cPG\u4e2d\u7684\u8868\u6307\u5b9a\u6ce8\u91ca</p>\n<pre><code class="language-js">const Person = sequelize.<span class="hljs-class"><span class="hljs-keyword">define</span></span>(<span class="hljs-string">\'person\'</span>, { <span class="hljs-comment">/* attributes */</span> }, {\n  comment: <span class="hljs-string">"I\'m a table comment!"</span>\n})</code></pre>\n<h2 id="\u5bfc\u5165">\u5bfc\u5165</h2>\n<p>\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>import</code>\u65b9\u6cd5\u5c06\u6a21\u578b\u5b9a\u4e49\u5b58\u50a8\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8fd4\u56de\u7684\u5bf9\u8c61\u4e0e\u5bfc\u5165\u6587\u4ef6\u7684\u529f\u80fd\u4e2d\u5b9a\u4e49\u7684\u5b8c\u5168\u76f8\u540c\u3002 \u7531\u4e8eSequelize<code>v1:5.0</code>\u7684\u5bfc\u5165\u662f\u88ab\u7f13\u5b58\u7684\uff0c\u6240\u4ee5\u5f53\u8c03\u7528\u6587\u4ef6\u5bfc\u5165\u4e24\u6b21\u6216\u66f4\u591a\u6b21\u65f6\uff0c\u4e0d\u4f1a\u9047\u5230\u95ee\u9898\u3002</p>\n<pre><code class="language-js"><span class="hljs-comment">// \u5728\u4f60\u7684\u670d\u52a1\u5668\u6587\u4ef6\u4e2d - \u4f8b\u5982 app.js</span>\nconst Project = sequelize.import(__dirname + <span class="hljs-string">"/path/to/models/project"</span>)\n\n<span class="hljs-comment">// \u6a21\u578b\u5df2\u7ecf\u5728 /path/to/models/project.js \u4e2d\u5b9a\u4e49\u597d</span>\n<span class="hljs-comment">// \u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0cDataTypes\u4e0e\u4e0a\u8ff0\u76f8\u540c</span>\nmodule<span class="hljs-selector-class">.exports</span> = (sequelize, DataTypes) =&gt; {\n  return sequelize.define(<span class="hljs-string">"project"</span>, {\n    name: DataTypes<span class="hljs-selector-class">.STRING</span>,\n    description: DataTypes<span class="hljs-selector-class">.TEXT</span>\n  })\n}</code></pre>\n<p><code>import</code>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u63a5\u53d7\u56de\u8c03\u4f5c\u4e3a\u53c2\u6570\u3002</p>\n<pre><code class="language-js">sequelize.<span class="hljs-keyword">import</span>(<span class="hljs-string">\'project\'</span>, <span class="hljs-function"><span class="hljs-params">(sequelize, DataTypes)</span> =&gt;</span> {\n  <span class="hljs-keyword">return</span> sequelize.define(<span class="hljs-string">"project"</span>, {\n    name: DataTypes.STRING,\n    description: DataTypes.TEXT\n  })\n})</code></pre>\n<p>\u8fd9\u4e2a\u989d\u5916\u7684\u529f\u80fd\u4e5f\u662f\u6709\u7528\u7684, \u4f8b\u5982 <code>Error: Cannot find module</code> \u88ab\u629b\u51fa\uff0c\u5373\u4f7f <code>/path/to/models/project</code> \u770b\u8d77\u6765\u662f\u6b63\u786e\u7684\u3002 \u4e00\u4e9b\u6846\u67b6\uff0c\u5982 Meteor\uff0c\u91cd\u8f7d <code>require</code>\uff0c\u5e76\u7ed9\u51fa\u201c\u60ca\u559c\u201d\u7684\u7ed3\u679c\uff0c\u5982\uff1a</p>\n<pre><code><span class="hljs-keyword">Error: </span>Cannot find module \'/home/you/meteorApp/.meteor/local/build/programs/server/app/path/to/models/project.js\'</code></pre><p>\u8fd9\u901a\u8fc7\u4f20\u5165Meteor\u7684<code>require</code>\u7248\u672c\u6765\u89e3\u51b3. \u6240\u4ee5\uff0c\u867d\u7136\u8fd9\u53ef\u80fd\u4f1a\u5931\u8d25 ...</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> AuthorModel = db.<span class="hljs-keyword">import</span>(<span class="hljs-string">\'./path/to/models/project\'</span>);</code></pre>\n<p>... \u8fd9\u5e94\u8be5\u662f\u6210\u529f\u7684 ...</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> AuthorModel = db.<span class="hljs-keyword">import</span>(<span class="hljs-string">\'project\'</span>, <span class="hljs-built_in">require</span>(<span class="hljs-string">\'./path/to/models/project\'</span>));</code></pre>\n<h2 id="\u4e50\u89c2\u9501\u5b9a">\u4e50\u89c2\u9501\u5b9a</h2>\n<p>Sequelize \u5185\u7f6e\u652f\u6301\u901a\u8fc7\u6a21\u578b\u5b9e\u4f8b\u7248\u672c\u8ba1\u6570\u7684\u4e50\u89c2\u9501\u5b9a\u3002</p>\n<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528\u4e50\u89c2\u9501\u5b9a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7279\u5b9a\u6a21\u578b\u5b9a\u4e49\u6216\u5168\u5c40\u6a21\u578b\u914d\u7f6e\u4e2d\u5c06<code>version</code>\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u6765\u542f\u7528\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605<a href="/manual/tutorial/models-definition.html#configuration">\u6a21\u578b\u914d\u7f6e</a>\u3002</p>\n<p>\u4e50\u89c2\u9501\u5b9a\u5141\u8bb8\u5e76\u53d1\u8bbf\u95ee\u6a21\u578b\u8bb0\u5f55\u4ee5\u8fdb\u884c\u7f16\u8f91\uff0c\u5e76\u9632\u6b62\u51b2\u7a81\u8986\u76d6\u6570\u636e\u3002 \u5b83\u901a\u8fc7\u68c0\u67e5\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u5df2\u7ecf\u8bfb\u53d6\u8bb0\u5f55\u800c\u8fdb\u884c\u66f4\u6539\uff0c\u5e76\u5728\u68c0\u6d4b\u5230\u51b2\u7a81\u65f6\u629b\u51fa\u4e00\u4e2aOptimisticLockError\u3002</p>\n<h2 id="\u6570\u636e\u5e93\u540c\u6b65">\u6570\u636e\u5e93\u540c\u6b65</h2>\n<p>\u5f53\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\u65f6\uff0c\u4f60\u8fd8\u4e0d\u4f1a\u6709\u4e00\u4e2a\u6570\u636e\u5e93\u7ed3\u6784\uff0c\u5e76\u4e14\u4f7f\u7528Sequelize\u4f60\u4e5f\u4e0d\u9700\u8981\u5b83\u3002 \u53ea\u9700\u6307\u5b9a\u60a8\u7684\u6a21\u578b\u7ed3\u6784\uff0c\u5e76\u8ba9\u5e93\u5b8c\u6210\u5176\u4f59\u64cd\u4f5c\u3002 \u76ee\u524d\u652f\u6301\u7684\u662f\u521b\u5efa\u548c\u5220\u9664\u8868\uff1a</p>\n<pre><code class="language-js"><span class="hljs-comment">// \u521b\u5efa\u8868:</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Project</span>.</span></span>sync<span class="hljs-literal">()</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Task</span>.</span></span>sync<span class="hljs-literal">()</span>\n\n<span class="hljs-comment">// \u5f3a\u5236\u521b\u5efa!</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Project</span>.</span></span>sync({force: <span class="hljs-literal">true</span>}) <span class="hljs-comment">// \u8fd9\u5c06\u5148\u4e22\u5f03\u8868\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa\u5b83</span>\n\n<span class="hljs-comment">// \u5220\u9664\u8868:</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Project</span>.</span></span>drop<span class="hljs-literal">()</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Task</span>.</span></span>drop<span class="hljs-literal">()</span>\n\n<span class="hljs-comment">// \u4e8b\u4ef6\u5904\u7406:</span>\nProject.<span class="hljs-literal">[<span class="hljs-identifier">sync</span>|<span class="hljs-identifier">drop</span>]</span><span class="hljs-literal">()</span>.<span class="hljs-keyword">then</span>(<span class="hljs-literal">()</span> =&gt; {\n  <span class="hljs-comment">// \u597d\u5427...\u4e00\u5207\u90fd\u5f88\u597d\uff01</span>\n}).catch(error =&gt; {\n  <span class="hljs-comment">// oooh\uff0c\u4f60\u8f93\u5165\u4e86\u9519\u8bef\u7684\u6570\u636e\u5e93\u51ed\u636e\uff1f</span>\n})</code></pre>\n<p>\u56e0\u4e3a\u540c\u6b65\u548c\u5220\u9664\u6240\u6709\u7684\u8868\u53ef\u80fd\u8981\u5199\u5f88\u591a\u884c\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8ba9Sequelize\u6765\u4e3a\u505a\u8fd9\u4e9b\uff1a</p>\n<pre><code class="language-js"><span class="hljs-comment">// \u540c\u6b65\u6240\u6709\u5c1a\u672a\u5728\u6570\u636e\u5e93\u4e2d\u7684\u6a21\u578b</span>\n<span class="hljs-selector-tag">sequelize</span><span class="hljs-selector-class">.sync</span>()\n\n<span class="hljs-comment">// \u5f3a\u5236\u540c\u6b65\u6240\u6709\u6a21\u578b</span>\n<span class="hljs-selector-tag">sequelize</span><span class="hljs-selector-class">.sync</span>({<span class="hljs-attribute">force</span>: true})\n\n<span class="hljs-comment">// \u5220\u9664\u6240\u6709\u8868</span>\n<span class="hljs-selector-tag">sequelize</span><span class="hljs-selector-class">.drop</span>()\n\n<span class="hljs-comment">// \u5e7f\u64ad\u5904\u7406:</span>\n<span class="hljs-selector-tag">sequelize</span>.<span class="hljs-selector-attr">[sync|drop]</span>()<span class="hljs-selector-class">.then</span>(() =&gt; {\n  <span class="hljs-comment">// woot woot</span>\n})<span class="hljs-selector-class">.catch</span>(error =&gt; {\n  <span class="hljs-comment">// whooops</span>\n})</code></pre>\n<p>\u56e0\u4e3a<code>.sync({ force: true })</code>\u662f\u5177\u6709\u7834\u574f\u6027\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>match</code>\u53c2\u6570\u4f5c\u4e3a\u9644\u52a0\u7684\u5b89\u5168\u68c0\u67e5\u3002</p>\n<p><code>match</code>\u53c2\u6570\u53ef\u4ee5\u901a\u77e5Sequelize\uff0c\u4ee5\u4fbf\u5728\u540c\u6b65\u4e4b\u524d\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u6570\u636e\u5e93\u540d\u79f0 - \u5728\u6d4b\u8bd5\u4e2d\u4f7f\u7528<code>force\uff1atrue</code>\u4f46\u4e0d\u4f7f\u7528\u5b9e\u65f6\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u7684\u5b89\u5168\u68c0\u67e5\u3002</p>\n<pre><code class="language-js"><span class="hljs-comment">// \u53ea\u6709\u5f53\u6570\u636e\u5e93\u540d\u79f0\u4ee5\'_test\'\u7ed3\u5c3e\u65f6\uff0c\u624d\u4f1a\u8fd0\u884c.sync\uff08\uff09</span>\nsequelize.sync({ <span class="hljs-string">force:</span> <span class="hljs-literal">true</span>, <span class="hljs-string">match:</span> <span class="hljs-regexp">/_test$/</span> });</code></pre>\n<h2 id="\u6269\u5c55\u6a21\u578b">\u6269\u5c55\u6a21\u578b</h2>\n<p>Sequelize \u6a21\u578b\u662fES6\u7c7b\u3002 \u60a8\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u6216\u7c7b\u7ea7\u522b\u7684\u65b9\u6cd5\u3002</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> User = sequelize.define(<span class="hljs-string">\'user\'</span>, { firstname: Sequelize.STRING });\n\n<span class="hljs-comment">// \u6dfb\u52a0\u4e00\u4e2a\u7c7b\u7ea7\u522b\u7684\u65b9\u6cd5</span>\nUser.classLevelMethod = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">\'foo\'</span>;\n};\n\n<span class="hljs-comment">// \u6dfb\u52a0\u5b9e\u4f8b\u7ea7\u522b\u65b9\u6cd5</span>\nUser.prototype.instanceLevelMethod = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">\'bar\'</span>;\n};</code></pre>\n<p>\u5f53\u7136\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u5b9e\u4f8b\u7684\u6570\u636e\u5e76\u751f\u6210\u865a\u62df\u7684getter:</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> User = sequelize.define(<span class="hljs-string">\'user\'</span>, { firstname: Sequelize.STRING, lastname: Sequelize.STRING });\n\nUser.prototype.getFullname = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> </span>{\n  <span class="hljs-keyword">return</span> [<span class="hljs-keyword">this</span>.firstname, <span class="hljs-keyword">this</span>.lastname].join(<span class="hljs-string">\' \'</span>);\n};\n\n<span class="hljs-comment">// \u4f8b\u5b50:</span>\nUser.build({ firstname: <span class="hljs-string">\'foo\'</span>, lastname: <span class="hljs-string">\'bar\'</span> }).getFullname() <span class="hljs-comment">// \'foo bar\'</span></code></pre>\n<h3 id="\u7d22\u5f15">\u7d22\u5f15</h3>\n<p>Sequelize\u652f\u6301\u5728 <code>Model.sync()</code> \u6216 <code>sequelize.sync</code> \u4e2d\u521b\u5efa\u7684\u6a21\u578b\u5b9a\u4e49\u4e2d\u6dfb\u52a0\u7d22\u5f15\u3002</p>\n<pre><code class="language-js"><span class="hljs-selector-tag">sequelize</span><span class="hljs-selector-class">.define</span>(<span class="hljs-string">\'user\'</span>, {}, {\n  <span class="hljs-attribute">indexes</span>: [\n    <span class="hljs-comment">// \u5728 email \u4e0a\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7d22\u5f15</span>\n    {\n      <span class="hljs-attribute">unique</span>: true,\n      <span class="hljs-attribute">fields</span>: [<span class="hljs-string">\'email\'</span>]\n    },\n\n    <span class="hljs-comment">// \u5728\u4f7f\u7528 jsonb_path_ops \u7684 operator \u6570\u636e\u4e0a\u521b\u5efa\u4e00\u4e2a gin \u7d22\u5f15</span>\n    {\n      <span class="hljs-attribute">fields</span>: [<span class="hljs-string">\'data\'</span>],\n      <span class="hljs-attribute">using</span>: <span class="hljs-string">\'gin\'</span>,\n      <span class="hljs-attribute">operator</span>: <span class="hljs-string">\'jsonb_path_ops\'</span>\n    },\n\n    <span class="hljs-comment">// \u9ed8\u8ba4\u7684\u7d22\u5f15\u540d\u5c06\u662f [table]_[fields]</span>\n    <span class="hljs-comment">// \u521b\u5efa\u591a\u5217\u5c40\u90e8\u7d22\u5f15</span>\n    {\n      <span class="hljs-attribute">name</span>: <span class="hljs-string">\'public_by_author\'</span>,\n      <span class="hljs-attribute">fields</span>: [<span class="hljs-string">\'author\'</span>, <span class="hljs-string">\'status\'</span>],\n      <span class="hljs-attribute">where</span>: {\n        <span class="hljs-attribute">status</span>: <span class="hljs-string">\'public\'</span>\n      }\n    },\n\n    <span class="hljs-comment">// \u5177\u6709\u6709\u5e8f\u5b57\u6bb5\u7684BTREE\u7d22\u5f15</span>\n    {\n      <span class="hljs-attribute">name</span>: <span class="hljs-string">\'title_index\'</span>,\n      <span class="hljs-attribute">method</span>: <span class="hljs-string">\'BTREE\'</span>,\n      <span class="hljs-attribute">fields</span>: [<span class="hljs-string">\'author\'</span>, {<span class="hljs-attribute">attribute</span>: <span class="hljs-string">\'title\'</span>, <span class="hljs-attribute">collate</span>: <span class="hljs-string">\'en_US\'</span>, <span class="hljs-attribute">order</span>: <span class="hljs-string">\'DESC\'</span>, <span class="hljs-attribute">length</span>: <span class="hljs-number">5</span>}]\n    }\n  ]\n})</code></pre>\n'}}]);