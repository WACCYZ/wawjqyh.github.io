(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[34],{CHkI:function(s,a){s.exports='<h1 id="\u4fee\u9970\u5668">\u4fee\u9970\u5668</h1>\n<h2 id="\u7c7b\u7684\u4fee\u9970">\u7c7b\u7684\u4fee\u9970</h2>\n<p>\u8bb8\u591a\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u90fd\u6709\u4fee\u9970\u5668\uff08Decorator\uff09\u51fd\u6570\uff0c\u7528\u6765\u4fee\u6539\u7c7b\u7684\u884c\u4e3a\u3002\u76ee\u524d\uff0c\u6709\u4e00\u4e2a<a href="https://github.com/tc39/proposal-decorators">\u63d0\u6848</a>\u5c06\u8fd9\u9879\u529f\u80fd\uff0c\u5f15\u5165\u4e86 ECMAScript\u3002</p>\n<pre><code class="language-javascript">@testable\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyTestableClass</span> </span>{\n  <span class="hljs-comment">// ...</span>\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testable</span><span class="hljs-params">(target)</span> </span>{\n  target.isTestable = <span class="hljs-literal">true</span>;\n}\n\nMyTestableClass.isTestable <span class="hljs-comment">// true</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>@testable</code>\u5c31\u662f\u4e00\u4e2a\u4fee\u9970\u5668\u3002\u5b83\u4fee\u6539\u4e86<code>MyTestableClass</code>\u8fd9\u4e2a\u7c7b\u7684\u884c\u4e3a\uff0c\u4e3a\u5b83\u52a0\u4e0a\u4e86\u9759\u6001\u5c5e\u6027<code>isTestable</code>\u3002<code>testable</code>\u51fd\u6570\u7684\u53c2\u6570<code>target</code>\u662f<code>MyTestableClass</code>\u7c7b\u672c\u8eab\u3002</p>\n<p>\u57fa\u672c\u4e0a\uff0c\u4fee\u9970\u5668\u7684\u884c\u4e3a\u5c31\u662f\u4e0b\u9762\u8fd9\u6837\u3002</p>\n<pre><code class="language-javascript">@decorator\n<span class="hljs-keyword">class</span> <span class="hljs-symbol">A</span> {}\n\n<span class="hljs-comment">// \u7b49\u540c\u4e8e</span>\n\n<span class="hljs-keyword">class</span> <span class="hljs-symbol">A</span> {}\nA = decorator(A) || A;</code></pre>\n<p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4fee\u9970\u5668\u662f\u4e00\u4e2a\u5bf9\u7c7b\u8fdb\u884c\u5904\u7406\u7684\u51fd\u6570\u3002\u4fee\u9970\u5668\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u662f\u6240\u8981\u4fee\u9970\u7684\u76ee\u6807\u7c7b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testable</span><span class="hljs-params">(target)</span> </span>{\n  <span class="hljs-comment">// ...</span>\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>testable</code>\u51fd\u6570\u7684\u53c2\u6570<code>target</code>\uff0c\u5c31\u662f\u4f1a\u88ab\u4fee\u9970\u7684\u7c7b\u3002</p>\n<p>\u5982\u679c\u89c9\u5f97\u4e00\u4e2a\u53c2\u6570\u4e0d\u591f\u7528\uff0c\u53ef\u4ee5\u5728\u4fee\u9970\u5668\u5916\u9762\u518d\u5c01\u88c5\u4e00\u5c42\u51fd\u6570\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testable</span><span class="hljs-params">(isTestable)</span> </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(target)</span> </span>{\n    target.isTestable = isTestable;\n  }\n}\n\n@testable(<span class="hljs-literal">true</span>)\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyTestableClass</span> </span>{}\nMyTestableClass.isTestable <span class="hljs-comment">// true</span>\n\n@testable(<span class="hljs-literal">false</span>)\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{}\nMyClass.isTestable <span class="hljs-comment">// false</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4fee\u9970\u5668<code>testable</code>\u53ef\u4ee5\u63a5\u53d7\u53c2\u6570\uff0c\u8fd9\u5c31\u7b49\u4e8e\u53ef\u4ee5\u4fee\u6539\u4fee\u9970\u5668\u7684\u884c\u4e3a\u3002</p>\n<p>\u6ce8\u610f\uff0c\u4fee\u9970\u5668\u5bf9\u7c7b\u7684\u884c\u4e3a\u7684\u6539\u53d8\uff0c\u662f\u4ee3\u7801\u7f16\u8bd1\u65f6\u53d1\u751f\u7684\uff0c\u800c\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4fee\u9970\u5668\u80fd\u5728\u7f16\u8bd1\u9636\u6bb5\u8fd0\u884c\u4ee3\u7801\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4fee\u9970\u5668\u672c\u8d28\u5c31\u662f\u7f16\u8bd1\u65f6\u6267\u884c\u7684\u51fd\u6570\u3002</p>\n<p>\u524d\u9762\u7684\u4f8b\u5b50\u662f\u4e3a\u7c7b\u6dfb\u52a0\u4e00\u4e2a\u9759\u6001\u5c5e\u6027\uff0c\u5982\u679c\u60f3\u6dfb\u52a0\u5b9e\u4f8b\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u76ee\u6807\u7c7b\u7684<code>prototype</code>\u5bf9\u8c61\u64cd\u4f5c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">testable</span>(<span class="hljs-params">target</span>) </span>{\n  target.prototype.isTestable = <span class="hljs-literal">true</span>;\n}\n\n@testable\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyTestableClass</span> </span>{}\n\n<span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> MyTestableClass();\nobj.isTestable <span class="hljs-comment">// true</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4fee\u9970\u5668\u51fd\u6570<code>testable</code>\u662f\u5728\u76ee\u6807\u7c7b\u7684<code>prototype</code>\u5bf9\u8c61\u4e0a\u6dfb\u52a0\u5c5e\u6027\uff0c\u56e0\u6b64\u5c31\u53ef\u4ee5\u5728\u5b9e\u4f8b\u4e0a\u8c03\u7528\u3002</p>\n<p>\u4e0b\u9762\u662f\u53e6\u5916\u4e00\u4e2a\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// mixins.js</span>\nexport <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mixins</span><span class="hljs-params">(<span class="hljs-rest_arg">...list</span>)</span> </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(target)</span> </span>{\n    Object.assign(target.prototype, ...list)\n  }\n}\n\n<span class="hljs-comment">// main.js</span>\n<span class="hljs-meta"><span class="hljs-meta-keyword">import</span> { mixins } from \'./mixins\'\n\nconst Foo = {\n  foo() { console.log(\'foo\') }\n};</span>\n\n@mixins(Foo)\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{}\n\nlet obj = <span class="hljs-keyword">new</span> MyClass();\nobj.foo() <span class="hljs-comment">// \'foo\'</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u901a\u8fc7\u4fee\u9970\u5668<code>mixins</code>\uff0c\u628a<code>Foo</code>\u7c7b\u7684\u65b9\u6cd5\u6dfb\u52a0\u5230\u4e86<code>MyClass</code>\u7684\u5b9e\u4f8b\u4e0a\u9762\u3002\u53ef\u4ee5\u7528<code>Object.assign()</code>\u6a21\u62df\u8fd9\u4e2a\u529f\u80fd\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> Foo = {\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n};\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{}\n\n<span class="hljs-built_in">Object</span>.assign(MyClass.prototype, Foo);\n\n<span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> MyClass();\nobj.foo() <span class="hljs-comment">// \'foo\'</span></code></pre>\n<p>\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0cReact \u4e0e Redux \u5e93\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u5199\u6210\u4e0b\u9762\u8fd9\u6837\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyReactComponent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{}\n\nexport <span class="hljs-keyword">default</span> connect(mapStateToProps, mapDispatchToProps)(<span class="hljs-type">MyReactComponent</span>);</code></pre>\n<p>\u6709\u4e86\u88c5\u9970\u5668\uff0c\u5c31\u53ef\u4ee5\u6539\u5199\u4e0a\u9762\u7684\u4ee3\u7801\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-meta">@connect</span>(mapStateToProps, mapDispatchToProps)\nexport <span class="hljs-keyword">default</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyReactComponent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{}</code></pre>\n<p>\u76f8\u5bf9\u6765\u8bf4\uff0c\u540e\u4e00\u79cd\u5199\u6cd5\u770b\u4e0a\u53bb\u66f4\u5bb9\u6613\u7406\u89e3\u3002</p>\n<h2 id="\u65b9\u6cd5\u7684\u4fee\u9970">\u65b9\u6cd5\u7684\u4fee\u9970</h2>\n<p>\u4fee\u9970\u5668\u4e0d\u4ec5\u53ef\u4ee5\u4fee\u9970\u7c7b\uff0c\u8fd8\u53ef\u4ee5\u4fee\u9970\u7c7b\u7684\u5c5e\u6027\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{\n  <span class="hljs-meta">@readonly</span>\n  name() { <span class="hljs-keyword">return</span> `${<span class="hljs-keyword">this</span>.first} ${<span class="hljs-keyword">this</span>.last}` }\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4fee\u9970\u5668<code>readonly</code>\u7528\u6765\u4fee\u9970\u201c\u7c7b\u201d\u7684<code>name</code>\u65b9\u6cd5\u3002</p>\n<p>\u6b64\u65f6\uff0c\u4fee\u9970\u5668\u51fd\u6570\u4e00\u5171\u53ef\u4ee5\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6240\u8981\u4fee\u9970\u7684\u76ee\u6807\u5bf9\u8c61\uff0c\u5373\u7c7b\u7684\u5b9e\u4f8b\uff08\u8fd9\u4e0d\u540c\u4e8e\u7c7b\u7684\u4fee\u9970\uff0c\u90a3\u79cd\u60c5\u51b5\u65f6<code>target</code>\u53c2\u6570\u6307\u7684\u662f\u7c7b\u672c\u8eab\uff09\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6240\u8981\u4fee\u9970\u7684\u5c5e\u6027\u540d\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u8be5\u5c5e\u6027\u7684\u63cf\u8ff0\u5bf9\u8c61\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">function</span> readonly(target, name, descriptor){\n  <span class="hljs-comment">// descriptor\u5bf9\u8c61\u539f\u6765\u7684\u503c\u5982\u4e0b</span>\n  <span class="hljs-comment">// {</span>\n  <span class="hljs-comment">//   value: specifiedFunction,</span>\n  <span class="hljs-comment">//   enumerable: false,</span>\n  <span class="hljs-comment">//   configurable: true,</span>\n  <span class="hljs-comment">//   writable: true</span>\n  <span class="hljs-comment">// };</span>\n  descriptor.writable = <span class="hljs-literal">false</span>;\n  return descriptor;\n}\n\nreadonly(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Person</span>.</span></span>prototype, \'name\', descriptor);\n<span class="hljs-comment">// \u7c7b\u4f3c\u4e8e</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Object</span>.</span></span>define<span class="hljs-constructor">Property(Person.<span class="hljs-params">prototype</span>, \'<span class="hljs-params">name</span>\', <span class="hljs-params">descriptor</span>)</span>;</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u8bf4\u660e\uff0c\u4fee\u9970\u5668\uff08readonly\uff09\u4f1a\u4fee\u6539\u5c5e\u6027\u7684\u63cf\u8ff0\u5bf9\u8c61\uff08descriptor\uff09\uff0c\u7136\u540e\u88ab\u4fee\u6539\u7684\u63cf\u8ff0\u5bf9\u8c61\u518d\u7528\u6765\u5b9a\u4e49\u5c5e\u6027\u3002</p>\n<p>\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u4fee\u6539\u5c5e\u6027\u63cf\u8ff0\u5bf9\u8c61\u7684<code>enumerable</code>\u5c5e\u6027\uff0c\u4f7f\u5f97\u8be5\u5c5e\u6027\u4e0d\u53ef\u904d\u5386\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{\n  @nonenumerable\n  <span class="hljs-keyword">get</span> kidCount() { <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.children.length; }\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nonenumerable</span>(<span class="hljs-params">target, name, descriptor</span>) </span>{\n  descriptor.enumerable = <span class="hljs-literal">false</span>;\n  <span class="hljs-keyword">return</span> descriptor;\n}</code></pre>\n<p>\u4e0b\u9762\u7684<code>@log</code>\u4fee\u9970\u5668\uff0c\u53ef\u4ee5\u8d77\u5230\u8f93\u51fa\u65e5\u5fd7\u7684\u4f5c\u7528\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Math</span> </span>{\n  @log\n  add(a, b) {\n    <span class="hljs-keyword">return</span> a + b;\n  }\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log</span>(<span class="hljs-params">target, name, descriptor</span>) </span>{\n  <span class="hljs-keyword">var</span> oldValue = descriptor.value;\n\n  descriptor.value = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Calling "<span class="hljs-subst">${name}</span>" with`</span>, <span class="hljs-built_in">arguments</span>);\n    <span class="hljs-keyword">return</span> oldValue.apply(<span class="hljs-literal">null</span>, <span class="hljs-built_in">arguments</span>);\n  };\n\n  <span class="hljs-keyword">return</span> descriptor;\n}\n\n<span class="hljs-keyword">const</span> math = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Math</span>();\n\n<span class="hljs-comment">// passed parameters should get logged now</span>\nmath.add(<span class="hljs-number">2</span>, <span class="hljs-number">4</span>);</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>@log</code>\u4fee\u9970\u5668\u7684\u4f5c\u7528\u5c31\u662f\u5728\u6267\u884c\u539f\u59cb\u7684\u64cd\u4f5c\u4e4b\u524d\uff0c\u6267\u884c\u4e00\u6b21<code>console.log</code>\uff0c\u4ece\u800c\u8fbe\u5230\u8f93\u51fa\u65e5\u5fd7\u7684\u76ee\u7684\u3002</p>\n<p>\u4fee\u9970\u5668\u6709\u6ce8\u91ca\u7684\u4f5c\u7528\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-meta">@testable</span>\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{\n  <span class="hljs-meta">@readonly</span>\n  <span class="hljs-meta">@nonenumerable</span>\n  name() { <span class="hljs-keyword">return</span> `${<span class="hljs-keyword">this</span>.first} ${<span class="hljs-keyword">this</span>.last}` }\n}</code></pre>\n<p>\u4ece\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4e00\u773c\u5c31\u80fd\u770b\u51fa\uff0c<code>Person</code>\u7c7b\u662f\u53ef\u6d4b\u8bd5\u7684\uff0c\u800c<code>name</code>\u65b9\u6cd5\u662f\u53ea\u8bfb\u548c\u4e0d\u53ef\u679a\u4e3e\u7684\u3002</p>\n<p>\u4e0b\u9762\u662f\u4f7f\u7528 Decorator \u5199\u6cd5\u7684<a href="https://github.com/ionic-team/stencil">\u7ec4\u4ef6</a>\uff0c\u770b\u4e0a\u53bb\u4e00\u76ee\u4e86\u7136\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-meta">@Component({\n  tag: <span class="hljs-meta-string">\'my-component\'</span>,\n  styleUrl: <span class="hljs-meta-string">\'my-component.scss\'</span>\n})</span>\nexport <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyComponent</span> </span>{\n  <span class="hljs-meta">@Prop()</span> first: string;\n  <span class="hljs-meta">@Prop()</span> last: string;\n  <span class="hljs-meta">@State()</span> isVisible: boolean = <span class="hljs-literal">true</span>;\n\n  render() {\n    <span class="hljs-keyword">return</span> (\n      &lt;p&gt;Hello, my name <span class="hljs-keyword">is</span> {<span class="hljs-keyword">this</span>.first} {<span class="hljs-keyword">this</span>.last}&lt;/p&gt;\n    );\n  }\n}</code></pre>\n<p>\u5982\u679c\u540c\u4e00\u4e2a\u65b9\u6cd5\u6709\u591a\u4e2a\u4fee\u9970\u5668\uff0c\u4f1a\u50cf\u5265\u6d0b\u8471\u4e00\u6837\uff0c\u5148\u4ece\u5916\u5230\u5185\u8fdb\u5165\uff0c\u7136\u540e\u7531\u5185\u5411\u5916\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dec</span>(<span class="hljs-params">id</span>)</span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'evaluated\'</span>, id);\n  <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">target, property, descriptor</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'executed\'</span>, id);\n}\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Example</span> </span>{\n    @dec(<span class="hljs-number">1</span>)\n    @dec(<span class="hljs-number">2</span>)\n    method(){}\n}\n<span class="hljs-comment">// evaluated 1</span>\n<span class="hljs-comment">// evaluated 2</span>\n<span class="hljs-comment">// executed 2</span>\n<span class="hljs-comment">// executed 1</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5916\u5c42\u4fee\u9970\u5668<code>@dec(1)</code>\u5148\u8fdb\u5165\uff0c\u4f46\u662f\u5185\u5c42\u4fee\u9970\u5668<code>@dec(2)</code>\u5148\u6267\u884c\u3002</p>\n<p>\u9664\u4e86\u6ce8\u91ca\uff0c\u4fee\u9970\u5668\u8fd8\u80fd\u7528\u6765\u7c7b\u578b\u68c0\u67e5\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u7c7b\u6765\u8bf4\uff0c\u8fd9\u9879\u529f\u80fd\u76f8\u5f53\u6709\u7528\u3002\u4ece\u957f\u671f\u6765\u770b\uff0c\u5b83\u5c06\u662f JavaScript \u4ee3\u7801\u9759\u6001\u5206\u6790\u7684\u91cd\u8981\u5de5\u5177\u3002</p>\n<h2 id="\u4e3a\u4ec0\u4e48\u4fee\u9970\u5668\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570\uff1f">\u4e3a\u4ec0\u4e48\u4fee\u9970\u5668\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570\uff1f</h2>\n<p>\u4fee\u9970\u5668\u53ea\u80fd\u7528\u4e8e\u7c7b\u548c\u7c7b\u7684\u65b9\u6cd5\uff0c\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570\uff0c\u56e0\u4e3a\u5b58\u5728\u51fd\u6570\u63d0\u5347\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> counter = <span class="hljs-number">0</span>;\n\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">add</span> = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> <span class="hljs-comment">{\n  counter++;\n}</span>;</span>\n\n@<span class="hljs-keyword">add</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span><span class="hljs-params">()</span> <span class="hljs-comment">{\n}</span></span></code></pre>\n<p>\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u610f\u56fe\u662f\u6267\u884c\u540e<code>counter</code>\u7b49\u4e8e 1\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u7ed3\u679c\u662f<code>counter</code>\u7b49\u4e8e 0\u3002\u56e0\u4e3a\u51fd\u6570\u63d0\u5347\uff0c\u4f7f\u5f97\u5b9e\u9645\u6267\u884c\u7684\u4ee3\u7801\u662f\u4e0b\u9762\u8fd9\u6837\u3002</p>\n<pre><code class="language-javascript">@<span class="hljs-keyword">add</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span><span class="hljs-params">()</span> <span class="hljs-comment">{\n}</span>\n\n<span class="hljs-title">var</span> <span class="hljs-title">counter</span>;</span>\n<span class="hljs-keyword">var</span> <span class="hljs-keyword">add</span>;\n\ncounter = <span class="hljs-number">0</span>;\n\n<span class="hljs-keyword">add</span> = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> <span class="hljs-comment">{\n  counter++;\n}</span>;</span></code></pre>\n<p>\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> readOnly = <span class="hljs-built_in">require</span>(<span class="hljs-string">"some-decorator"</span>);\n\n@readOnly\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params"></span>) </span>{\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e5f\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u5b9e\u9645\u6267\u884c\u662f\u4e0b\u9762\u8fd9\u6837\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">var</span> <span class="hljs-keyword">readOnly</span>;\n\n@<span class="hljs-keyword">readOnly</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span><span class="hljs-params">()</span> <span class="hljs-comment">{\n}</span>\n\n<span class="hljs-title">readOnly</span> = <span class="hljs-title">require</span><span class="hljs-params">("some-decorator")</span>;</span></code></pre>\n<p>\u603b\u4e4b\uff0c\u7531\u4e8e\u5b58\u5728\u51fd\u6570\u63d0\u5347\uff0c\u4f7f\u5f97\u4fee\u9970\u5668\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570\u3002\u7c7b\u662f\u4e0d\u4f1a\u63d0\u5347\u7684\uff0c\u6240\u4ee5\u5c31\u6ca1\u6709\u8fd9\u65b9\u9762\u7684\u95ee\u9898\u3002</p>\n<p>\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u4fee\u9970\u51fd\u6570\uff0c\u53ef\u4ee5\u91c7\u7528\u9ad8\u9636\u51fd\u6570\u7684\u5f62\u5f0f\u76f4\u63a5\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">doSomething</span>(<span class="hljs-params">name</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Hello, \'</span> + name);\n}\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loggingDecorator</span>(<span class="hljs-params">wrapped</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Starting\'</span>);\n    <span class="hljs-keyword">const</span> result = wrapped.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>);\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Finished\'</span>);\n    <span class="hljs-keyword">return</span> result;\n  }\n}\n\n<span class="hljs-keyword">const</span> wrapped = loggingDecorator(doSomething);</code></pre>\n<h2 id="core-decoratorsjs">core-decorators.js</h2>\n<p><a href="https://github.com/jayphelps/core-decorators.js">core-decorators.js</a>\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5e38\u89c1\u7684\u4fee\u9970\u5668\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u4fee\u9970\u5668\u3002</p>\n<p><strong>\uff081\uff09@autobind</strong></p>\n<p><code>autobind</code>\u4fee\u9970\u5668\u4f7f\u5f97\u65b9\u6cd5\u4e2d\u7684<code>this</code>\u5bf9\u8c61\uff0c\u7ed1\u5b9a\u539f\u59cb\u5bf9\u8c61\u3002</p>\n<pre><code class="language-javascript">import { autobind } <span class="hljs-keyword">from</span> <span class="hljs-string">\'core-decorators\'</span>;\n\n<span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> {\n  @<span class="hljs-function">autobind\n  <span class="hljs-title">getPerson</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;\n  }\n}\n\n<span class="hljs-keyword">let</span> person = <span class="hljs-keyword">new</span> Person();\n<span class="hljs-keyword">let</span> getPerson = person.getPerson;\n\ngetPerson() === person;\n<span class="hljs-comment">// true</span></code></pre>\n<p><strong>\uff082\uff09@readonly</strong></p>\n<p><code>readonly</code>\u4fee\u9970\u5668\u4f7f\u5f97\u5c5e\u6027\u6216\u65b9\u6cd5\u4e0d\u53ef\u5199\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { readonly } <span class="hljs-keyword">from</span> <span class="hljs-string">\'core-decorators\'</span>;\n\n<span class="hljs-keyword">class</span> Meal {\n  @readonly\n  entree = <span class="hljs-string">\'steak\'</span>;\n}\n\nvar dinner = <span class="hljs-built_in">new</span> Meal();\ndinner.entree = <span class="hljs-string">\'salmon\'</span>;\n// Cannot assign <span class="hljs-keyword">to</span> <span class="hljs-keyword">read</span> <span class="hljs-keyword">only</span> property <span class="hljs-string">\'entree\'</span> <span class="hljs-keyword">of</span> [<span class="hljs-keyword">object</span> <span class="hljs-keyword">Object</span>]</code></pre>\n<p><strong>\uff083\uff09@override</strong></p>\n<p><code>override</code>\u4fee\u9970\u5668\u68c0\u67e5\u5b50\u7c7b\u7684\u65b9\u6cd5\uff0c\u662f\u5426\u6b63\u786e\u8986\u76d6\u4e86\u7236\u7c7b\u7684\u540c\u540d\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u6b63\u786e\u4f1a\u62a5\u9519\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { <span class="hljs-keyword">override</span> } from <span class="hljs-symbol">\'core</span>-decorators\';\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Parent</span> </span>{\n  speak(first, second) {}\n}\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Child</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Parent</span> </span>{\n  <span class="hljs-meta">@override</span>\n  speak() {}\n  <span class="hljs-comment">// SyntaxError: Child#speak() does not properly override Parent#speak(first, second)</span>\n}\n\n<span class="hljs-comment">// or</span>\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Child</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Parent</span> </span>{\n  <span class="hljs-meta">@override</span>\n  speaks() {}\n  <span class="hljs-comment">// SyntaxError: No descriptor matching Child#speaks() was found on the prototype chain.</span>\n  <span class="hljs-comment">//</span>\n  <span class="hljs-comment">//   Did you mean "speak"?</span>\n}</code></pre>\n<p><strong>\uff084\uff09@deprecate (\u522b\u540d@deprecated)</strong></p>\n<p><code>deprecate</code>\u6216<code>deprecated</code>\u4fee\u9970\u5668\u5728\u63a7\u5236\u53f0\u663e\u793a\u4e00\u6761\u8b66\u544a\uff0c\u8868\u793a\u8be5\u65b9\u6cd5\u5c06\u5e9f\u9664\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { deprecate } <span class="hljs-keyword">from</span> <span class="hljs-string">\'core-decorators\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> {</span>\n  @deprecate\n  facepalm() {}\n\n  @deprecate(<span class="hljs-string">\'We stopped facepalming\'</span>)\n  facepalmHard() {}\n\n  @deprecate(<span class="hljs-string">\'We stopped facepalming\'</span>, { url: <span class="hljs-string">\'http://knowyourmeme.com/memes/facepalm\'</span> })\n  facepalmHarder() {}\n}\n\n<span class="hljs-keyword">let</span> person = <span class="hljs-keyword">new</span> Person();\n\nperson.facepalm();\n<span class="hljs-regexp">// DEPRECATION Person<span class="hljs-comment">#facepalm: This function will be removed in future versions.</span>\n\nperson.facepalmHard();\n//</span> DEPRECATION Person<span class="hljs-comment">#facepalmHard: We stopped facepalming</span>\n\nperson.facepalmHarder();\n<span class="hljs-regexp">// DEPRECATION Person<span class="hljs-comment">#facepalmHarder: We stopped facepalming</span>\n//</span>\n<span class="hljs-regexp">//     See http://</span>knowyourmeme.com/memes/facepalm <span class="hljs-keyword">for</span> more details.\n<span class="hljs-regexp">//</span></code></pre>\n<p><strong>\uff085\uff09@suppressWarnings</strong></p>\n<p><code>suppressWarnings</code>\u4fee\u9970\u5668\u6291\u5236<code>deprecated</code>\u4fee\u9970\u5668\u5bfc\u81f4\u7684<code>console.warn()</code>\u8c03\u7528\u3002\u4f46\u662f\uff0c\u5f02\u6b65\u4ee3\u7801\u53d1\u51fa\u7684\u8c03\u7528\u9664\u5916\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { suppressWarnings } <span class="hljs-keyword">from</span> <span class="hljs-string">\'core-decorators\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> {</span>\n  @deprecated\n  facepalm() {}\n\n  @suppressWarnings\n  facepalmWithoutWarning() {\n    <span class="hljs-keyword">this</span>.facepalm();\n  }\n}\n\nlet person = <span class="hljs-keyword">new</span> Person();\n\nperson.facepalmWithoutWarning();\n<span class="hljs-regexp">//</span> <span class="hljs-literal">no</span> warning <span class="hljs-keyword">is</span> logged</code></pre>\n<h2 id="\u4f7f\u7528\u4fee\u9970\u5668\u5b9e\u73b0\u81ea\u52a8\u53d1\u5e03\u4e8b\u4ef6">\u4f7f\u7528\u4fee\u9970\u5668\u5b9e\u73b0\u81ea\u52a8\u53d1\u5e03\u4e8b\u4ef6</h2>\n<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4fee\u9970\u5668\uff0c\u4f7f\u5f97\u5bf9\u8c61\u7684\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u81ea\u52a8\u53d1\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> postal <span class="hljs-keyword">from</span> <span class="hljs-string">"postal/lib/postal.lodash"</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">publish</span>(<span class="hljs-params">topic, channel</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target, name, descriptor</span>) </span>{\n    <span class="hljs-keyword">const</span> fn = descriptor.value;\n\n    descriptor.value = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n      <span class="hljs-keyword">let</span> value = fn.apply(<span class="hljs-keyword">this</span>, <span class="hljs-built_in">arguments</span>);\n      postal.channel(channel || target.channel || <span class="hljs-string">"/"</span>).publish(topic, value);\n    };\n  };\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a<code>publish</code>\u7684\u4fee\u9970\u5668\uff0c\u5b83\u901a\u8fc7\u6539\u5199<code>descriptor.value</code>\uff0c\u4f7f\u5f97\u539f\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u4f1a\u81ea\u52a8\u53d1\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u3002\u5b83\u4f7f\u7528\u7684\u4e8b\u4ef6\u201c\u53d1\u5e03/\u8ba2\u9605\u201d\u5e93\u662f<a href="https://github.com/postaljs/postal.js">Postal.js</a>\u3002</p>\n<p>\u5b83\u7684\u7528\u6cd5\u5982\u4e0b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> publish from <span class="hljs-string">"path/to/decorators/publish"</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FooComponent</span> </span>{\n  <span class="hljs-meta">@publish(<span class="hljs-meta-string">"foo.some.message"</span>, <span class="hljs-meta-string">"component"</span>)</span>\n  someMethod() {\n    <span class="hljs-keyword">return</span> {\n      my: <span class="hljs-string">"data"</span>\n    };\n  }\n  <span class="hljs-meta">@publish(<span class="hljs-meta-string">"foo.some.other"</span>)</span>\n  anotherMethod() {\n    <span class="hljs-comment">// ...</span>\n  }\n}</code></pre>\n<p>\u4ee5\u540e\uff0c\u53ea\u8981\u8c03\u7528<code>someMethod</code>\u6216\u8005<code>anotherMethod</code>\uff0c\u5c31\u4f1a\u81ea\u52a8\u53d1\u51fa\u4e00\u4e2a\u4e8b\u4ef6\u3002</p>\n<pre><code class="language-javascript">let foo = new FooComponent();\n\nfoo.someMethod() <span class="hljs-regexp">//</span> \u5728<span class="hljs-string">"component"</span>\u9891\u9053\u53d1\u5e03<span class="hljs-string">"foo.some.message"</span>\u4e8b\u4ef6\uff0c\u9644\u5e26\u7684\u6570\u636e\u662f{ my: <span class="hljs-string">"data"</span> }\nfoo.anotherMethod() <span class="hljs-regexp">//</span> \u5728<span class="hljs-string">"/"</span>\u9891\u9053\u53d1\u5e03<span class="hljs-string">"foo.some.other"</span>\u4e8b\u4ef6\uff0c\u4e0d\u9644\u5e26\u6570\u636e</code></pre>\n<h2 id="mixin">Mixin</h2>\n<p>\u5728\u4fee\u9970\u5668\u7684\u57fa\u7840\u4e0a\uff0c\u53ef\u4ee5\u5b9e\u73b0<code>Mixin</code>\u6a21\u5f0f\u3002\u6240\u8c13<code>Mixin</code>\u6a21\u5f0f\uff0c\u5c31\u662f\u5bf9\u8c61\u7ee7\u627f\u7684\u4e00\u79cd\u66ff\u4ee3\u65b9\u6848\uff0c\u4e2d\u6587\u8bd1\u4e3a\u201c\u6df7\u5165\u201d\uff08mix in\uff09\uff0c\u610f\u4e3a\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e4b\u4e2d\u6df7\u5165\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002</p>\n<p>\u8bf7\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> Foo = {\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n};\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{}\n\n<span class="hljs-built_in">Object</span>.assign(MyClass.prototype, Foo);\n\n<span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> MyClass();\nobj.foo() <span class="hljs-comment">// \'foo\'</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e4b\u4e2d\uff0c\u5bf9\u8c61<code>Foo</code>\u6709\u4e00\u4e2a<code>foo</code>\u65b9\u6cd5\uff0c\u901a\u8fc7<code>Object.assign</code>\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06<code>foo</code>\u65b9\u6cd5\u201c\u6df7\u5165\u201d<code>MyClass</code>\u7c7b\uff0c\u5bfc\u81f4<code>MyClass</code>\u7684\u5b9e\u4f8b<code>obj</code>\u5bf9\u8c61\u90fd\u5177\u6709<code>foo</code>\u65b9\u6cd5\u3002\u8fd9\u5c31\u662f\u201c\u6df7\u5165\u201d\u6a21\u5f0f\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u73b0\u3002</p>\n<p>\u4e0b\u9762\uff0c\u6211\u4eec\u90e8\u7f72\u4e00\u4e2a\u901a\u7528\u811a\u672c<code>mixins.js</code>\uff0c\u5c06 Mixin \u5199\u6210\u4e00\u4e2a\u4fee\u9970\u5668\u3002</p>\n<pre><code class="language-javascript">export <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">mixins</span><span class="hljs-params">(<span class="hljs-rest_arg">...list</span>)</span> </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(target)</span> </span>{\n    Object.assign(target.prototype, ...list);\n  };\n}</code></pre>\n<p>\u7136\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u8fd9\u4e2a\u4fee\u9970\u5668\uff0c\u4e3a\u7c7b\u201c\u6df7\u5165\u201d\u5404\u79cd\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { mixins } <span class="hljs-keyword">from</span> <span class="hljs-string">\'./mixins\'</span>;\n\n<span class="hljs-keyword">const</span> Foo = {\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n};\n\n@mixins(Foo)\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{}\n\n<span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> MyClass();\nobj.foo() <span class="hljs-comment">// "foo"</span></code></pre>\n<p>\u901a\u8fc7<code>mixins</code>\u8fd9\u4e2a\u4fee\u9970\u5668\uff0c\u5b9e\u73b0\u4e86\u5728<code>MyClass</code>\u7c7b\u4e0a\u9762\u201c\u6df7\u5165\u201d<code>Foo</code>\u5bf9\u8c61\u7684<code>foo</code>\u65b9\u6cd5\u3002</p>\n<p>\u4e0d\u8fc7\uff0c\u4e0a\u9762\u7684\u65b9\u6cd5\u4f1a\u6539\u5199<code>MyClass</code>\u7c7b\u7684<code>prototype</code>\u5bf9\u8c61\uff0c\u5982\u679c\u4e0d\u559c\u6b22\u8fd9\u4e00\u70b9\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u7684\u7ee7\u627f\u5b9e\u73b0 Mixin\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">MyBaseClass</span> </span>{\n  <span class="hljs-comment">/* ... */</span>\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>MyClass</code>\u7ee7\u627f\u4e86<code>MyBaseClass</code>\u3002\u5982\u679c\u6211\u4eec\u60f3\u5728<code>MyClass</code>\u91cc\u9762\u201c\u6df7\u5165\u201d\u4e00\u4e2a<code>foo</code>\u65b9\u6cd5\uff0c\u4e00\u4e2a\u529e\u6cd5\u662f\u5728<code>MyClass</code>\u548c<code>MyBaseClass</code>\u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u6df7\u5165\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u5177\u6709<code>foo</code>\u65b9\u6cd5\uff0c\u5e76\u4e14\u7ee7\u627f\u4e86<code>MyBaseClass</code>\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u7136\u540e<code>MyClass</code>\u518d\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u3002</p>\n<pre><code class="language-javascript">let <span class="hljs-type">MyMixin</span> = (superclass) =&gt; <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">superclass</span> </span>{\n  foo() {\n    console.log(<span class="hljs-symbol">\'foo</span> from <span class="hljs-type">MyMixin</span>\');\n  }\n};</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>MyMixin</code>\u662f\u4e00\u4e2a\u6df7\u5165\u7c7b\u751f\u6210\u5668\uff0c\u63a5\u53d7<code>superclass</code>\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u7ee7\u627f<code>superclass</code>\u7684\u5b50\u7c7b\uff0c\u8be5\u5b50\u7c7b\u5305\u542b\u4e00\u4e2a<code>foo</code>\u65b9\u6cd5\u3002</p>\n<p>\u63a5\u7740\uff0c\u76ee\u6807\u7c7b\u518d\u53bb\u7ee7\u627f\u8fd9\u4e2a\u6df7\u5165\u7c7b\uff0c\u5c31\u8fbe\u5230\u4e86\u201c\u6df7\u5165\u201d<code>foo</code>\u65b9\u6cd5\u7684\u76ee\u7684\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">MyMixin</span>(<span class="hljs-params"><span class="hljs-type">MyBaseClass</span></span>) </span>{\n  <span class="hljs-comment">/* ... */</span>\n}\n\nlet c = <span class="hljs-keyword">new</span> <span class="hljs-type">MyClass</span>();\nc.foo(); <span class="hljs-comment">// "foo from MyMixin"</span></code></pre>\n<p>\u5982\u679c\u9700\u8981\u201c\u6df7\u5165\u201d\u591a\u4e2a\u65b9\u6cd5\uff0c\u5c31\u751f\u6210\u591a\u4e2a\u6df7\u5165\u7c7b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Mixin1</span>(<span class="hljs-params"><span class="hljs-type">Mixin2</span>(<span class="hljs-type">MyBaseClass</span></span>)) </span>{\n  <span class="hljs-comment">/* ... */</span>\n}</code></pre>\n<p>\u8fd9\u79cd\u5199\u6cd5\u7684\u4e00\u4e2a\u597d\u5904\uff0c\u662f\u53ef\u4ee5\u8c03\u7528<code>super</code>\uff0c\u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5728\u201c\u6df7\u5165\u201d\u8fc7\u7a0b\u4e2d\u8986\u76d6\u7236\u7c7b\u7684\u540c\u540d\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript">let <span class="hljs-type">Mixin1</span> = (superclass) =&gt; <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">superclass</span> </span>{\n  foo() {\n    console.log(<span class="hljs-symbol">\'foo</span> from <span class="hljs-type">Mixin1</span>\');\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">super</span>.foo) <span class="hljs-keyword">super</span>.foo();\n  }\n};\n\nlet <span class="hljs-type">Mixin2</span> = (superclass) =&gt; <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">superclass</span> </span>{\n  foo() {\n    console.log(<span class="hljs-symbol">\'foo</span> from <span class="hljs-type">Mixin2</span>\');\n    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">super</span>.foo) <span class="hljs-keyword">super</span>.foo();\n  }\n};\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">S</span> </span>{\n  foo() {\n    console.log(<span class="hljs-symbol">\'foo</span> from <span class="hljs-type">S</span>\');\n  }\n}\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Mixin1</span>(<span class="hljs-params"><span class="hljs-type">Mixin2</span>(<span class="hljs-type">S</span></span>)) </span>{\n  foo() {\n    console.log(<span class="hljs-symbol">\'foo</span> from <span class="hljs-type">C</span>\');\n    <span class="hljs-keyword">super</span>.foo();\n  }\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u6bcf\u4e00\u6b21<code>\u6df7\u5165</code>\u53d1\u751f\u65f6\uff0c\u90fd\u8c03\u7528\u4e86\u7236\u7c7b\u7684<code>super.foo</code>\u65b9\u6cd5\uff0c\u5bfc\u81f4\u7236\u7c7b\u7684\u540c\u540d\u65b9\u6cd5\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u884c\u4e3a\u88ab\u4fdd\u7559\u4e86\u4e0b\u6765\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">new</span> <span class="hljs-type">C</span>().foo()\n<span class="hljs-comment">// foo from C</span>\n<span class="hljs-comment">// foo from Mixin1</span>\n<span class="hljs-comment">// foo from Mixin2</span>\n<span class="hljs-comment">// foo from S</span></code></pre>\n<h2 id="trait">Trait</h2>\n<p>Trait \u4e5f\u662f\u4e00\u79cd\u4fee\u9970\u5668\uff0c\u6548\u679c\u4e0e Mixin \u7c7b\u4f3c\uff0c\u4f46\u662f\u63d0\u4f9b\u66f4\u591a\u529f\u80fd\uff0c\u6bd4\u5982\u9632\u6b62\u540c\u540d\u65b9\u6cd5\u7684\u51b2\u7a81\u3001\u6392\u9664\u6df7\u5165\u67d0\u4e9b\u65b9\u6cd5\u3001\u4e3a\u6df7\u5165\u7684\u65b9\u6cd5\u8d77\u522b\u540d\u7b49\u7b49\u3002</p>\n<p>\u4e0b\u9762\u91c7\u7528<a href="https://github.com/CocktailJS/traits-decorator">traits-decorator</a>\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u6a21\u5757\u4f5c\u4e3a\u4f8b\u5b50\u3002\u8fd9\u4e2a\u6a21\u5757\u63d0\u4f9b\u7684<code>traits</code>\u4fee\u9970\u5668\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u63a5\u53d7\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u63a5\u53d7 ES6 \u7c7b\u4f5c\u4e3a\u53c2\u6570\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { traits } <span class="hljs-keyword">from</span> <span class="hljs-string">\'traits-decorator\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TFoo</span> </span>{\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n}\n\n<span class="hljs-keyword">const</span> TBar = {\n  bar() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'bar\'</span>) }\n};\n\n@traits(TFoo, TBar)\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{ }\n\n<span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> MyClass();\nobj.foo() <span class="hljs-comment">// foo</span>\nobj.bar() <span class="hljs-comment">// bar</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7<code>traits</code>\u4fee\u9970\u5668\uff0c\u5728<code>MyClass</code>\u7c7b\u4e0a\u9762\u201c\u6df7\u5165\u201d\u4e86<code>TFoo</code>\u7c7b\u7684<code>foo</code>\u65b9\u6cd5\u548c<code>TBar</code>\u5bf9\u8c61\u7684<code>bar</code>\u65b9\u6cd5\u3002</p>\n<p>Trait \u4e0d\u5141\u8bb8\u201c\u6df7\u5165\u201d\u540c\u540d\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { traits } <span class="hljs-keyword">from</span> <span class="hljs-string">\'traits-decorator\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TFoo</span> {</span>\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n}\n\n<span class="hljs-keyword">const</span> TBar = {\n  bar() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'bar\'</span>) },\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n};\n\n@traits(TFoo, TBar)\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> { }</span>\n<span class="hljs-regexp">// \u62a5\u9519\n//</span> <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Error(<span class="hljs-string">\'Method named: \'</span> + methodName + <span class="hljs-string">\' is defined twice.\'</span>);\n<span class="hljs-regexp">//        ^\n//</span> Error: Method named: foo <span class="hljs-keyword">is</span> defined twice.</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>TFoo</code>\u548c<code>TBar</code>\u90fd\u6709<code>foo</code>\u65b9\u6cd5\uff0c\u7ed3\u679c<code>traits</code>\u4fee\u9970\u5668\u62a5\u9519\u3002</p>\n<p>\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u6392\u9664<code>TBar</code>\u7684<code>foo</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { traits, excludes } <span class="hljs-keyword">from</span> <span class="hljs-string">\'traits-decorator\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TFoo</span> </span>{\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n}\n\n<span class="hljs-keyword">const</span> TBar = {\n  bar() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'bar\'</span>) },\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n};\n\n@traits(TFoo, <span class="hljs-attr">TBar</span>::excludes(<span class="hljs-string">\'foo\'</span>))\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{ }\n\n<span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> MyClass();\nobj.foo() <span class="hljs-comment">// foo</span>\nobj.bar() <span class="hljs-comment">// bar</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4f7f\u7528\u7ed1\u5b9a\u8fd0\u7b97\u7b26\uff08::\uff09\u5728<code>TBar</code>\u4e0a\u6392\u9664<code>foo</code>\u65b9\u6cd5\uff0c\u6df7\u5165\u65f6\u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86\u3002</p>\n<p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4e3a<code>TBar</code>\u7684<code>foo</code>\u65b9\u6cd5\u8d77\u4e00\u4e2a\u522b\u540d\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">import</span> { traits, alias } <span class="hljs-keyword">from</span> <span class="hljs-string">\'traits-decorator\'</span>;\n\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TFoo</span> </span>{\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n}\n\n<span class="hljs-keyword">const</span> TBar = {\n  bar() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'bar\'</span>) },\n  foo() { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'foo\'</span>) }\n};\n\n@traits(TFoo, <span class="hljs-attr">TBar</span>::alias({<span class="hljs-attr">foo</span>: <span class="hljs-string">\'aliasFoo\'</span>}))\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> </span>{ }\n\n<span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> MyClass();\nobj.foo() <span class="hljs-comment">// foo</span>\nobj.aliasFoo() <span class="hljs-comment">// foo</span>\nobj.bar() <span class="hljs-comment">// bar</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e3a<code>TBar</code>\u7684<code>foo</code>\u65b9\u6cd5\u8d77\u4e86\u522b\u540d<code>aliasFoo</code>\uff0c\u4e8e\u662f<code>MyClass</code>\u4e5f\u53ef\u4ee5\u6df7\u5165<code>TBar</code>\u7684<code>foo</code>\u65b9\u6cd5\u4e86\u3002</p>\n<p><code>alias</code>\u548c<code>excludes</code>\u65b9\u6cd5\uff0c\u53ef\u4ee5\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002</p>\n<pre><code class="language-javascript">@traits(TExample::excludes(<span class="hljs-string">\'foo\'</span>,<span class="hljs-string">\'bar\'</span>)<span class="hljs-symbol">:</span><span class="hljs-symbol">:alias</span>({<span class="hljs-symbol">baz:</span><span class="hljs-string">\'exampleBaz\'</span>}))\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> {}</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u6392\u9664<code>\u4e86TExample</code>\u7684<code>foo</code>\u65b9\u6cd5\u548c<code>bar</code>\u65b9\u6cd5\uff0c\u4e3a<code>baz</code>\u65b9\u6cd5\u8d77\u4e86\u522b\u540d<code>exampleBaz</code>\u3002</p>\n<p><code>as</code>\u65b9\u6cd5\u5219\u4e3a\u4e0a\u9762\u7684\u4ee3\u7801\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-meta">@traits</span>(<span class="hljs-string">TExample:</span>:<span class="hljs-keyword">as</span>({<span class="hljs-string">excludes:</span>[<span class="hljs-string">\'foo\'</span>, <span class="hljs-string">\'bar\'</span>], <span class="hljs-string">alias:</span> {<span class="hljs-string">baz:</span> <span class="hljs-string">\'exampleBaz\'</span>}}))\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyClass</span> {</span>}</code></pre>\n<h2 id="babel-\u8f6c\u7801\u5668\u7684\u652f\u6301">Babel \u8f6c\u7801\u5668\u7684\u652f\u6301</h2>\n<p>\u76ee\u524d\uff0cBabel \u8f6c\u7801\u5668\u5df2\u7ecf\u652f\u6301 Decorator\u3002</p>\n<p>\u9996\u5148\uff0c\u5b89\u88c5<code>babel-core</code>\u548c<code>babel-plugin-transform-decorators</code>\u3002\u7531\u4e8e\u540e\u8005\u5305\u62ec\u5728<code>babel-preset-stage-0</code>\u4e4b\u4e2d\uff0c\u6240\u4ee5\u6539\u4e3a\u5b89\u88c5<code>babel-preset-stage-0</code>\u4ea6\u53ef\u3002</p>\n<pre><code class="language-bash">$ npm <span class="hljs-keyword">install </span><span class="hljs-keyword">babel-core </span><span class="hljs-keyword">babel-plugin-transform-decorators</span></code></pre>\n<p>\u7136\u540e\uff0c\u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6<code>.babelrc</code>\u3002</p>\n<pre><code class="language-javascript">{\n  <span class="hljs-attr">"plugins"</span>: [<span class="hljs-string">"transform-decorators"</span>]\n}</code></pre>\n<p>\u8fd9\u65f6\uff0cBabel \u5c31\u53ef\u4ee5\u5bf9 Decorator \u8f6c\u7801\u4e86\u3002</p>\n<p>\u811a\u672c\u4e2d\u6253\u5f00\u7684\u547d\u4ee4\u5982\u4e0b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-selector-tag">babel</span><span class="hljs-selector-class">.transform</span>("<span class="hljs-selector-tag">code</span>", {<span class="hljs-attribute">plugins</span>: [<span class="hljs-string">"transform-decorators"</span>]})</code></pre>\n<p>Babel \u7684\u5b98\u65b9\u7f51\u7ad9\u63d0\u4f9b\u4e00\u4e2a<a href="https://babeljs.io/repl/">\u5728\u7ebf\u8f6c\u7801\u5668</a>\uff0c\u53ea\u8981\u52fe\u9009 Experimental\uff0c\u5c31\u80fd\u652f\u6301 Decorator \u7684\u5728\u7ebf\u8f6c\u7801\u3002</p>\n'}}]);