(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[61],{zKuL:function(s,n){s.exports='<h1 id="promise-\u5bf9\u8c61">Promise \u5bf9\u8c61</h1>\n<h2 id="promise-\u7684\u542b\u4e49">Promise \u7684\u542b\u4e49</h2>\n<p>Promise \u662f\u5f02\u6b65\u7f16\u7a0b\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u4f20\u7edf\u7684\u89e3\u51b3\u65b9\u6848\u2014\u2014\u56de\u8c03\u51fd\u6570\u548c\u4e8b\u4ef6\u2014\u2014\u66f4\u5408\u7406\u548c\u66f4\u5f3a\u5927\u3002\u5b83\u7531\u793e\u533a\u6700\u65e9\u63d0\u51fa\u548c\u5b9e\u73b0\uff0cES6 \u5c06\u5176\u5199\u8fdb\u4e86\u8bed\u8a00\u6807\u51c6\uff0c\u7edf\u4e00\u4e86\u7528\u6cd5\uff0c\u539f\u751f\u63d0\u4f9b\u4e86<code>Promise</code>\u5bf9\u8c61\u3002</p>\n<p>\u6240\u8c13<code>Promise</code>\uff0c\u7b80\u5355\u8bf4\u5c31\u662f\u4e00\u4e2a\u5bb9\u5668\uff0c\u91cc\u9762\u4fdd\u5b58\u7740\u67d0\u4e2a\u672a\u6765\u624d\u4f1a\u7ed3\u675f\u7684\u4e8b\u4ef6\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff09\u7684\u7ed3\u679c\u3002\u4ece\u8bed\u6cd5\u4e0a\u8bf4\uff0cPromise \u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ece\u5b83\u53ef\u4ee5\u83b7\u53d6\u5f02\u6b65\u64cd\u4f5c\u7684\u6d88\u606f\u3002Promise \u63d0\u4f9b\u7edf\u4e00\u7684 API\uff0c\u5404\u79cd\u5f02\u6b65\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\u3002</p>\n<p><code>Promise</code>\u5bf9\u8c61\u6709\u4ee5\u4e0b\u4e24\u4e2a\u7279\u70b9\u3002</p>\n<p>\uff081\uff09\u5bf9\u8c61\u7684\u72b6\u6001\u4e0d\u53d7\u5916\u754c\u5f71\u54cd\u3002<code>Promise</code>\u5bf9\u8c61\u4ee3\u8868\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u6709\u4e09\u79cd\u72b6\u6001\uff1a<code>pending</code>\uff08\u8fdb\u884c\u4e2d\uff09\u3001<code>fulfilled</code>\uff08\u5df2\u6210\u529f\uff09\u548c<code>rejected</code>\uff08\u5df2\u5931\u8d25\uff09\u3002\u53ea\u6709\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u51b3\u5b9a\u5f53\u524d\u662f\u54ea\u4e00\u79cd\u72b6\u6001\uff0c\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\u90fd\u65e0\u6cd5\u6539\u53d8\u8fd9\u4e2a\u72b6\u6001\u3002\u8fd9\u4e5f\u662f<code>Promise</code>\u8fd9\u4e2a\u540d\u5b57\u7684\u7531\u6765\uff0c\u5b83\u7684\u82f1\u8bed\u610f\u601d\u5c31\u662f\u201c\u627f\u8bfa\u201d\uff0c\u8868\u793a\u5176\u4ed6\u624b\u6bb5\u65e0\u6cd5\u6539\u53d8\u3002</p>\n<p>\uff082\uff09\u4e00\u65e6\u72b6\u6001\u6539\u53d8\uff0c\u5c31\u4e0d\u4f1a\u518d\u53d8\uff0c\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u7ed3\u679c\u3002<code>Promise</code>\u5bf9\u8c61\u7684\u72b6\u6001\u6539\u53d8\uff0c\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\u4ece<code>pending</code>\u53d8\u4e3a<code>fulfilled</code>\u548c\u4ece<code>pending</code>\u53d8\u4e3a<code>rejected</code>\u3002\u53ea\u8981\u8fd9\u4e24\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u72b6\u6001\u5c31\u51dd\u56fa\u4e86\uff0c\u4e0d\u4f1a\u518d\u53d8\u4e86\uff0c\u4f1a\u4e00\u76f4\u4fdd\u6301\u8fd9\u4e2a\u7ed3\u679c\uff0c\u8fd9\u65f6\u5c31\u79f0\u4e3a resolved\uff08\u5df2\u5b9a\u578b\uff09\u3002\u5982\u679c\u6539\u53d8\u5df2\u7ecf\u53d1\u751f\u4e86\uff0c\u4f60\u518d\u5bf9<code>Promise</code>\u5bf9\u8c61\u6dfb\u52a0\u56de\u8c03\u51fd\u6570\uff0c\u4e5f\u4f1a\u7acb\u5373\u5f97\u5230\u8fd9\u4e2a\u7ed3\u679c\u3002\u8fd9\u4e0e\u4e8b\u4ef6\uff08Event\uff09\u5b8c\u5168\u4e0d\u540c\uff0c\u4e8b\u4ef6\u7684\u7279\u70b9\u662f\uff0c\u5982\u679c\u4f60\u9519\u8fc7\u4e86\u5b83\uff0c\u518d\u53bb\u76d1\u542c\uff0c\u662f\u5f97\u4e0d\u5230\u7ed3\u679c\u7684\u3002</p>\n<p>\u6ce8\u610f\uff0c\u4e3a\u4e86\u884c\u6587\u65b9\u4fbf\uff0c\u672c\u7ae0\u540e\u9762\u7684<code>resolved</code>\u7edf\u4e00\u53ea\u6307<code>fulfilled</code>\u72b6\u6001\uff0c\u4e0d\u5305\u542b<code>rejected</code>\u72b6\u6001\u3002</p>\n<p>\u6709\u4e86<code>Promise</code>\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u5c06\u5f02\u6b65\u64cd\u4f5c\u4ee5\u540c\u6b65\u64cd\u4f5c\u7684\u6d41\u7a0b\u8868\u8fbe\u51fa\u6765\uff0c\u907f\u514d\u4e86\u5c42\u5c42\u5d4c\u5957\u7684\u56de\u8c03\u51fd\u6570\u3002\u6b64\u5916\uff0c<code>Promise</code>\u5bf9\u8c61\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4f7f\u5f97\u63a7\u5236\u5f02\u6b65\u64cd\u4f5c\u66f4\u52a0\u5bb9\u6613\u3002</p>\n<p><code>Promise</code>\u4e5f\u6709\u4e00\u4e9b\u7f3a\u70b9\u3002\u9996\u5148\uff0c\u65e0\u6cd5\u53d6\u6d88<code>Promise</code>\uff0c\u4e00\u65e6\u65b0\u5efa\u5b83\u5c31\u4f1a\u7acb\u5373\u6267\u884c\uff0c\u65e0\u6cd5\u4e2d\u9014\u53d6\u6d88\u3002\u5176\u6b21\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\u56de\u8c03\u51fd\u6570\uff0c<code>Promise</code>\u5185\u90e8\u629b\u51fa\u7684\u9519\u8bef\uff0c\u4e0d\u4f1a\u53cd\u5e94\u5230\u5916\u90e8\u3002\u7b2c\u4e09\uff0c\u5f53\u5904\u4e8e<code>pending</code>\u72b6\u6001\u65f6\uff0c\u65e0\u6cd5\u5f97\u77e5\u76ee\u524d\u8fdb\u5c55\u5230\u54ea\u4e00\u4e2a\u9636\u6bb5\uff08\u521a\u521a\u5f00\u59cb\u8fd8\u662f\u5373\u5c06\u5b8c\u6210\uff09\u3002</p>\n<p>\u5982\u679c\u67d0\u4e9b\u4e8b\u4ef6\u4e0d\u65ad\u5730\u53cd\u590d\u53d1\u751f\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u4f7f\u7528 <a href="https://nodejs.org/api/stream.html">Stream</a> \u6a21\u5f0f\u662f\u6bd4\u90e8\u7f72<code>Promise</code>\u66f4\u597d\u7684\u9009\u62e9\u3002</p>\n<h2 id="\u57fa\u672c\u7528\u6cd5">\u57fa\u672c\u7528\u6cd5</h2>\n<p>ES6 \u89c4\u5b9a\uff0c<code>Promise</code>\u5bf9\u8c61\u662f\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u7528\u6765\u751f\u6210<code>Promise</code>\u5b9e\u4f8b\u3002</p>\n<p>\u4e0b\u9762\u4ee3\u7801\u521b\u9020\u4e86\u4e00\u4e2a<code>Promise</code>\u5b9e\u4f8b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n  <span class="hljs-comment">// ... some code</span>\n\n  <span class="hljs-keyword">if</span> (<span class="hljs-comment">/* \u5f02\u6b65\u64cd\u4f5c\u6210\u529f */</span>){\n    resolve(value);\n  } <span class="hljs-keyword">else</span> {\n    reject(error);\n  }\n});</code></pre>\n<p><code>Promise</code>\u6784\u9020\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662f<code>resolve</code>\u548c<code>reject</code>\u3002\u5b83\u4eec\u662f\u4e24\u4e2a\u51fd\u6570\uff0c\u7531 JavaScript \u5f15\u64ce\u63d0\u4f9b\uff0c\u4e0d\u7528\u81ea\u5df1\u90e8\u7f72\u3002</p>\n<p><code>resolve</code>\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff0c\u5c06<code>Promise</code>\u5bf9\u8c61\u7684\u72b6\u6001\u4ece\u201c\u672a\u5b8c\u6210\u201d\u53d8\u4e3a\u201c\u6210\u529f\u201d\uff08\u5373\u4ece pending \u53d8\u4e3a resolved\uff09\uff0c\u5728\u5f02\u6b65\u64cd\u4f5c\u6210\u529f\u65f6\u8c03\u7528\uff0c\u5e76\u5c06\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u51fa\u53bb\uff1b<code>reject</code>\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff0c\u5c06<code>Promise</code>\u5bf9\u8c61\u7684\u72b6\u6001\u4ece\u201c\u672a\u5b8c\u6210\u201d\u53d8\u4e3a\u201c\u5931\u8d25\u201d\uff08\u5373\u4ece pending \u53d8\u4e3a rejected\uff09\uff0c\u5728\u5f02\u6b65\u64cd\u4f5c\u5931\u8d25\u65f6\u8c03\u7528\uff0c\u5e76\u5c06\u5f02\u6b65\u64cd\u4f5c\u62a5\u51fa\u7684\u9519\u8bef\uff0c\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u51fa\u53bb\u3002</p>\n<p><code>Promise</code>\u5b9e\u4f8b\u751f\u6210\u4ee5\u540e\uff0c\u53ef\u4ee5\u7528<code>then</code>\u65b9\u6cd5\u5206\u522b\u6307\u5b9a<code>resolved</code>\u72b6\u6001\u548c<code>rejected</code>\u72b6\u6001\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<pre><code class="language-javascript">promise.<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(value)</span> {</span>\n  <span class="hljs-comment">// success</span>\n}, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error)</span> {</span>\n  <span class="hljs-comment">// failure</span>\n});</code></pre>\n<p><code>then</code>\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4e24\u4e2a\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u7b2c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u662f<code>Promise</code>\u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u4e3a<code>resolved</code>\u65f6\u8c03\u7528\uff0c\u7b2c\u4e8c\u4e2a\u56de\u8c03\u51fd\u6570\u662f<code>Promise</code>\u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u4e3a<code>rejected</code>\u65f6\u8c03\u7528\u3002\u5176\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u51fd\u6570\u662f\u53ef\u9009\u7684\uff0c\u4e0d\u4e00\u5b9a\u8981\u63d0\u4f9b\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u63a5\u53d7<code>Promise</code>\u5bf9\u8c61\u4f20\u51fa\u7684\u503c\u4f5c\u4e3a\u53c2\u6570\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a<code>Promise</code>\u5bf9\u8c61\u7684\u7b80\u5355\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeout</span>(<span class="hljs-params">ms</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n    setTimeout(resolve, ms, <span class="hljs-string">\'done\'</span>);\n  });\n}\n\ntimeout(<span class="hljs-number">100</span>).then(<span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(value);\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>timeout</code>\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a<code>Promise</code>\u5b9e\u4f8b\uff0c\u8868\u793a\u4e00\u6bb5\u65f6\u95f4\u4ee5\u540e\u624d\u4f1a\u53d1\u751f\u7684\u7ed3\u679c\u3002\u8fc7\u4e86\u6307\u5b9a\u7684\u65f6\u95f4\uff08<code>ms</code>\u53c2\u6570\uff09\u4ee5\u540e\uff0c<code>Promise</code>\u5b9e\u4f8b\u7684\u72b6\u6001\u53d8\u4e3a<code>resolved</code>\uff0c\u5c31\u4f1a\u89e6\u53d1<code>then</code>\u65b9\u6cd5\u7ed1\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>Promise \u65b0\u5efa\u540e\u5c31\u4f1a\u7acb\u5373\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">let</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Promise\'</span>);\n  resolve();\n});\n\npromise.then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'resolved.\'</span>);\n});\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Hi!\'</span>);\n\n<span class="hljs-comment">// Promise</span>\n<span class="hljs-comment">// Hi!</span>\n<span class="hljs-comment">// resolved</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0cPromise \u65b0\u5efa\u540e\u7acb\u5373\u6267\u884c\uff0c\u6240\u4ee5\u9996\u5148\u8f93\u51fa\u7684\u662f<code>Promise</code>\u3002\u7136\u540e\uff0c<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c06\u5728\u5f53\u524d\u811a\u672c\u6240\u6709\u540c\u6b65\u4efb\u52a1\u6267\u884c\u5b8c\u624d\u4f1a\u6267\u884c\uff0c\u6240\u4ee5<code>resolved</code>\u6700\u540e\u8f93\u51fa\u3002</p>\n<p>\u4e0b\u9762\u662f\u5f02\u6b65\u52a0\u8f7d\u56fe\u7247\u7684\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadImageAsync</span>(<span class="hljs-params">url</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Promise(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n    <span class="hljs-keyword">const</span> image = <span class="hljs-keyword">new</span> Image();\n\n    image.onload = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n      resolve(image);\n    };\n\n    image.onerror = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n      reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'Could not load image at \'</span> + <span class="hljs-built_in">url</span>));\n    };\n\n    image.src = <span class="hljs-built_in">url</span>;\n  });\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528<code>Promise</code>\u5305\u88c5\u4e86\u4e00\u4e2a\u56fe\u7247\u52a0\u8f7d\u7684\u5f02\u6b65\u64cd\u4f5c\u3002\u5982\u679c\u52a0\u8f7d\u6210\u529f\uff0c\u5c31\u8c03\u7528<code>resolve</code>\u65b9\u6cd5\uff0c\u5426\u5219\u5c31\u8c03\u7528<code>reject</code>\u65b9\u6cd5\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7528<code>Promise</code>\u5bf9\u8c61\u5b9e\u73b0\u7684 Ajax \u64cd\u4f5c\u7684\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> getJSON = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">url</span>) </span>{\n  <span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>)</span>{\n    <span class="hljs-keyword">const</span> handler = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.readyState !== <span class="hljs-number">4</span>) {\n        <span class="hljs-keyword">return</span>;\n      }\n      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>.status === <span class="hljs-number">200</span>) {\n        resolve(<span class="hljs-keyword">this</span>.response);\n      } <span class="hljs-keyword">else</span> {\n        reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-keyword">this</span>.statusText));\n      }\n    };\n    <span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> XMLHttpRequest();\n    client.open(<span class="hljs-string">"GET"</span>, url);\n    client.onreadystatechange = handler;\n    client.responseType = <span class="hljs-string">"json"</span>;\n    client.setRequestHeader(<span class="hljs-string">"Accept"</span>, <span class="hljs-string">"application/json"</span>);\n    client.send();\n\n  });\n\n  <span class="hljs-keyword">return</span> promise;\n};\n\ngetJSON(<span class="hljs-string">"/posts.json"</span>).then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">json</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Contents: \'</span> + json);\n}, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>{\n  <span class="hljs-built_in">console</span>.error(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>, error);\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>getJSON</code>\u662f\u5bf9 XMLHttpRequest \u5bf9\u8c61\u7684\u5c01\u88c5\uff0c\u7528\u4e8e\u53d1\u51fa\u4e00\u4e2a\u9488\u5bf9 JSON \u6570\u636e\u7684 HTTP \u8bf7\u6c42\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a<code>Promise</code>\u5bf9\u8c61\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728<code>getJSON</code>\u5185\u90e8\uff0c<code>resolve</code>\u51fd\u6570\u548c<code>reject</code>\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u90fd\u5e26\u6709\u53c2\u6570\u3002</p>\n<p>\u5982\u679c\u8c03\u7528<code>resolve</code>\u51fd\u6570\u548c<code>reject</code>\u51fd\u6570\u65f6\u5e26\u6709\u53c2\u6570\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u53c2\u6570\u4f1a\u88ab\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u3002<code>reject</code>\u51fd\u6570\u7684\u53c2\u6570\u901a\u5e38\u662f<code>Error</code>\u5bf9\u8c61\u7684\u5b9e\u4f8b\uff0c\u8868\u793a\u629b\u51fa\u7684\u9519\u8bef\uff1b<code>resolve</code>\u51fd\u6570\u7684\u53c2\u6570\u9664\u4e86\u6b63\u5e38\u7684\u503c\u4ee5\u5916\uff0c\u8fd8\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a Promise \u5b9e\u4f8b\uff0c\u6bd4\u5982\u50cf\u4e0b\u9762\u8fd9\u6837\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n  <span class="hljs-comment">// ...</span>\n});\n\n<span class="hljs-keyword">const</span> p2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n  <span class="hljs-comment">// ...</span>\n  resolve(p1);\n})</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>p1</code>\u548c<code>p2</code>\u90fd\u662f Promise \u7684\u5b9e\u4f8b\uff0c\u4f46\u662f<code>p2</code>\u7684<code>resolve</code>\u65b9\u6cd5\u5c06<code>p1</code>\u4f5c\u4e3a\u53c2\u6570\uff0c\u5373\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\u662f\u8fd4\u56de\u53e6\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\u3002</p>\n<p>\u6ce8\u610f\uff0c\u8fd9\u65f6<code>p1</code>\u7684\u72b6\u6001\u5c31\u4f1a\u4f20\u9012\u7ed9<code>p2</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>p1</code>\u7684\u72b6\u6001\u51b3\u5b9a\u4e86<code>p2</code>\u7684\u72b6\u6001\u3002\u5982\u679c<code>p1</code>\u7684\u72b6\u6001\u662f<code>pending</code>\uff0c\u90a3\u4e48<code>p2</code>\u7684\u56de\u8c03\u51fd\u6570\u5c31\u4f1a\u7b49\u5f85<code>p1</code>\u7684\u72b6\u6001\u6539\u53d8\uff1b\u5982\u679c<code>p1</code>\u7684\u72b6\u6001\u5df2\u7ecf\u662f<code>resolved</code>\u6216\u8005<code>rejected</code>\uff0c\u90a3\u4e48<code>p2</code>\u7684\u56de\u8c03\u51fd\u6570\u5c06\u4f1a\u7acb\u523b\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n  setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'fail\'</span>)), <span class="hljs-number">3000</span>)\n})\n\n<span class="hljs-keyword">const</span> p2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n  setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> resolve(p1), <span class="hljs-number">1000</span>)\n})\n\np2\n  .then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(result))\n  .catch(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(error))\n<span class="hljs-comment">// Error: fail</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>p1</code>\u662f\u4e00\u4e2a Promise\uff0c3 \u79d2\u4e4b\u540e\u53d8\u4e3a<code>rejected</code>\u3002<code>p2</code>\u7684\u72b6\u6001\u5728 1 \u79d2\u4e4b\u540e\u6539\u53d8\uff0c<code>resolve</code>\u65b9\u6cd5\u8fd4\u56de\u7684\u662f<code>p1</code>\u3002\u7531\u4e8e<code>p2</code>\u8fd4\u56de\u7684\u662f\u53e6\u4e00\u4e2a Promise\uff0c\u5bfc\u81f4<code>p2</code>\u81ea\u5df1\u7684\u72b6\u6001\u65e0\u6548\u4e86\uff0c\u7531<code>p1</code>\u7684\u72b6\u6001\u51b3\u5b9a<code>p2</code>\u7684\u72b6\u6001\u3002\u6240\u4ee5\uff0c\u540e\u9762\u7684<code>then</code>\u8bed\u53e5\u90fd\u53d8\u6210\u9488\u5bf9\u540e\u8005\uff08<code>p1</code>\uff09\u3002\u53c8\u8fc7\u4e86 2 \u79d2\uff0c<code>p1</code>\u53d8\u4e3a<code>rejected</code>\uff0c\u5bfc\u81f4\u89e6\u53d1<code>catch</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\u6ce8\u610f\uff0c\u8c03\u7528<code>resolve</code>\u6216<code>reject</code>\u5e76\u4e0d\u4f1a\u7ec8\u7ed3 Promise \u7684\u53c2\u6570\u51fd\u6570\u7684\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n  resolve(<span class="hljs-number">1</span>);\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-number">2</span>);\n}).then(<span class="hljs-function"><span class="hljs-params">r</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(r);\n});\n<span class="hljs-comment">// 2</span>\n<span class="hljs-comment">// 1</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u8c03\u7528<code>resolve(1)</code>\u4ee5\u540e\uff0c\u540e\u9762\u7684<code>console.log(2)</code>\u8fd8\u662f\u4f1a\u6267\u884c\uff0c\u5e76\u4e14\u4f1a\u9996\u5148\u6253\u5370\u51fa\u6765\u3002\u8fd9\u662f\u56e0\u4e3a\u7acb\u5373 resolved \u7684 Promise \u662f\u5728\u672c\u8f6e\u4e8b\u4ef6\u5faa\u73af\u7684\u672b\u5c3e\u6267\u884c\uff0c\u603b\u662f\u665a\u4e8e\u672c\u8f6e\u5faa\u73af\u7684\u540c\u6b65\u4efb\u52a1\u3002</p>\n<p>\u4e00\u822c\u6765\u8bf4\uff0c\u8c03\u7528<code>resolve</code>\u6216<code>reject</code>\u4ee5\u540e\uff0cPromise \u7684\u4f7f\u547d\u5c31\u5b8c\u6210\u4e86\uff0c\u540e\u7ee7\u64cd\u4f5c\u5e94\u8be5\u653e\u5230<code>then</code>\u65b9\u6cd5\u91cc\u9762\uff0c\u800c\u4e0d\u5e94\u8be5\u76f4\u63a5\u5199\u5728<code>resolve</code>\u6216<code>reject</code>\u7684\u540e\u9762\u3002\u6240\u4ee5\uff0c\u6700\u597d\u5728\u5b83\u4eec\u524d\u9762\u52a0\u4e0a<code>return</code>\u8bed\u53e5\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u610f\u5916\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n  <span class="hljs-keyword">return</span> resolve(<span class="hljs-number">1</span>);\n  <span class="hljs-comment">// \u540e\u9762\u7684\u8bed\u53e5\u4e0d\u4f1a\u6267\u884c</span>\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-number">2</span>);\n})</code></pre>\n<h2 id="promiseprototypethen">Promise.prototype.then()</h2>\n<p>Promise \u5b9e\u4f8b\u5177\u6709<code>then</code>\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>then</code>\u65b9\u6cd5\u662f\u5b9a\u4e49\u5728\u539f\u578b\u5bf9\u8c61<code>Promise.prototype</code>\u4e0a\u7684\u3002\u5b83\u7684\u4f5c\u7528\u662f\u4e3a Promise \u5b9e\u4f8b\u6dfb\u52a0\u72b6\u6001\u6539\u53d8\u65f6\u7684\u56de\u8c03\u51fd\u6570\u3002\u524d\u9762\u8bf4\u8fc7\uff0c<code>then</code>\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f<code>resolved</code>\u72b6\u6001\u7684\u56de\u8c03\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\u53ef\u9009\uff09\u662f<code>rejected</code>\u72b6\u6001\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p><code>then</code>\u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u65b0\u7684<code>Promise</code>\u5b9e\u4f8b\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u539f\u6765\u90a3\u4e2a<code>Promise</code>\u5b9e\u4f8b\uff09\u3002\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u94fe\u5f0f\u5199\u6cd5\uff0c\u5373<code>then</code>\u65b9\u6cd5\u540e\u9762\u518d\u8c03\u7528\u53e6\u4e00\u4e2a<code>then</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript">getJSON(<span class="hljs-string">"/posts.json"</span>).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(json)</span> {</span>\n  <span class="hljs-keyword">return</span> json.post;\n}).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(post)</span> {</span>\n  <span class="hljs-comment">// ...</span>\n});</code></pre>\n<p>\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528<code>then</code>\u65b9\u6cd5\uff0c\u4f9d\u6b21\u6307\u5b9a\u4e86\u4e24\u4e2a\u56de\u8c03\u51fd\u6570\u3002\u7b2c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u5b8c\u6210\u4ee5\u540e\uff0c\u4f1a\u5c06\u8fd4\u56de\u7ed3\u679c\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f20\u5165\u7b2c\u4e8c\u4e2a\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\u91c7\u7528\u94fe\u5f0f\u7684<code>then</code>\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u7ec4\u6309\u7167\u6b21\u5e8f\u8c03\u7528\u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u65f6\uff0c\u524d\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u6709\u53ef\u80fd\u8fd4\u56de\u7684\u8fd8\u662f\u4e00\u4e2a<code>Promise</code>\u5bf9\u8c61\uff08\u5373\u6709\u5f02\u6b65\u64cd\u4f5c\uff09\uff0c\u8fd9\u65f6\u540e\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u4f1a\u7b49\u5f85\u8be5<code>Promise</code>\u5bf9\u8c61\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0c\u624d\u4f1a\u88ab\u8c03\u7528\u3002</p>\n<pre><code class="language-javascript">getJSON(<span class="hljs-string">"/post/1.json"</span>).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(post)</span></span> {\n  <span class="hljs-keyword">return</span> getJSON(post.commentURL);\n}).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">funcA</span><span class="hljs-params">(comments)</span></span> {\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">"resolved: "</span>, comments);\n}, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">funcB</span><span class="hljs-params">(err)</span></span>{\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">"rejected: "</span>, err);\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u7b2c\u4e00\u4e2a<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8fd4\u56de\u7684\u662f\u53e6\u4e00\u4e2a<code>Promise</code>\u5bf9\u8c61\u3002\u8fd9\u65f6\uff0c\u7b2c\u4e8c\u4e2a<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5c31\u4f1a\u7b49\u5f85\u8fd9\u4e2a\u65b0\u7684<code>Promise</code>\u5bf9\u8c61\u72b6\u6001\u53d1\u751f\u53d8\u5316\u3002\u5982\u679c\u53d8\u4e3a<code>resolved</code>\uff0c\u5c31\u8c03\u7528<code>funcA</code>\uff0c\u5982\u679c\u72b6\u6001\u53d8\u4e3a<code>rejected</code>\uff0c\u5c31\u8c03\u7528<code>funcB</code>\u3002</p>\n<p>\u5982\u679c\u91c7\u7528\u7bad\u5934\u51fd\u6570\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u5199\u5f97\u66f4\u7b80\u6d01\u3002</p>\n<pre><code class="language-javascript">get<span class="hljs-constructor">JSON(<span class="hljs-string">"/post/1.json"</span>)</span>.<span class="hljs-keyword">then</span>(\n <span class="hljs-function"> <span class="hljs-params">post</span> =&gt;</span> get<span class="hljs-constructor">JSON(<span class="hljs-params">post</span>.<span class="hljs-params">commentURL</span>)</span>\n).<span class="hljs-keyword">then</span>(\n <span class="hljs-function"> <span class="hljs-params">comments</span> =&gt;</span> console.log(<span class="hljs-string">"resolved: "</span>, comments),\n <span class="hljs-function"> <span class="hljs-params">err</span> =&gt;</span> console.log(<span class="hljs-string">"rejected: "</span>, err)\n);</code></pre>\n<h2 id="promiseprototypecatch">Promise.prototype.catch()</h2>\n<p><code>Promise.prototype.catch</code>\u65b9\u6cd5\u662f<code>.then(null, rejection)</code>\u7684\u522b\u540d\uff0c\u7528\u4e8e\u6307\u5b9a\u53d1\u751f\u9519\u8bef\u65f6\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<pre><code class="language-javascript">getJSON(<span class="hljs-string">\'/posts.json\'</span>).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(posts)</span> {</span>\n  <span class="hljs-comment">// ...</span>\n}).<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error)</span> {</span>\n  <span class="hljs-comment">// \u5904\u7406 getJSON \u548c \u524d\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u9519\u8bef</span>\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">\'\u53d1\u751f\u9519\u8bef\uff01\'</span>, <span class="hljs-built_in">error</span>);\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>getJSON</code>\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u5982\u679c\u8be5\u5bf9\u8c61\u72b6\u6001\u53d8\u4e3a<code>resolved</code>\uff0c\u5219\u4f1a\u8c03\u7528<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff1b\u5982\u679c\u5f02\u6b65\u64cd\u4f5c\u629b\u51fa\u9519\u8bef\uff0c\u72b6\u6001\u5c31\u4f1a\u53d8\u4e3a<code>rejected</code>\uff0c\u5c31\u4f1a\u8c03\u7528<code>catch</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5904\u7406\u8fd9\u4e2a\u9519\u8bef\u3002\u53e6\u5916\uff0c<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5982\u679c\u8fd0\u884c\u4e2d\u629b\u51fa\u9519\u8bef\uff0c\u4e5f\u4f1a\u88ab<code>catch</code>\u65b9\u6cd5\u6355\u83b7\u3002</p>\n<pre><code class="language-javascript">p.<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-params">(val)</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'fulfilled:\'</span>, val))\n  .<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-params">(err)</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'rejected\'</span>, err));\n\n<span class="hljs-regexp">//</span> \u7b49\u540c\u4e8e\np.<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-params">(val)</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'fulfilled:\'</span>, val))\n  .<span class="hljs-keyword">then</span>(<span class="hljs-literal">null</span>, <span class="hljs-function"><span class="hljs-params">(err)</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"rejected:"</span>, err));</code></pre>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'test\'</span>);\n});\npromise.catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(error);\n});\n<span class="hljs-comment">// Error: test</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>promise</code>\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u5c31\u88ab<code>catch</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u6355\u83b7\u3002\u6ce8\u610f\uff0c\u4e0a\u9762\u7684\u5199\u6cd5\u4e0e\u4e0b\u9762\u4e24\u79cd\u5199\u6cd5\u662f\u7b49\u4ef7\u7684\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// \u5199\u6cd5\u4e00</span>\n<span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'test\'</span>);\n  } <span class="hljs-keyword">catch</span>(e) {\n    reject(e);\n  }\n});\npromise.catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(error);\n});\n\n<span class="hljs-comment">// \u5199\u6cd5\u4e8c</span>\n<span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n  reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'test\'</span>));\n});\npromise.catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(error);\n});</code></pre>\n<p>\u6bd4\u8f83\u4e0a\u9762\u4e24\u79cd\u5199\u6cd5\uff0c\u53ef\u4ee5\u53d1\u73b0<code>reject</code>\u65b9\u6cd5\u7684\u4f5c\u7528\uff0c\u7b49\u540c\u4e8e\u629b\u51fa\u9519\u8bef\u3002</p>\n<p>\u5982\u679c Promise \u72b6\u6001\u5df2\u7ecf\u53d8\u6210<code>resolved</code>\uff0c\u518d\u629b\u51fa\u9519\u8bef\u662f\u65e0\u6548\u7684\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n  resolve(<span class="hljs-string">\'ok\'</span>);\n  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'test\'</span>);\n});\npromise\n  .then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{ <span class="hljs-built_in">console</span>.log(value) })\n  .catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>{ <span class="hljs-built_in">console</span>.log(error) });\n<span class="hljs-comment">// ok</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0cPromise \u5728<code>resolve</code>\u8bed\u53e5\u540e\u9762\uff0c\u518d\u629b\u51fa\u9519\u8bef\uff0c\u4e0d\u4f1a\u88ab\u6355\u83b7\uff0c\u7b49\u4e8e\u6ca1\u6709\u629b\u51fa\u3002\u56e0\u4e3a Promise \u7684\u72b6\u6001\u4e00\u65e6\u6539\u53d8\uff0c\u5c31\u6c38\u4e45\u4fdd\u6301\u8be5\u72b6\u6001\uff0c\u4e0d\u4f1a\u518d\u53d8\u4e86\u3002</p>\n<p>Promise \u5bf9\u8c61\u7684\u9519\u8bef\u5177\u6709\u201c\u5192\u6ce1\u201d\u6027\u8d28\uff0c\u4f1a\u4e00\u76f4\u5411\u540e\u4f20\u9012\uff0c\u76f4\u5230\u88ab\u6355\u83b7\u4e3a\u6b62\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u9519\u8bef\u603b\u662f\u4f1a\u88ab\u4e0b\u4e00\u4e2a<code>catch</code>\u8bed\u53e5\u6355\u83b7\u3002</p>\n<pre><code class="language-javascript">getJSON(<span class="hljs-string">\'/post/1.json\'</span>).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(post)</span> {</span>\n  <span class="hljs-keyword">return</span> getJSON(post.commentURL);\n}).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(comments)</span> {</span>\n  <span class="hljs-comment">// some code</span>\n}).<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error)</span> {</span>\n  <span class="hljs-comment">// \u5904\u7406\u524d\u9762\u4e09\u4e2aPromise\u4ea7\u751f\u7684\u9519\u8bef</span>\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4e00\u5171\u6709\u4e09\u4e2a Promise \u5bf9\u8c61\uff1a\u4e00\u4e2a\u7531<code>getJSON</code>\u4ea7\u751f\uff0c\u4e24\u4e2a\u7531<code>then</code>\u4ea7\u751f\u3002\u5b83\u4eec\u4e4b\u4e2d\u4efb\u4f55\u4e00\u4e2a\u629b\u51fa\u7684\u9519\u8bef\uff0c\u90fd\u4f1a\u88ab\u6700\u540e\u4e00\u4e2a<code>catch</code>\u6355\u83b7\u3002</p>\n<p>\u4e00\u822c\u6765\u8bf4\uff0c\u4e0d\u8981\u5728<code>then</code>\u65b9\u6cd5\u91cc\u9762\u5b9a\u4e49 Reject \u72b6\u6001\u7684\u56de\u8c03\u51fd\u6570\uff08\u5373<code>then</code>\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09\uff0c\u603b\u662f\u4f7f\u7528<code>catch</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// bad</span>\npromise\n  .<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(data)</span> {</span>\n    <span class="hljs-comment">// success</span>\n  }, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(err)</span> {</span>\n    <span class="hljs-comment">// error</span>\n  });\n\n<span class="hljs-comment">// good</span>\npromise\n  .<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(data)</span> { //<span class="hljs-title">cb</span></span>\n    <span class="hljs-comment">// success</span>\n  })\n  .<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(err)</span> {</span>\n    <span class="hljs-comment">// error</span>\n  });</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u7b2c\u4e8c\u79cd\u5199\u6cd5\u8981\u597d\u4e8e\u7b2c\u4e00\u79cd\u5199\u6cd5\uff0c\u7406\u7531\u662f\u7b2c\u4e8c\u79cd\u5199\u6cd5\u53ef\u4ee5\u6355\u83b7\u524d\u9762<code>then</code>\u65b9\u6cd5\u6267\u884c\u4e2d\u7684\u9519\u8bef\uff0c\u4e5f\u66f4\u63a5\u8fd1\u540c\u6b65\u7684\u5199\u6cd5\uff08<code>try/catch</code>\uff09\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u603b\u662f\u4f7f\u7528<code>catch</code>\u65b9\u6cd5\uff0c\u800c\u4e0d\u4f7f\u7528<code>then</code>\u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002</p>\n<p>\u8ddf\u4f20\u7edf\u7684<code>try/catch</code>\u4ee3\u7801\u5757\u4e0d\u540c\u7684\u662f\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528<code>catch</code>\u65b9\u6cd5\u6307\u5b9a\u9519\u8bef\u5904\u7406\u7684\u56de\u8c03\u51fd\u6570\uff0cPromise \u5bf9\u8c61\u629b\u51fa\u7684\u9519\u8bef\u4e0d\u4f1a\u4f20\u9012\u5230\u5916\u5c42\u4ee3\u7801\uff0c\u5373\u4e0d\u4f1a\u6709\u4efb\u4f55\u53cd\u5e94\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> someAsyncThing = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n    <span class="hljs-comment">// \u4e0b\u9762\u4e00\u884c\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3ax\u6ca1\u6709\u58f0\u660e</span>\n    resolve(x + <span class="hljs-number">2</span>);\n  });\n};\n\nsomeAsyncThing().then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'everything is great\'</span>);\n});\n\nsetTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> { <span class="hljs-built_in">console</span>.log(<span class="hljs-number">123</span>) }, <span class="hljs-number">2000</span>);\n<span class="hljs-comment">// Uncaught (in promise) ReferenceError: x is not defined</span>\n<span class="hljs-comment">// 123</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>someAsyncThing</code>\u51fd\u6570\u4ea7\u751f\u7684 Promise \u5bf9\u8c61\uff0c\u5185\u90e8\u6709\u8bed\u6cd5\u9519\u8bef\u3002\u6d4f\u89c8\u5668\u8fd0\u884c\u5230\u8fd9\u4e00\u884c\uff0c\u4f1a\u6253\u5370\u51fa\u9519\u8bef\u63d0\u793a<code>ReferenceError: x is not defined</code>\uff0c\u4f46\u662f\u4e0d\u4f1a\u9000\u51fa\u8fdb\u7a0b\u3001\u7ec8\u6b62\u811a\u672c\u6267\u884c\uff0c2 \u79d2\u4e4b\u540e\u8fd8\u662f\u4f1a\u8f93\u51fa<code>123</code>\u3002\u8fd9\u5c31\u662f\u8bf4\uff0cPromise \u5185\u90e8\u7684\u9519\u8bef\u4e0d\u4f1a\u5f71\u54cd\u5230 Promise \u5916\u90e8\u7684\u4ee3\u7801\uff0c\u901a\u4fd7\u7684\u8bf4\u6cd5\u5c31\u662f\u201cPromise \u4f1a\u5403\u6389\u9519\u8bef\u201d\u3002</p>\n<p>\u8fd9\u4e2a\u811a\u672c\u653e\u5728\u670d\u52a1\u5668\u6267\u884c\uff0c\u9000\u51fa\u7801\u5c31\u662f<code>0</code>\uff08\u5373\u8868\u793a\u6267\u884c\u6210\u529f\uff09\u3002\u4e0d\u8fc7\uff0cNode \u6709\u4e00\u4e2a<code>unhandledRejection</code>\u4e8b\u4ef6\uff0c\u4e13\u95e8\u76d1\u542c\u672a\u6355\u83b7\u7684<code>reject</code>\u9519\u8bef\uff0c\u4e0a\u9762\u7684\u811a\u672c\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u76d1\u542c\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u76d1\u542c\u51fd\u6570\u91cc\u9762\u629b\u51fa\u9519\u8bef\u3002</p>\n<pre><code class="language-javascript">process.on(<span class="hljs-string">\'unhandledRejection\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">(err, p)</span> </span>{\n  <span class="hljs-keyword">throw</span> err;\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>unhandledRejection</code>\u4e8b\u4ef6\u7684\u76d1\u542c\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u9519\u8bef\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u662f\u62a5\u9519\u7684 Promise \u5b9e\u4f8b\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u4e86\u89e3\u53d1\u751f\u9519\u8bef\u7684\u73af\u5883\u4fe1\u606f\u3002</p>\n<p>\u6ce8\u610f\uff0cNode \u6709\u8ba1\u5212\u5728\u672a\u6765\u5e9f\u9664<code>unhandledRejection</code>\u4e8b\u4ef6\u3002\u5982\u679c Promise \u5185\u90e8\u6709\u672a\u6355\u83b7\u7684\u9519\u8bef\uff0c\u4f1a\u76f4\u63a5\u7ec8\u6b62\u8fdb\u7a0b\uff0c\u5e76\u4e14\u8fdb\u7a0b\u7684\u9000\u51fa\u7801\u4e0d\u4e3a 0\u3002</p>\n<p>\u518d\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> promise = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n  resolve(<span class="hljs-string">\'ok\'</span>);\n  setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'test\'</span>) }, <span class="hljs-number">0</span>)\n});\npromise.then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>{ <span class="hljs-built_in">console</span>.log(value) });\n<span class="hljs-comment">// ok</span>\n<span class="hljs-comment">// Uncaught Error: test</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0cPromise \u6307\u5b9a\u5728\u4e0b\u4e00\u8f6e\u201c\u4e8b\u4ef6\u5faa\u73af\u201d\u518d\u629b\u51fa\u9519\u8bef\u3002\u5230\u4e86\u90a3\u4e2a\u65f6\u5019\uff0cPromise \u7684\u8fd0\u884c\u5df2\u7ecf\u7ed3\u675f\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9519\u8bef\u662f\u5728 Promise \u51fd\u6570\u4f53\u5916\u629b\u51fa\u7684\uff0c\u4f1a\u5192\u6ce1\u5230\u6700\u5916\u5c42\uff0c\u6210\u4e86\u672a\u6355\u83b7\u7684\u9519\u8bef\u3002</p>\n<p>\u4e00\u822c\u603b\u662f\u5efa\u8bae\uff0cPromise \u5bf9\u8c61\u540e\u9762\u8981\u8ddf<code>catch</code>\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5904\u7406 Promise \u5185\u90e8\u53d1\u751f\u7684\u9519\u8bef\u3002<code>catch</code>\u65b9\u6cd5\u8fd4\u56de\u7684\u8fd8\u662f\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u56e0\u6b64\u540e\u9762\u8fd8\u53ef\u4ee5\u63a5\u7740\u8c03\u7528<code>then</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> someAsyncThing = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n    <span class="hljs-comment">// \u4e0b\u9762\u4e00\u884c\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3ax\u6ca1\u6709\u58f0\u660e</span>\n    resolve(x + <span class="hljs-number">2</span>);\n  });\n};\n\nsomeAsyncThing()\n.catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'oh no\'</span>, error);\n})\n.then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'carry on\'</span>);\n});\n<span class="hljs-comment">// oh no [ReferenceError: x is not defined]</span>\n<span class="hljs-comment">// carry on</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u8fd0\u884c\u5b8c<code>catch</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4f1a\u63a5\u7740\u8fd0\u884c\u540e\u9762\u90a3\u4e2a<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u3002\u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u5219\u4f1a\u8df3\u8fc7<code>catch</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript">Promise.resolve()\n.<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error)</span> {</span>\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">\'oh no\'</span>, <span class="hljs-built_in">error</span>);\n})\n.<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> {</span>\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">\'carry on\'</span>);\n});\n<span class="hljs-comment">// carry on</span></code></pre>\n<p>\u4e0a\u9762\u7684\u4ee3\u7801\u56e0\u4e3a\u6ca1\u6709\u62a5\u9519\uff0c\u8df3\u8fc7\u4e86<code>catch</code>\u65b9\u6cd5\uff0c\u76f4\u63a5\u6267\u884c\u540e\u9762\u7684<code>then</code>\u65b9\u6cd5\u3002\u6b64\u65f6\uff0c\u8981\u662f<code>then</code>\u65b9\u6cd5\u91cc\u9762\u62a5\u9519\uff0c\u5c31\u4e0e\u524d\u9762\u7684<code>catch</code>\u65e0\u5173\u4e86\u3002</p>\n<p><code>catch</code>\u65b9\u6cd5\u4e4b\u4e2d\uff0c\u8fd8\u80fd\u518d\u629b\u51fa\u9519\u8bef\u3002</p>\n<pre><code class="language-javascript">const someAsyncThing = <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> {</span>\n  <span class="hljs-keyword">return</span> new Promise(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(resolve, reject)</span> {</span>\n    <span class="hljs-comment">// \u4e0b\u9762\u4e00\u884c\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3ax\u6ca1\u6709\u58f0\u660e</span>\n    resolve(x + <span class="hljs-number">2</span>);\n  });\n};\n\nsomeAsyncThing().<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> {</span>\n  <span class="hljs-keyword">return</span> someOtherAsyncThing();\n}).<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error)</span> {</span>\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">\'oh no\'</span>, <span class="hljs-built_in">error</span>);\n  <span class="hljs-comment">// \u4e0b\u9762\u4e00\u884c\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a y \u6ca1\u6709\u58f0\u660e</span>\n  y + <span class="hljs-number">2</span>;\n}).<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> {</span>\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">\'carry on\'</span>);\n});\n<span class="hljs-comment">// oh no [ReferenceError: x is not defined]</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>catch</code>\u65b9\u6cd5\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u56e0\u4e3a\u540e\u9762\u6ca1\u6709\u522b\u7684<code>catch</code>\u65b9\u6cd5\u4e86\uff0c\u5bfc\u81f4\u8fd9\u4e2a\u9519\u8bef\u4e0d\u4f1a\u88ab\u6355\u83b7\uff0c\u4e5f\u4e0d\u4f1a\u4f20\u9012\u5230\u5916\u5c42\u3002\u5982\u679c\u6539\u5199\u4e00\u4e0b\uff0c\u7ed3\u679c\u5c31\u4e0d\u4e00\u6837\u4e86\u3002</p>\n<pre><code class="language-javascript">someAsyncThing().<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span> {</span>\n  <span class="hljs-keyword">return</span> someOtherAsyncThing();\n}).<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error)</span> {</span>\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">\'oh no\'</span>, <span class="hljs-built_in">error</span>);\n  <span class="hljs-comment">// \u4e0b\u9762\u4e00\u884c\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3ay\u6ca1\u6709\u58f0\u660e</span>\n  y + <span class="hljs-number">2</span>;\n}).<span class="hljs-keyword">catch</span>(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error)</span> {</span>\n  console.<span class="hljs-built_in">log</span>(<span class="hljs-string">\'carry on\'</span>, <span class="hljs-built_in">error</span>);\n});\n<span class="hljs-comment">// oh no [ReferenceError: x is not defined]</span>\n<span class="hljs-comment">// carry on [ReferenceError: y is not defined]</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u7b2c\u4e8c\u4e2a<code>catch</code>\u65b9\u6cd5\u7528\u6765\u6355\u83b7\uff0c\u524d\u4e00\u4e2a<code>catch</code>\u65b9\u6cd5\u629b\u51fa\u7684\u9519\u8bef\u3002</p>\n<h2 id="promiseall">Promise.all()</h2>\n<p><code>Promise.all</code>\u65b9\u6cd5\u7528\u4e8e\u5c06\u591a\u4e2a Promise \u5b9e\u4f8b\uff0c\u5305\u88c5\u6210\u4e00\u4e2a\u65b0\u7684 Promise \u5b9e\u4f8b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-symbol">const</span> p = Promise.all([<span class="hljs-built_in">p1</span>, <span class="hljs-built_in">p2</span>, <span class="hljs-built_in">p3</span>])<span class="hljs-comment">;</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>Promise.all</code>\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\uff0c<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u90fd\u662f Promise \u5b9e\u4f8b\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u4f1a\u5148\u8c03\u7528\u4e0b\u9762\u8bb2\u5230\u7684<code>Promise.resolve</code>\u65b9\u6cd5\uff0c\u5c06\u53c2\u6570\u8f6c\u4e3a Promise \u5b9e\u4f8b\uff0c\u518d\u8fdb\u4e00\u6b65\u5904\u7406\u3002\uff08<code>Promise.all</code>\u65b9\u6cd5\u7684\u53c2\u6570\u53ef\u4ee5\u4e0d\u662f\u6570\u7ec4\uff0c\u4f46\u5fc5\u987b\u5177\u6709 Iterator \u63a5\u53e3\uff0c\u4e14\u8fd4\u56de\u7684\u6bcf\u4e2a\u6210\u5458\u90fd\u662f Promise \u5b9e\u4f8b\u3002\uff09</p>\n<p><code>p</code>\u7684\u72b6\u6001\u7531<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u51b3\u5b9a\uff0c\u5206\u6210\u4e24\u79cd\u60c5\u51b5\u3002</p>\n<p>\uff081\uff09\u53ea\u6709<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u7684\u72b6\u6001\u90fd\u53d8\u6210<code>fulfilled</code>\uff0c<code>p</code>\u7684\u72b6\u6001\u624d\u4f1a\u53d8\u6210<code>fulfilled</code>\uff0c\u6b64\u65f6<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u7684\u8fd4\u56de\u503c\u7ec4\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u4f20\u9012\u7ed9<code>p</code>\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\uff082\uff09\u53ea\u8981<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u4e4b\u4e2d\u6709\u4e00\u4e2a\u88ab<code>rejected</code>\uff0c<code>p</code>\u7684\u72b6\u6001\u5c31\u53d8\u6210<code>rejected</code>\uff0c\u6b64\u65f6\u7b2c\u4e00\u4e2a\u88ab<code>reject</code>\u7684\u5b9e\u4f8b\u7684\u8fd4\u56de\u503c\uff0c\u4f1a\u4f20\u9012\u7ed9<code>p</code>\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// \u751f\u6210\u4e00\u4e2aPromise\u5bf9\u8c61\u7684\u6570\u7ec4</span>\n<span class="hljs-keyword">const</span> promises = [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>].map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">id</span>) </span>{\n  <span class="hljs-keyword">return</span> getJSON(<span class="hljs-string">\'/post/\'</span> + id + <span class="hljs-string">".json"</span>);\n});\n\n<span class="hljs-built_in">Promise</span>.all(promises).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">posts</span>) </span>{\n  <span class="hljs-comment">// ...</span>\n}).catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">reason</span>)</span>{\n  <span class="hljs-comment">// ...</span>\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>promises</code>\u662f\u5305\u542b 6 \u4e2a Promise \u5b9e\u4f8b\u7684\u6570\u7ec4\uff0c\u53ea\u6709\u8fd9 6 \u4e2a\u5b9e\u4f8b\u7684\u72b6\u6001\u90fd\u53d8\u6210<code>fulfilled</code>\uff0c\u6216\u8005\u5176\u4e2d\u6709\u4e00\u4e2a\u53d8\u4e3a<code>rejected</code>\uff0c\u624d\u4f1a\u8c03\u7528<code>Promise.all</code>\u65b9\u6cd5\u540e\u9762\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript">const databasePromise = connect<span class="hljs-constructor">Database()</span>;\n\nconst booksPromise = databasePromise\n  .<span class="hljs-keyword">then</span>(findAllBooks);\n\nconst userPromise = databasePromise\n  .<span class="hljs-keyword">then</span>(getCurrentUser);\n\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Promise</span>.</span></span>all(<span class="hljs-literal">[\n  <span class="hljs-identifier">booksPromise</span>,\n  <span class="hljs-identifier">userPromise</span>\n]</span>)\n.<span class="hljs-keyword">then</span>((<span class="hljs-literal">[<span class="hljs-identifier">books</span>, <span class="hljs-identifier">user</span>]</span>) =&gt; pick<span class="hljs-constructor">TopRecommentations(<span class="hljs-params">books</span>, <span class="hljs-params">user</span>)</span>);</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>booksPromise</code>\u548c<code>userPromise</code>\u662f\u4e24\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u53ea\u6709\u7b49\u5230\u5b83\u4eec\u7684\u7ed3\u679c\u90fd\u8fd4\u56de\u4e86\uff0c\u624d\u4f1a\u89e6\u53d1<code>pickTopRecommentations</code>\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\u6ce8\u610f\uff0c\u5982\u679c\u4f5c\u4e3a\u53c2\u6570\u7684 Promise \u5b9e\u4f8b\uff0c\u81ea\u5df1\u5b9a\u4e49\u4e86<code>catch</code>\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b83\u4e00\u65e6\u88ab<code>rejected</code>\uff0c\u5e76\u4e0d\u4f1a\u89e6\u53d1<code>Promise.all()</code>\u7684<code>catch</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n  resolve(<span class="hljs-string">\'hello\'</span>);\n})\n.then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result)\n.catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e);\n\n<span class="hljs-keyword">const</span> p2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'\u62a5\u9519\u4e86\'</span>);\n})\n.then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result)\n.catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> e);\n\n<span class="hljs-built_in">Promise</span>.all([p1, p2])\n.then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(result))\n.catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(e));\n<span class="hljs-comment">// ["hello", Error: \u62a5\u9519\u4e86]</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>p1</code>\u4f1a<code>resolved</code>\uff0c<code>p2</code>\u9996\u5148\u4f1a<code>rejected</code>\uff0c\u4f46\u662f<code>p2</code>\u6709\u81ea\u5df1\u7684<code>catch</code>\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u65b0\u7684 Promise \u5b9e\u4f8b\uff0c<code>p2</code>\u6307\u5411\u7684\u5b9e\u9645\u4e0a\u662f\u8fd9\u4e2a\u5b9e\u4f8b\u3002\u8be5\u5b9e\u4f8b\u6267\u884c\u5b8c<code>catch</code>\u65b9\u6cd5\u540e\uff0c\u4e5f\u4f1a\u53d8\u6210<code>resolved</code>\uff0c\u5bfc\u81f4<code>Promise.all()</code>\u65b9\u6cd5\u53c2\u6570\u91cc\u9762\u7684\u4e24\u4e2a\u5b9e\u4f8b\u90fd\u4f1a<code>resolved</code>\uff0c\u56e0\u6b64\u4f1a\u8c03\u7528<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528<code>catch</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\u5982\u679c<code>p2</code>\u6ca1\u6709\u81ea\u5df1\u7684<code>catch</code>\u65b9\u6cd5\uff0c\u5c31\u4f1a\u8c03\u7528<code>Promise.all()</code>\u7684<code>catch</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n  resolve(<span class="hljs-string">\'hello\'</span>);\n})\n.then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result);\n\n<span class="hljs-keyword">const</span> p2 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'\u62a5\u9519\u4e86\'</span>);\n})\n.then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> result);\n\n<span class="hljs-built_in">Promise</span>.all([p1, p2])\n.then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(result))\n.catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(e));\n<span class="hljs-comment">// Error: \u62a5\u9519\u4e86</span></code></pre>\n<h2 id="promiserace">Promise.race()</h2>\n<p><code>Promise.race</code>\u65b9\u6cd5\u540c\u6837\u662f\u5c06\u591a\u4e2a Promise \u5b9e\u4f8b\uff0c\u5305\u88c5\u6210\u4e00\u4e2a\u65b0\u7684 Promise \u5b9e\u4f8b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-symbol">const</span> p = Promise.race([<span class="hljs-built_in">p1</span>, <span class="hljs-built_in">p2</span>, <span class="hljs-built_in">p3</span>])<span class="hljs-comment">;</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u53ea\u8981<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u4e4b\u4e2d\u6709\u4e00\u4e2a\u5b9e\u4f8b\u7387\u5148\u6539\u53d8\u72b6\u6001\uff0c<code>p</code>\u7684\u72b6\u6001\u5c31\u8ddf\u7740\u6539\u53d8\u3002\u90a3\u4e2a\u7387\u5148\u6539\u53d8\u7684 Promise \u5b9e\u4f8b\u7684\u8fd4\u56de\u503c\uff0c\u5c31\u4f20\u9012\u7ed9<code>p</code>\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p><code>Promise.race</code>\u65b9\u6cd5\u7684\u53c2\u6570\u4e0e<code>Promise.all</code>\u65b9\u6cd5\u4e00\u6837\uff0c\u5982\u679c\u4e0d\u662f Promise \u5b9e\u4f8b\uff0c\u5c31\u4f1a\u5148\u8c03\u7528\u4e0b\u9762\u8bb2\u5230\u7684<code>Promise.resolve</code>\u65b9\u6cd5\uff0c\u5c06\u53c2\u6570\u8f6c\u4e3a Promise \u5b9e\u4f8b\uff0c\u518d\u8fdb\u4e00\u6b65\u5904\u7406\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6307\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u83b7\u5f97\u7ed3\u679c\uff0c\u5c31\u5c06 Promise \u7684\u72b6\u6001\u53d8\u4e3a<code>reject</code>\uff0c\u5426\u5219\u53d8\u4e3a<code>resolve</code>\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Promise</span>.race([\n  fetch(<span class="hljs-string">\'/resource-that-may-take-a-while\'</span>),\n  <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> reject(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'request timeout\'</span>)), <span class="hljs-number">5000</span>)\n  })\n]);\np.then(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(response));\np.catch(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(error));</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5982\u679c 5 \u79d2\u4e4b\u5185<code>fetch</code>\u65b9\u6cd5\u65e0\u6cd5\u8fd4\u56de\u7ed3\u679c\uff0c\u53d8\u91cf<code>p</code>\u7684\u72b6\u6001\u5c31\u4f1a\u53d8\u4e3a<code>rejected</code>\uff0c\u4ece\u800c\u89e6\u53d1<code>catch</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<h2 id="promiseresolve">Promise.resolve()</h2>\n<p>\u6709\u65f6\u9700\u8981\u5c06\u73b0\u6709\u5bf9\u8c61\u8f6c\u4e3a Promise \u5bf9\u8c61\uff0c<code>Promise.resolve</code>\u65b9\u6cd5\u5c31\u8d77\u5230\u8fd9\u4e2a\u4f5c\u7528\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> jsPromise = <span class="hljs-built_in">Promise</span>.resolve($.ajax(<span class="hljs-string">\'/whatever.json\'</span>));</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u5c06 jQuery \u751f\u6210\u7684<code>deferred</code>\u5bf9\u8c61\uff0c\u8f6c\u4e3a\u4e00\u4e2a\u65b0\u7684 Promise \u5bf9\u8c61\u3002</p>\n<p><code>Promise.resolve</code>\u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-built_in">Promise</span>.resolve(<span class="hljs-string">\'foo\'</span>)\n<span class="hljs-comment">// \u7b49\u4ef7\u4e8e</span>\n<span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-params">resolve</span> =&gt;</span> resolve(<span class="hljs-string">\'foo\'</span>))</code></pre>\n<p><code>Promise.resolve</code>\u65b9\u6cd5\u7684\u53c2\u6570\u5206\u6210\u56db\u79cd\u60c5\u51b5\u3002</p>\n<p><strong>\uff081\uff09\u53c2\u6570\u662f\u4e00\u4e2a Promise \u5b9e\u4f8b</strong></p>\n<p>\u5982\u679c\u53c2\u6570\u662f Promise \u5b9e\u4f8b\uff0c\u90a3\u4e48<code>Promise.resolve</code>\u5c06\u4e0d\u505a\u4efb\u4f55\u4fee\u6539\u3001\u539f\u5c01\u4e0d\u52a8\u5730\u8fd4\u56de\u8fd9\u4e2a\u5b9e\u4f8b\u3002</p>\n<p><strong>\uff082\uff09\u53c2\u6570\u662f\u4e00\u4e2a<code>thenable</code>\u5bf9\u8c61</strong></p>\n<p><code>thenable</code>\u5bf9\u8c61\u6307\u7684\u662f\u5177\u6709<code>then</code>\u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u5bf9\u8c61\u3002</p>\n<pre><code class="language-javascript">let thenable = {\n  <span class="hljs-keyword">then</span>: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(resolve, reject)</span></span> {\n    resolve(<span class="hljs-number">42</span>);\n  }\n};</code></pre>\n<p><code>Promise.resolve</code>\u65b9\u6cd5\u4f1a\u5c06\u8fd9\u4e2a\u5bf9\u8c61\u8f6c\u4e3a Promise \u5bf9\u8c61\uff0c\u7136\u540e\u5c31\u7acb\u5373\u6267\u884c<code>thenable</code>\u5bf9\u8c61\u7684<code>then</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">let</span> thenable = {\n  <span class="hljs-attr">then</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n    resolve(<span class="hljs-number">42</span>);\n  }\n};\n\n<span class="hljs-keyword">let</span> p1 = <span class="hljs-built_in">Promise</span>.resolve(thenable);\np1.then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">value</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(value);  <span class="hljs-comment">// 42</span>\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>thenable</code>\u5bf9\u8c61\u7684<code>then</code>\u65b9\u6cd5\u6267\u884c\u540e\uff0c\u5bf9\u8c61<code>p1</code>\u7684\u72b6\u6001\u5c31\u53d8\u4e3a<code>resolved</code>\uff0c\u4ece\u800c\u7acb\u5373\u6267\u884c\u6700\u540e\u90a3\u4e2a<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8f93\u51fa 42\u3002</p>\n<p><strong>\uff083\uff09\u53c2\u6570\u4e0d\u662f\u5177\u6709<code>then</code>\u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u6216\u6839\u672c\u5c31\u4e0d\u662f\u5bf9\u8c61</strong></p>\n<p>\u5982\u679c\u53c2\u6570\u662f\u4e00\u4e2a\u539f\u59cb\u503c\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u4e0d\u5177\u6709<code>then</code>\u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u5219<code>Promise.resolve</code>\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 Promise \u5bf9\u8c61\uff0c\u72b6\u6001\u4e3a<code>resolved</code>\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Promise</span>.resolve(<span class="hljs-string">\'Hello\'</span>);\n\np.then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>)</span>{\n  <span class="hljs-built_in">console</span>.log(s)\n});\n<span class="hljs-comment">// Hello</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u751f\u6210\u4e00\u4e2a\u65b0\u7684 Promise \u5bf9\u8c61\u7684\u5b9e\u4f8b<code>p</code>\u3002\u7531\u4e8e\u5b57\u7b26\u4e32<code>Hello</code>\u4e0d\u5c5e\u4e8e\u5f02\u6b65\u64cd\u4f5c\uff08\u5224\u65ad\u65b9\u6cd5\u662f\u5b57\u7b26\u4e32\u5bf9\u8c61\u4e0d\u5177\u6709 then \u65b9\u6cd5\uff09\uff0c\u8fd4\u56de Promise \u5b9e\u4f8b\u7684\u72b6\u6001\u4ece\u4e00\u751f\u6210\u5c31\u662f<code>resolved</code>\uff0c\u6240\u4ee5\u56de\u8c03\u51fd\u6570\u4f1a\u7acb\u5373\u6267\u884c\u3002<code>Promise.resolve</code>\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u4f1a\u540c\u65f6\u4f20\u7ed9\u56de\u8c03\u51fd\u6570\u3002</p>\n<p><strong>\uff084\uff09\u4e0d\u5e26\u6709\u4efb\u4f55\u53c2\u6570</strong></p>\n<p><code>Promise.resolve</code>\u65b9\u6cd5\u5141\u8bb8\u8c03\u7528\u65f6\u4e0d\u5e26\u53c2\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a<code>resolved</code>\u72b6\u6001\u7684 Promise \u5bf9\u8c61\u3002</p>\n<p>\u6240\u4ee5\uff0c\u5982\u679c\u5e0c\u671b\u5f97\u5230\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u6bd4\u8f83\u65b9\u4fbf\u7684\u65b9\u6cd5\u5c31\u662f\u76f4\u63a5\u8c03\u7528<code>Promise.resolve</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Promise</span>.resolve();\n\np.then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-comment">// ...</span>\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u7684\u53d8\u91cf<code>p</code>\u5c31\u662f\u4e00\u4e2a Promise \u5bf9\u8c61\u3002</p>\n<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7acb\u5373<code>resolve</code>\u7684 Promise \u5bf9\u8c61\uff0c\u662f\u5728\u672c\u8f6e\u201c\u4e8b\u4ef6\u5faa\u73af\u201d\uff08event loop\uff09\u7684\u7ed3\u675f\u65f6\uff0c\u800c\u4e0d\u662f\u5728\u4e0b\u4e00\u8f6e\u201c\u4e8b\u4ef6\u5faa\u73af\u201d\u7684\u5f00\u59cb\u65f6\u3002</p>\n<pre><code class="language-javascript">setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'three\'</span>);\n}, <span class="hljs-number">0</span>);\n\n<span class="hljs-built_in">Promise</span>.resolve().then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'two\'</span>);\n});\n\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'one\'</span>);\n\n<span class="hljs-comment">// one</span>\n<span class="hljs-comment">// two</span>\n<span class="hljs-comment">// three</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>setTimeout(fn, 0)</code>\u5728\u4e0b\u4e00\u8f6e\u201c\u4e8b\u4ef6\u5faa\u73af\u201d\u5f00\u59cb\u65f6\u6267\u884c\uff0c<code>Promise.resolve()</code>\u5728\u672c\u8f6e\u201c\u4e8b\u4ef6\u5faa\u73af\u201d\u7ed3\u675f\u65f6\u6267\u884c\uff0c<code>console.log(&#39;one&#39;)</code>\u5219\u662f\u7acb\u5373\u6267\u884c\uff0c\u56e0\u6b64\u6700\u5148\u8f93\u51fa\u3002</p>\n<h2 id="promisereject">Promise.reject()</h2>\n<p><code>Promise.reject(reason)</code>\u65b9\u6cd5\u4e5f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 Promise \u5b9e\u4f8b\uff0c\u8be5\u5b9e\u4f8b\u7684\u72b6\u6001\u4e3a<code>rejected</code>\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> p = <span class="hljs-built_in">Promise</span>.reject(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n<span class="hljs-comment">// \u7b49\u540c\u4e8e</span>\n<span class="hljs-keyword">const</span> p = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> reject(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>))\n\np.then(<span class="hljs-literal">null</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(s)\n});\n<span class="hljs-comment">// \u51fa\u9519\u4e86</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u751f\u6210\u4e00\u4e2a Promise \u5bf9\u8c61\u7684\u5b9e\u4f8b<code>p</code>\uff0c\u72b6\u6001\u4e3a<code>rejected</code>\uff0c\u56de\u8c03\u51fd\u6570\u4f1a\u7acb\u5373\u6267\u884c\u3002</p>\n<p>\u6ce8\u610f\uff0c<code>Promise.reject()</code>\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u4f1a\u539f\u5c01\u4e0d\u52a8\u5730\u4f5c\u4e3a<code>reject</code>\u7684\u7406\u7531\uff0c\u53d8\u6210\u540e\u7eed\u65b9\u6cd5\u7684\u53c2\u6570\u3002\u8fd9\u4e00\u70b9\u4e0e<code>Promise.resolve</code>\u65b9\u6cd5\u4e0d\u4e00\u81f4\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> thenable = {\n  then(resolve, reject) {\n    reject(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n  }\n};\n\n<span class="hljs-built_in">Promise</span>.reject(thenable)\n.catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(e === thenable)\n})\n<span class="hljs-comment">// true</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>Promise.reject</code>\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u4e00\u4e2a<code>thenable</code>\u5bf9\u8c61\uff0c\u6267\u884c\u4ee5\u540e\uff0c\u540e\u9762<code>catch</code>\u65b9\u6cd5\u7684\u53c2\u6570\u4e0d\u662f<code>reject</code>\u629b\u51fa\u7684\u201c\u51fa\u9519\u4e86\u201d\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u662f<code>thenable</code>\u5bf9\u8c61\u3002</p>\n<h2 id="\u4e24\u4e2a\u6709\u7528\u7684\u9644\u52a0\u65b9\u6cd5">\u4e24\u4e2a\u6709\u7528\u7684\u9644\u52a0\u65b9\u6cd5</h2>\n<p>ES6 \u7684 Promise API \u63d0\u4f9b\u7684\u65b9\u6cd5\u4e0d\u662f\u5f88\u591a\uff0c\u6709\u4e9b\u6709\u7528\u7684\u65b9\u6cd5\u53ef\u4ee5\u81ea\u5df1\u90e8\u7f72\u3002\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u90e8\u7f72\u4e24\u4e2a\u4e0d\u5728 ES6 \u4e4b\u4e2d\u3001\u4f46\u5f88\u6709\u7528\u7684\u65b9\u6cd5\u3002</p>\n<h3 id="done">done()</h3>\n<p>Promise \u5bf9\u8c61\u7684\u56de\u8c03\u94fe\uff0c\u4e0d\u7ba1\u4ee5<code>then</code>\u65b9\u6cd5\u6216<code>catch</code>\u65b9\u6cd5\u7ed3\u5c3e\uff0c\u8981\u662f\u6700\u540e\u4e00\u4e2a\u65b9\u6cd5\u629b\u51fa\u9519\u8bef\uff0c\u90fd\u6709\u53ef\u80fd\u65e0\u6cd5\u6355\u6349\u5230\uff08\u56e0\u4e3a Promise \u5185\u90e8\u7684\u9519\u8bef\u4e0d\u4f1a\u5192\u6ce1\u5230\u5168\u5c40\uff09\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a<code>done</code>\u65b9\u6cd5\uff0c\u603b\u662f\u5904\u4e8e\u56de\u8c03\u94fe\u7684\u5c3e\u7aef\uff0c\u4fdd\u8bc1\u629b\u51fa\u4efb\u4f55\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-selector-tag">asyncFunc</span>()\n  <span class="hljs-selector-class">.then</span>(f1)\n  <span class="hljs-selector-class">.catch</span>(r1)\n  <span class="hljs-selector-class">.then</span>(f2)\n  <span class="hljs-selector-class">.done</span>();</code></pre>\n<p>\u5b83\u7684\u5b9e\u73b0\u4ee3\u7801\u76f8\u5f53\u7b80\u5355\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-built_in">Promise</span>.prototype.done = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">onFulfilled, onRejected</span>) </span>{\n  <span class="hljs-keyword">this</span>.then(onFulfilled, onRejected)\n    .catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">reason</span>) </span>{\n      <span class="hljs-comment">// \u629b\u51fa\u4e00\u4e2a\u5168\u5c40\u9519\u8bef</span>\n      setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> { <span class="hljs-keyword">throw</span> reason }, <span class="hljs-number">0</span>);\n    });\n};</code></pre>\n<p>\u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u89c1\uff0c<code>done</code>\u65b9\u6cd5\u7684\u4f7f\u7528\uff0c\u53ef\u4ee5\u50cf<code>then</code>\u65b9\u6cd5\u90a3\u6837\u7528\uff0c\u63d0\u4f9b<code>fulfilled</code>\u548c<code>rejected</code>\u72b6\u6001\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u63d0\u4f9b\u4efb\u4f55\u53c2\u6570\u3002\u4f46\u4e0d\u7ba1\u600e\u6837\uff0c<code>done</code>\u90fd\u4f1a\u6355\u6349\u5230\u4efb\u4f55\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\uff0c\u5e76\u5411\u5168\u5c40\u629b\u51fa\u3002</p>\n<h3 id="finally">finally()</h3>\n<p><code>finally</code>\u65b9\u6cd5\u7528\u4e8e\u6307\u5b9a\u4e0d\u7ba1 Promise \u5bf9\u8c61\u6700\u540e\u72b6\u6001\u5982\u4f55\uff0c\u90fd\u4f1a\u6267\u884c\u7684\u64cd\u4f5c\u3002\u5b83\u4e0e<code>done</code>\u65b9\u6cd5\u7684\u6700\u5927\u533a\u522b\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u666e\u901a\u7684\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u4e0d\u7ba1\u600e\u6837\u90fd\u5fc5\u987b\u6267\u884c\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u670d\u52a1\u5668\u4f7f\u7528 Promise \u5904\u7406\u8bf7\u6c42\uff0c\u7136\u540e\u4f7f\u7528<code>finally</code>\u65b9\u6cd5\u5173\u6389\u670d\u52a1\u5668\u3002</p>\n<pre><code class="language-javascript">server.listen(<span class="hljs-number">0</span>)\n  .<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> <span class="hljs-comment">{\n    // run test\n  }</span>)\n  .<span class="hljs-title">finally</span><span class="hljs-params">(server.stop)</span>;</span></code></pre>\n<p>\u5b83\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-built_in">Promise</span>.prototype.finally = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">callback</span>) </span>{\n  <span class="hljs-keyword">let</span> P = <span class="hljs-keyword">this</span>.constructor;\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.then(\n    <span class="hljs-function"><span class="hljs-params">value</span>  =&gt;</span> P.resolve(callback()).then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> value),\n    <span class="hljs-function"><span class="hljs-params">reason</span> =&gt;</span> P.resolve(callback()).then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> { <span class="hljs-keyword">throw</span> reason })\n  );\n};</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4e0d\u7ba1\u524d\u9762\u7684 Promise \u662f<code>fulfilled</code>\u8fd8\u662f<code>rejected</code>\uff0c\u90fd\u4f1a\u6267\u884c\u56de\u8c03\u51fd\u6570<code>callback</code>\u3002</p>\n<h2 id="\u5e94\u7528">\u5e94\u7528</h2>\n<h3 id="\u52a0\u8f7d\u56fe\u7247">\u52a0\u8f7d\u56fe\u7247</h3>\n<p>\u6211\u4eec\u53ef\u4ee5\u5c06\u56fe\u7247\u7684\u52a0\u8f7d\u5199\u6210\u4e00\u4e2a<code>Promise</code>\uff0c\u4e00\u65e6\u52a0\u8f7d\u5b8c\u6210\uff0c<code>Promise</code>\u7684\u72b6\u6001\u5c31\u53d1\u751f\u53d8\u5316\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> preloadImage = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">path</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n    <span class="hljs-keyword">const</span> image = <span class="hljs-keyword">new</span> Image();\n    image.onload  = resolve;\n    image.onerror = reject;\n    image.src = path;\n  });\n};</code></pre>\n<h3 id="generator-\u51fd\u6570\u4e0e-promise-\u7684\u7ed3\u5408">Generator \u51fd\u6570\u4e0e Promise \u7684\u7ed3\u5408</h3>\n<p>\u4f7f\u7528 Generator \u51fd\u6570\u7ba1\u7406\u6d41\u7a0b\uff0c\u9047\u5230\u5f02\u6b65\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a<code>Promise</code>\u5bf9\u8c61\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFoo</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>)</span>{\n    resolve(<span class="hljs-string">\'foo\'</span>);\n  });\n}\n\n<span class="hljs-keyword">const</span> g = <span class="hljs-function"><span class="hljs-keyword">function</span>* (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">const</span> foo = <span class="hljs-keyword">yield</span> getFoo();\n    <span class="hljs-built_in">console</span>.log(foo);\n  } <span class="hljs-keyword">catch</span> (e) {\n    <span class="hljs-built_in">console</span>.log(e);\n  }\n};\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span> (<span class="hljs-params">generator</span>) </span>{\n  <span class="hljs-keyword">const</span> it = generator();\n\n  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">go</span>(<span class="hljs-params">result</span>) </span>{\n    <span class="hljs-keyword">if</span> (result.done) <span class="hljs-keyword">return</span> result.value;\n\n    <span class="hljs-keyword">return</span> result.value.then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>{\n      <span class="hljs-keyword">return</span> go(it.next(value));\n    }, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>{\n      <span class="hljs-keyword">return</span> go(it.throw(error));\n    });\n  }\n\n  go(it.next());\n}\n\nrun(g);</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u7684 Generator \u51fd\u6570<code>g</code>\u4e4b\u4e2d\uff0c\u6709\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c<code>getFoo</code>\uff0c\u5b83\u8fd4\u56de\u7684\u5c31\u662f\u4e00\u4e2a<code>Promise</code>\u5bf9\u8c61\u3002\u51fd\u6570<code>run</code>\u7528\u6765\u5904\u7406\u8fd9\u4e2a<code>Promise</code>\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u4e0b\u4e00\u4e2a<code>next</code>\u65b9\u6cd5\u3002</p>\n<h2 id="promisetry">Promise.try()</h2>\n<p>\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u7ecf\u5e38\u9047\u5230\u4e00\u79cd\u60c5\u51b5\uff1a\u4e0d\u77e5\u9053\u6216\u8005\u4e0d\u60f3\u533a\u5206\uff0c\u51fd\u6570<code>f</code>\u662f\u540c\u6b65\u51fd\u6570\u8fd8\u662f\u5f02\u6b65\u64cd\u4f5c\uff0c\u4f46\u662f\u60f3\u7528 Promise \u6765\u5904\u7406\u5b83\u3002\u56e0\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u7ba1<code>f</code>\u662f\u5426\u5305\u542b\u5f02\u6b65\u64cd\u4f5c\uff0c\u90fd\u7528<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u4e0b\u4e00\u6b65\u6d41\u7a0b\uff0c\u7528<code>catch</code>\u65b9\u6cd5\u5904\u7406<code>f</code>\u629b\u51fa\u7684\u9519\u8bef\u3002\u4e00\u822c\u5c31\u4f1a\u91c7\u7528\u4e0b\u9762\u7684\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Promise</span>.</span></span>resolve<span class="hljs-literal">()</span>.<span class="hljs-keyword">then</span>(f)</code></pre>\n<p>\u4e0a\u9762\u7684\u5199\u6cd5\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u5c31\u662f\u5982\u679c<code>f</code>\u662f\u540c\u6b65\u51fd\u6570\uff0c\u90a3\u4e48\u5b83\u4f1a\u5728\u672c\u8f6e\u4e8b\u4ef6\u5faa\u73af\u7684\u672b\u5c3e\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> f = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'now\'</span>);\n<span class="hljs-built_in">Promise</span>.resolve().then(f);\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'next\'</span>);\n<span class="hljs-comment">// next</span>\n<span class="hljs-comment">// now</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u51fd\u6570<code>f</code>\u662f\u540c\u6b65\u7684\uff0c\u4f46\u662f\u7528 Promise \u5305\u88c5\u4e86\u4ee5\u540e\uff0c\u5c31\u53d8\u6210\u5f02\u6b65\u6267\u884c\u4e86\u3002</p>\n<p>\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u8ba9\u540c\u6b65\u51fd\u6570\u540c\u6b65\u6267\u884c\uff0c\u5f02\u6b65\u51fd\u6570\u5f02\u6b65\u6267\u884c\uff0c\u5e76\u4e14\u8ba9\u5b83\u4eec\u5177\u6709\u7edf\u4e00\u7684 API \u5462\uff1f\u56de\u7b54\u662f\u53ef\u4ee5\u7684\uff0c\u5e76\u4e14\u8fd8\u6709\u4e24\u79cd\u5199\u6cd5\u3002\u7b2c\u4e00\u79cd\u5199\u6cd5\u662f\u7528<code>async</code>\u51fd\u6570\u6765\u5199\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> f = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'now\'</span>);\n<span class="hljs-function">(<span class="hljs-params"><span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; f(<span class="hljs-params"></span>)</span>)<span class="hljs-params">()</span>;\n<span class="hljs-params">console</span>.<span class="hljs-params">log</span>(<span class="hljs-params">\'next\'</span>);\n// <span class="hljs-params">now</span>\n// <span class="hljs-params">next</span></span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u7b2c\u4e8c\u884c\u662f\u4e00\u4e2a\u7acb\u5373\u6267\u884c\u7684\u533f\u540d\u51fd\u6570\uff0c\u4f1a\u7acb\u5373\u6267\u884c\u91cc\u9762\u7684<code>async</code>\u51fd\u6570\uff0c\u56e0\u6b64\u5982\u679c<code>f</code>\u662f\u540c\u6b65\u7684\uff0c\u5c31\u4f1a\u5f97\u5230\u540c\u6b65\u7684\u7ed3\u679c\uff1b\u5982\u679c<code>f</code>\u662f\u5f02\u6b65\u7684\uff0c\u5c31\u53ef\u4ee5\u7528<code>then</code>\u6307\u5b9a\u4e0b\u4e00\u6b65\uff0c\u5c31\u50cf\u4e0b\u9762\u7684\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript">(async () =&gt; f())()\n.<span class="hljs-keyword">then</span>(...)</code></pre>\n<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>async () =&gt; f()</code>\u4f1a\u5403\u6389<code>f()</code>\u629b\u51fa\u7684\u9519\u8bef\u3002\u6240\u4ee5\uff0c\u5982\u679c\u60f3\u6355\u83b7\u9519\u8bef\uff0c\u8981\u4f7f\u7528<code>promise.catch</code>\u65b9\u6cd5\u3002</p>\n<pre><code class="language-javascript">(<span class="hljs-keyword">async</span> () =&gt; f())()\n.then(...)\n.<span class="hljs-keyword">catch</span>(...)</code></pre>\n<p>\u7b2c\u4e8c\u79cd\u5199\u6cd5\u662f\u4f7f\u7528<code>new Promise()</code>\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> f = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'now\'</span>);\n(\n  <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(\n    <span class="hljs-function"><span class="hljs-params">resolve</span> =&gt;</span> resolve(f())\n  )\n)();\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'next\'</span>);\n<span class="hljs-comment">// now</span>\n<span class="hljs-comment">// next</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e5f\u662f\u4f7f\u7528\u7acb\u5373\u6267\u884c\u7684\u533f\u540d\u51fd\u6570\uff0c\u6267\u884c<code>new Promise()</code>\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u540c\u6b65\u51fd\u6570\u4e5f\u662f\u540c\u6b65\u6267\u884c\u7684\u3002</p>\n<p>\u9274\u4e8e\u8fd9\u662f\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u9700\u6c42\uff0c\u6240\u4ee5\u73b0\u5728\u6709\u4e00\u4e2a<a href="https://github.com/ljharb/proposal-promise-try">\u63d0\u6848</a>\uff0c\u63d0\u4f9b<code>Promise.try</code>\u65b9\u6cd5\u66ff\u4ee3\u4e0a\u9762\u7684\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> f = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'now\'</span>);\n<span class="hljs-built_in">Promise</span>.try(f);\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'next\'</span>);\n<span class="hljs-comment">// now</span>\n<span class="hljs-comment">// next</span></code></pre>\n<p>\u4e8b\u5b9e\u4e0a\uff0c<code>Promise.try</code>\u5b58\u5728\u5df2\u4e45\uff0cPromise \u5e93<a href="http://bluebirdjs.com/docs/api/promise.try.html"><code>Bluebird</code></a>\u3001<a href="https://github.com/kriskowal/q/wiki/API-Reference#promisefcallargs"><code>Q</code></a>\u548c<a href="https://github.com/cujojs/when/blob/master/docs/api.md#whentry"><code>when</code></a>\uff0c\u65e9\u5c31\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u3002</p>\n<p>\u7531\u4e8e<code>Promise.try</code>\u4e3a\u6240\u6709\u64cd\u4f5c\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u5904\u7406\u673a\u5236\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u7528<code>then</code>\u65b9\u6cd5\u7ba1\u7406\u6d41\u7a0b\uff0c\u6700\u597d\u90fd\u7528<code>Promise.try</code>\u5305\u88c5\u4e00\u4e0b\u3002\u8fd9\u6837\u6709<a href="http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/">\u8bb8\u591a\u597d\u5904</a>\uff0c\u5176\u4e2d\u4e00\u70b9\u5c31\u662f\u53ef\u4ee5\u66f4\u597d\u5730\u7ba1\u7406\u5f02\u5e38\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">function</span> getUsername(userId) {\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">database</span>.users.<span class="hljs-keyword">get</span>({id: userId})\n  .<span class="hljs-keyword">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-keyword">user</span>) {\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">user</span>.name;\n  });\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>database.users.get()</code>\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u5982\u679c\u629b\u51fa\u5f02\u6b65\u9519\u8bef\uff0c\u53ef\u4ee5\u7528<code>catch</code>\u65b9\u6cd5\u6355\u83b7\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u5199\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-selector-tag">database</span><span class="hljs-selector-class">.users</span><span class="hljs-selector-class">.get</span>({<span class="hljs-attribute">id</span>: userId})\n<span class="hljs-selector-class">.then</span>(...)\n<span class="hljs-selector-class">.catch</span>(...)</code></pre>\n<p>\u4f46\u662f<code>database.users.get()</code>\u53ef\u80fd\u8fd8\u4f1a\u629b\u51fa\u540c\u6b65\u9519\u8bef\uff08\u6bd4\u5982\u6570\u636e\u5e93\u8fde\u63a5\u9519\u8bef\uff0c\u5177\u4f53\u8981\u770b\u5b9e\u73b0\u65b9\u6cd5\uff09\uff0c\u8fd9\u65f6\u4f60\u5c31\u4e0d\u5f97\u4e0d\u7528<code>try...catch</code>\u53bb\u6355\u83b7\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-selector-tag">try</span> {\n  <span class="hljs-selector-tag">database</span><span class="hljs-selector-class">.users</span><span class="hljs-selector-class">.get</span>({<span class="hljs-attribute">id</span>: userId})\n  <span class="hljs-selector-class">.then</span>(...)\n  <span class="hljs-selector-class">.catch</span>(...)\n} catch (e) {\n  <span class="hljs-comment">// ...</span>\n}</code></pre>\n<p>\u4e0a\u9762\u8fd9\u6837\u7684\u5199\u6cd5\u5c31\u5f88\u7b28\u62d9\u4e86\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u7edf\u4e00\u7528<code>promise.catch()</code>\u6355\u83b7\u6240\u6709\u540c\u6b65\u548c\u5f02\u6b65\u7684\u9519\u8bef\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-selector-tag">Promise</span><span class="hljs-selector-class">.try</span>(<span class="hljs-selector-tag">database</span><span class="hljs-selector-class">.users</span><span class="hljs-selector-class">.get</span>({<span class="hljs-attribute">id</span>: userId}))\n  <span class="hljs-selector-class">.then</span>(...)\n  <span class="hljs-selector-class">.catch</span>(...)</code></pre>\n<p>\u4e8b\u5b9e\u4e0a\uff0c<code>Promise.try</code>\u5c31\u662f\u6a21\u62df<code>try</code>\u4ee3\u7801\u5757\uff0c\u5c31\u50cf<code>promise.catch</code>\u6a21\u62df\u7684\u662f<code>catch</code>\u4ee3\u7801\u5757\u3002</p>\n'}}]);