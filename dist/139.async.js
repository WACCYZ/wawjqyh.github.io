(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[139],{Dwao:function(n,s){n.exports='<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" target="_blank">\u539f\u6587\u94fe\u63a5</a>\n<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" target="_blank">en</a></p>\n<h1 id="arrayprototypereduce">Array.prototype.reduce()</h1>\n<p>reduce() \u65b9\u6cd5\u5bf9\u7d2f\u52a0\u5668\u548c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 (\u4ece\u5de6\u5230\u53f3)\u5e94\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u51cf\u5c11\u4e3a\u5355\u4e2a\u503c\u3002</p>\n<pre><code class="language-javascript">let sum = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>].reduce(function(acc, val) {\n  <span class="hljs-keyword">return</span> acc + val;\n}, <span class="hljs-number">0</span>);\n\nconsole.log(sum);\n<span class="hljs-comment">// 6</span>\n\nlet list1 = [[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]];\n\nlet list2 = [<span class="hljs-number">0</span>, [<span class="hljs-number">1</span>, [<span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, [<span class="hljs-number">4</span>, [<span class="hljs-number">5</span>, [<span class="hljs-number">6</span>]]]]]]];\n\n<span class="hljs-keyword">const</span> flatten = (arr) =&gt; {\n    <span class="hljs-keyword">return</span> arr.reduce(\n        (acc, val) =&gt; {\n            <span class="hljs-keyword">return</span> acc.concat(Array.isArray(val) ? flatten(val) : val)\n        }, []\n    );\n};\n\nflatten(list1);\n<span class="hljs-comment">// [0, 1, 2, 3, 4, 5]</span>\n\nflatten(list2);\n<span class="hljs-comment">// [ 0, 1, 2, 3, 4, 5, 6 ]</span></code></pre>\n<h2 id="\u8bed\u6cd5">\u8bed\u6cd5</h2>\n<pre><code class="language-javascript"><span class="hljs-selector-tag">arr</span><span class="hljs-selector-class">.reduce</span>(<span class="hljs-selector-tag">callback</span>,<span class="hljs-selector-attr">[initialValue]</span>)</code></pre>\n<h3 id="\u53c2\u6570">\u53c2\u6570</h3>\n<ul>\n<li><code>callback</code> \u6267\u884c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u503c\u7684\u51fd\u6570\uff0c\u5305\u542b\u56db\u4e2a\u53c2\u6570<ul>\n<li><code>accumulator</code> \u4e0a\u4e00\u6b21\u8c03\u7528\u56de\u8c03\u8fd4\u56de\u7684\u503c\uff0c\u6216\u8005\u662f\u63d0\u4f9b\u7684\u521d\u59cb\u503c\uff08initialValue\uff09</li>\n<li><code>currentValue</code> \u6570\u7ec4\u4e2d\u6b63\u5728\u5904\u7406\u7684\u5143\u7d20</li>\n<li><code>currentIndex</code> \u6570\u636e\u4e2d\u6b63\u5728\u5904\u7406\u7684\u5143\u7d20\u7d22\u5f15\uff0c\u5982\u679c\u63d0\u4f9b\u4e86 initialValue \uff0c\u4ece0\u5f00\u59cb\uff1b\u5426\u5219\u4ece1\u5f00\u59cb</li>\n<li><code>array</code>  \u8c03\u7528 reduce \u7684\u6570\u7ec4</li>\n</ul>\n</li>\n<li><code>initialValue</code> \u53ef\u9009\u9879\uff0c\u5176\u503c\u7528\u4e8e\u7b2c\u4e00\u6b21\u8c03\u7528 callback \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002</li>\n</ul>\n<h3 id="\u8fd4\u56de\u503c">\u8fd4\u56de\u503c</h3>\n<p>\u51fd\u6570\u7d2f\u8ba1\u5904\u7406\u7684\u7ed3\u679c</p>\n<h2 id="\u63cf\u8ff0">\u63cf\u8ff0</h2>\n<p>reduce \u4e3a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4f9d\u6b21\u6267\u884c\u56de\u8c03\u51fd\u6570\uff0c\u4e0d\u5305\u62ec\u6570\u7ec4\u4e2d\u88ab\u5220\u9664\u6216\u4ece\u672a\u88ab\u8d4b\u503c\u7684\u5143\u7d20\uff0c\u63a5\u53d7\u56db\u4e2a\u53c2\u6570\uff1a\u521d\u59cb\u503c accumulator\n\uff08\u6216\u8005\u4e0a\u4e00\u6b21\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff09\uff0c\u5f53\u524d\u5143\u7d20\u503c currentValue \uff0c\u5f53\u524d\u7d22\u5f15 currentIndex \uff0c\u8c03\u7528 reduce \u7684\u6570\u7ec4\u3002</p>\n<p>\u56de\u8c03\u51fd\u6570\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\uff0caccumulator \u548c currentValue \u7684\u53d6\u503c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u8c03\u7528 reduce \u65f6\u63d0\u4f9binitialValue\uff0caccumulator \u53d6\u503c\u4e3a\ninitialValue \uff0ccurrentValue \u53d6\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u503c\uff1b\u6ca1\u6709\u63d0\u4f9b initialValue \uff0caccumulator \u53d6\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u503c\uff0ccurrentValue \u53d6\n\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u503c\u3002</p>\n<p><code>\u6ce8\u610f: \u4e0d\u63d0\u4f9b initialValue \uff0creduce \u4f1a\u4ece\u7d22\u5f151\u7684\u5730\u65b9\u5f00\u59cb\u6267\u884c callback \u65b9\u6cd5\uff0c\u8df3\u8fc7\u7b2c\u4e00\u4e2a\u7d22\u5f15\u3002\u63d0\u4f9b initialValue \uff0c\u4ece\u7d22\u5f150\u5f00\u59cb\u3002</code></p>\n<p>\u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9binitialValue\uff0c \u4f1a\u629b\u51faTypeError \u3002\u5982\u679c\u6570\u7ec4\u4ec5\u6709\u4e00\u4e2a\u5143\u7d20\uff08\u65e0\u8bba\u4f4d\u7f6e\u5982\u4f55\uff09\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9binitialValue\uff0c\n\u6216\u8005\u6709\u63d0\u4f9binitialValue\u4f46\u662f\u6570\u7ec4\u4e3a\u7a7a\uff0c\u90a3\u4e48\u6b64\u552f\u4e00\u503c\u5c06\u88ab\u8fd4\u56de\u5e76\u4e14callback\u4e0d\u4f1a\u88ab\u6267\u884c\u3002</p>\n<p>\u63d0\u4f9b initialValue \u901a\u5e38\u66f4\u5b89\u5168\uff0c\u6b63\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u6ca1\u6709 initialValue \u6709\u4e09\u79cd\u53ef\u80fd\u8f93\u51fa\uff1a</p>\n<pre><code class="language-javascript"><span class="hljs-keywords">var</span> maxCallback = ( pre, cur ) =&gt; Math.<span class="hljs-built_in">max</span>( pre.<span class="hljs-symbol">x</span>, cur.<span class="hljs-symbol">x</span> );\n<span class="hljs-keywords">var</span> maxCallback2 = ( <span class="hljs-built_in">max</span>, cur ) =&gt; Math.<span class="hljs-built_in">max</span>( <span class="hljs-built_in">max</span>, cur );\n\n<span class="hljs-comment">// reduce() without initialValue</span>\n[ { <span class="hljs-symbol">x</span>: <span class="hljs-number">22</span> }, { <span class="hljs-symbol">x</span>: <span class="hljs-number">42</span> } ].reduce( maxCallback ); <span class="hljs-comment">// 42</span>\n[ { <span class="hljs-symbol">x</span>: <span class="hljs-number">22</span> }            ].reduce( maxCallback ); <span class="hljs-comment">// { x: 22 }</span>\n[                      ].reduce( maxCallback ); <span class="hljs-comment">// TypeError</span>\n\n<span class="hljs-comment">// map/reduce; better solution, also works for empty arrays</span>\n[ { <span class="hljs-symbol">x</span>: <span class="hljs-number">22</span> }, { <span class="hljs-symbol">x</span>: <span class="hljs-number">42</span> } ].map( el =&gt; el.<span class="hljs-symbol">x</span> )\n                        .reduce( maxCallback2, -Infinity );\n\n### reduce\u5982\u4f55\u8fd0\u884c\n\n\u4f8b\u5982\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\n\n```javascript\n[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>].reduce(function(accumulator, currentValue, currentIndex, array){\n  <span class="hljs-keywords">return</span> accumulator + currentValue;\n});</code></pre>\n<p>callback \u88ab\u8c03\u7528\u56db\u6b21\uff0c\u6bcf\u6b21\u8c03\u7528\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u5982\u4e0b\u8868\uff1a</p>\n<table>\n<thead>\n<tr>\n<th align="center">accumulator</th>\n<th align="center">currentValue</th>\n<th align="center">currentIndex</th>\n<th align="center">array</th>\n<th align="center">return</th>\n<th align="center">value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="center">first call</td>\n<td align="center">0</td>\n<td align="center">1</td>\n<td align="center">1</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">1</td>\n</tr>\n<tr>\n<td align="center">second call</td>\n<td align="center">1</td>\n<td align="center">2</td>\n<td align="center">2</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">3</td>\n</tr>\n<tr>\n<td align="center">third call</td>\n<td align="center">3</td>\n<td align="center">3</td>\n<td align="center">3</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">6</td>\n</tr>\n<tr>\n<td align="center">fourth call</td>\n<td align="center">6</td>\n<td align="center">4</td>\n<td align="center">4</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">10</td>\n</tr>\n</tbody></table>\n<p>reduce \u7684\u8fd4\u56de\u503c\u662f\u6700\u540e\u4e00\u6b21\u8c03\u7528 callback \u7684\u8fd4\u56de\u503c\uff0810\uff09\u3002</p>\n<p>\u4f7f\u7528Arrow Function \u53ef\u4ee5\u4ee3\u66ff\u4e00\u4e2a\u5b8c\u6574\u7684\u51fd\u6570\uff0c\u4ea7\u751f\u7684\u6548\u679c\u548c\u4e0b\u9762\u4ee3\u7801\u76f8\u540c</p>\n<pre><code class="language-javascript">[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>].reduce( (prev, curr) =&gt; prev + curr );</code></pre>\n<p>\u5982\u679c\u628a\u521d\u59cb\u503c\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u5165 reduce\uff0c\u6700\u7ec8\u8fd4\u56de\u503c\u53d8\u4e3a20\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p>\n<pre><code class="language-javascript">[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>].reduce( (accumulator, currentValue, currentIndex, <span class="hljs-built_in">array</span>) =&gt; {\n  <span class="hljs-keyword">return</span> accumulator + currentValue;\n}, <span class="hljs-number">10</span>);</code></pre>\n<table>\n<thead>\n<tr>\n<th align="center">callback</th>\n<th align="center">accumulator</th>\n<th align="center">currentValue</th>\n<th align="center">currentIndex</th>\n<th align="center">array</th>\n<th align="center">return</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="center">\u7b2c\u4e00\u6b21\u8c03\u7528</td>\n<td align="center">10</td>\n<td align="center">0</td>\n<td align="center">0</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">10</td>\n</tr>\n<tr>\n<td align="center">\u7b2c\u4e8c\u6b21\u8c03\u7528</td>\n<td align="center">10</td>\n<td align="center">1</td>\n<td align="center">1</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">11</td>\n</tr>\n<tr>\n<td align="center">\u7b2c\u4e09\u6b21\u8c03\u7528</td>\n<td align="center">11</td>\n<td align="center">2</td>\n<td align="center">2</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">13</td>\n</tr>\n<tr>\n<td align="center">\u7b2c\u56db\u6b21\u8c03\u7528</td>\n<td align="center">13</td>\n<td align="center">3</td>\n<td align="center">3</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">16</td>\n</tr>\n<tr>\n<td align="center">\u7b2c\u4e94\u6b21\u8c03\u7528</td>\n<td align="center">16</td>\n<td align="center">4</td>\n<td align="center">4</td>\n<td align="center">[0,1,2,3,4]</td>\n<td align="center">20</td>\n</tr>\n</tbody></table>\n<p>reduce\u6267\u884c\u5b8c\uff0c\u6700\u7ec8\u8fd4\u56de20</p>\n<h2 id="\u4f8b\u5b50">\u4f8b\u5b50</h2>\n<h3 id="\u5c06\u6570\u7ec4\u6240\u6709\u9879\u76f8\u52a0">\u5c06\u6570\u7ec4\u6240\u6709\u9879\u76f8\u52a0</h3>\n<pre><code class="language-javascript">var sum = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>].reduce(function(a, b) {\n    <span class="hljs-keyword">return</span> a + b;\n}, <span class="hljs-number">0</span>);\n<span class="hljs-comment">// sum is 6</span></code></pre>\n<p>\u6216\u8005\u7528\u7bad\u5934\u51fd\u6570\u7f16\u5199</p>\n<pre><code class="language-javascript">var total = [ <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> ].reduce( ( acc, cur ) =&gt; acc + cur, <span class="hljs-number">0</span> );</code></pre>\n<h3 id="\u6570\u7ec4\u6241\u5e73\u5316">\u6570\u7ec4\u6241\u5e73\u5316</h3>\n<pre><code class="language-javascript">var flattened = <span class="hljs-string">[[0, 1], [2, 3], [4, 5]]</span>.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(a, b)</span></span> {\n    <span class="hljs-keyword">return</span> a.<span class="hljs-built_in">concat</span>(b);\n}, []);\n// flattened is [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]</code></pre>\n<p>\u6216\u8005\u7528\u7bad\u5934\u51fd\u6570\u7f16\u5199</p>\n<pre><code class="language-javascript">var flattened = [[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]].reduce( ( acc, cur ) =&gt; acc.concat(cur), [] );</code></pre>\n<h3 id="\u8ba1\u7b97\u6570\u7ec4\u4e2d\u5404\u4e2a\u503c\u51fa\u73b0\u6b21\u6570">\u8ba1\u7b97\u6570\u7ec4\u4e2d\u5404\u4e2a\u503c\u51fa\u73b0\u6b21\u6570</h3>\n<pre><code class="language-javascript">var names = [<span class="hljs-string">\'Alice\'</span>, <span class="hljs-string">\'Bob\'</span>, <span class="hljs-string">\'Tiff\'</span>, <span class="hljs-string">\'Bruce\'</span>, <span class="hljs-string">\'Alice\'</span>];\n\nvar countedNames = names.reduce(<span class="hljs-keyword">function</span>(allNames, <span class="hljs-type">name</span>) {\n  <span class="hljs-keyword">if</span> (<span class="hljs-type">name</span> <span class="hljs-keyword">in</span> allNames) {\n    allNames[<span class="hljs-type">name</span>]++;\n  }\n  <span class="hljs-keyword">else</span> {\n    allNames[<span class="hljs-type">name</span>] = <span class="hljs-number">1</span>;\n  }\n  <span class="hljs-keyword">return</span> allNames;\n}, {});\n// countedNames <span class="hljs-keyword">is</span> { <span class="hljs-string">\'Alice\'</span>: <span class="hljs-number">2</span>, <span class="hljs-string">\'Bob\'</span>: <span class="hljs-number">1</span>, <span class="hljs-string">\'Tiff\'</span>: <span class="hljs-number">1</span>, <span class="hljs-string">\'Bruce\'</span>: <span class="hljs-number">1</span> }</code></pre>\n<h3 id="\u5bf9\u8c61\u6570\u7ec4\u7684\u8fde\u63a5\u8981\u4f7f\u7528\u5c55\u5f00\u8fd0\u7b97\u7b26\u548c\u521d\u59cb\u503c">\u5bf9\u8c61\u6570\u7ec4\u7684\u8fde\u63a5\u8981\u4f7f\u7528\u5c55\u5f00\u8fd0\u7b97\u7b26\u548c\u521d\u59cb\u503c</h3>\n<pre><code class="language-javascript"><span class="hljs-comment">// friends - an array of objects</span>\n<span class="hljs-comment">// where object field "books" - list of favorite books</span>\nvar friends = [\n{ <span class="hljs-string">name:</span> <span class="hljs-string">"Anna"</span>, <span class="hljs-string">books:</span> [<span class="hljs-string">"Bible"</span>, <span class="hljs-string">"Harry Potter"</span>], <span class="hljs-string">age:</span> <span class="hljs-number">21</span> },\n{ <span class="hljs-string">name:</span> <span class="hljs-string">"Bob"</span>, <span class="hljs-string">books:</span> [<span class="hljs-string">"War and peace"</span>, <span class="hljs-string">"Romeo and Juliet"</span>], <span class="hljs-string">age:</span> <span class="hljs-number">26</span> },\n{ <span class="hljs-string">name:</span> <span class="hljs-string">"Alice"</span>, <span class="hljs-string">books:</span> [<span class="hljs-string">"The Lord of the Rings"</span>, <span class="hljs-string">"The Shining"</span>], <span class="hljs-string">age:</span> <span class="hljs-number">18</span> }\n]\n\n<span class="hljs-comment">// allbooks - list which will contain all friends books +</span>\n<span class="hljs-comment">// additional list contained in initialValue</span>\nvar allbooks = friends.reduce(function(prev, curr) {\n  <span class="hljs-keyword">return</span> [...prev, ...curr.books];\n}, [<span class="hljs-string">"Alphabet"</span>]);\n\n<span class="hljs-comment">// allbooks = ["Alphabet", "Bible", "Harry Potter", "War and peace",</span>\n<span class="hljs-comment">// "Romeo and Juliet", "The Lord of the Rings", "The Shining"]</span></code></pre>\n<h2 id="\u89c4\u8303">\u89c4\u8303</h2>\n<table>\n<thead>\n<tr>\n<th align="left">Specification</th>\n<th align="left">Status</th>\n<th align="left">Comment</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">ECMAScript 5.1 (ECMA-262)</td>\n<td align="left">Standard</td>\n<td align="left">Initial definition</td>\n</tr>\n<tr>\n<td align="left">ECMAScript 2015 (6th Edition, ECMA-262)</td>\n<td align="left">Standard</td>\n<td align="left"></td>\n</tr>\n</tbody></table>\n'}}]);