(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[326],{vn28:function(s,n){s.exports='<h1 id="getting-started---\u5165\u95e8">Getting started - \u5165\u95e8</h1>\n<h2 id="\u5b89\u88c5">\u5b89\u88c5</h2>\n<p>Sequelize \u53ef\u901a\u8fc7 NPM \u548c Yarn \u83b7\u5f97\u3002</p>\n<pre><code class="language-bash">// \u4f7f\u7528 NPM\n$ npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save sequelize</span>\n\n<span class="hljs-comment"># \u8fd8\u6709\u4ee5\u4e0b\u4e4b\u4e00:</span>\n$ npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save pg@6 pg-hstore #pg@7 \u5f53\u524d\u4e0d\u652f\u6301</span>\n$ npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save mysql2</span>\n$ npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save sqlite3</span>\n$ npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save tedious // MSSQL</span>\n\n// \u4f7f\u7528 Yarn\n$ yarn <span class="hljs-keyword">add</span> sequelize\n\n<span class="hljs-comment"># \u8fd8\u6709\u4ee5\u4e0b\u4e4b\u4e00:</span>\n$ yarn <span class="hljs-keyword">add</span> pg pg-hstore\n$ yarn <span class="hljs-keyword">add</span> mysql2\n$ yarn <span class="hljs-keyword">add</span> sqlite3\n$ yarn <span class="hljs-keyword">add</span> tedious // MSSQL</code></pre>\n<h2 id="\u5efa\u7acb\u8fde\u63a5">\u5efa\u7acb\u8fde\u63a5</h2>\n<p>Sequelize\u5c06\u5728\u521d\u59cb\u5316\u65f6\u8bbe\u7f6e\u8fde\u63a5\u6c60\uff0c\u6240\u4ee5\u5982\u679c\u4ece\u5355\u4e2a\u8fdb\u7a0b\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff0c\u4f60\u6700\u597d\u6bcf\u4e2a\u6570\u636e\u5e93\u53ea\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u5982\u679c\u8981\u4ece\u591a\u4e2a\u8fdb\u7a0b\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff0c\u5219\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u4f46\u6bcf\u4e2a\u5b9e\u4f8b\u5e94\u5177\u6709\u201c\u6700\u5927\u8fde\u63a5\u6c60\u5927\u5c0f\u9664\u4ee5\u5b9e\u4f8b\u6570\u201d\u7684\u6700\u5927\u8fde\u63a5\u6c60\u5927\u5c0f\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u6700\u5927\u8fde\u63a5\u6c60\u5927\u5c0f\u4e3a90\uff0c\u5e76\u4e14\u67093\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u5219\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5b9e\u4f8b\u5e94\u5177\u670930\u7684\u6700\u5927\u8fde\u63a5\u6c60\u5927\u5c0f\u3002</p>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> Sequelize = require(<span class="hljs-string">\'sequelize\'</span>);\n<span class="hljs-keyword">const</span> sequelize = <span class="hljs-keyword">new</span> Sequelize(<span class="hljs-string">\'database\'</span>, <span class="hljs-string">\'username\'</span>, <span class="hljs-string">\'password\'</span>, {\n  host: <span class="hljs-string">\'localhost\'</span>,\n  dialect: <span class="hljs-string">\'mysql\'</span>|<span class="hljs-string">\'sqlite\'</span>|<span class="hljs-string">\'postgres\'</span>|<span class="hljs-string">\'mssql\'</span>,\n\n  pool: {\n    <span class="hljs-built_in">max</span>: <span class="hljs-number">5</span>,\n    <span class="hljs-built_in">min</span>: <span class="hljs-number">0</span>,\n    acquire: <span class="hljs-number">30000</span>,\n    idle: <span class="hljs-number">10000</span>\n  },\n\n  <span class="hljs-comment">// \u4ec5\u9650 SQLite</span>\n  storage: <span class="hljs-string">\'path/to/database.sqlite\'</span>\n});\n\n<span class="hljs-comment">// \u6216\u8005\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 uri \u8fde\u63a5</span>\n<span class="hljs-keyword">const</span> sequelize = <span class="hljs-keyword">new</span> Sequelize(<span class="hljs-string">\'postgres://user:pass@example.com:5432/dbname\'</span>);</code></pre>\n<p>Sequelize \u6784\u9020\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7 <a href="/class/lib/sequelize.js~Sequelize.html">API reference</a> \u83b7\u5f97\u4e00\u6574\u5957\u53ef\u7528\u7684\u53c2\u6570\u3002</p>\n<h2 id="\u6d4b\u8bd5\u8fde\u63a5">\u6d4b\u8bd5\u8fde\u63a5</h2>\n<p>\u60a8\u53ef\u4ee5\u4f7f\u7528  <code>.authenticate()</code> \u51fd\u6570\u6765\u6d4b\u8bd5\u8fde\u63a5\u3002</p>\n<pre><code class="language-js">sequelize\n  .authenticate()\n  .<span class="hljs-keyword">then</span>(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Connection has been established successfully.\'</span>);\n  })\n  .<span class="hljs-keyword">catch</span>(err =&gt; {\n    <span class="hljs-built_in">console</span>.error(<span class="hljs-string">\'Unable to connect to the database:\'</span>, err);\n  });</code></pre>\n<h2 id="\u4f60\u7684\u7b2c\u4e00\u4e2a\u6a21\u578b">\u4f60\u7684\u7b2c\u4e00\u4e2a\u6a21\u578b</h2>\n<p>\u6a21\u578b\u4f7f\u7528 <code>sequelize.define(&#39;name&#39;, {attributes}, {options})</code> \u6765\u5b9a\u4e49.</p>\n<pre><code class="language-js">const User = sequelize.<span class="hljs-class"><span class="hljs-keyword">define</span></span>(<span class="hljs-string">\'user\'</span>, {\n  firstName: {\n    <span class="hljs-keyword">type</span>: Sequelize.<span class="hljs-built_in">STRING</span>\n  },\n  lastName: {\n    <span class="hljs-keyword">type</span>: Sequelize.<span class="hljs-built_in">STRING</span>\n  }\n});\n\n<span class="hljs-comment">// force: true \u5982\u679c\u8868\u5df2\u7ecf\u5b58\u5728\uff0c\u5c06\u4f1a\u4e22\u5f03\u8868</span>\nUser.sync({force: <span class="hljs-literal">true</span>}).then(() =&gt; {\n  <span class="hljs-comment">// \u8868\u5df2\u521b\u5efa</span>\n  <span class="hljs-keyword">return</span> User.create({\n    firstName: <span class="hljs-string">\'John\'</span>,\n    lastName: <span class="hljs-string">\'Hancock\'</span>\n  });\n});</code></pre>\n<p>\u60a8\u53ef\u4ee5\u5728 <a href="/class/lib/model.js~Model.html">Model API reference</a> \u4e2d\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u521b\u5efa\u6a21\u578b\u7684\u4fe1\u606f\u3002</p>\n<h2 id="\u4f60\u7684\u7b2c\u4e00\u4e2a\u67e5\u8be2">\u4f60\u7684\u7b2c\u4e00\u4e2a\u67e5\u8be2</h2>\n<pre><code class="language-js"><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">User</span>.</span></span>find<span class="hljs-constructor">All()</span>.<span class="hljs-keyword">then</span>(users =&gt; {\n  console.log(users)\n})</code></pre>\n<p>\u60a8\u53ef\u4ee5\u5728  <a href="/manual/tutorial/models-usage.html#data-retrieval-finders">Data retrieval</a>  \u4e0a\u67e5\u770b\u66f4\u591a\u5173\u4e8e\u6a21\u578b\u7684\u67e5\u627e\u5668\u529f\u80fd,\u5982 <code>.findAll()</code> \u3002\u6216\u8005\u5728 <a href="/manual/tutorial/querying.html">Querying</a> \u4e0a\u67e5\u770b\u5982\u4f55\u6267\u884c\u7279\u5b9a\u67e5\u8be2\uff0c\u5982 <code>WHERE</code> \u548c <code>JSONB</code> \u3002</p>\n<h3 id="\u5e94\u7528\u5168\u5c40\u7684\u6a21\u578b\u53c2\u6570">\u5e94\u7528\u5168\u5c40\u7684\u6a21\u578b\u53c2\u6570</h3>\n<p>Sequelize \u6784\u9020\u51fd\u6570\u4f7f\u7528 <code>define</code> \u53c2\u6570\uff0c\u8be5\u53c2\u6570\u5c06\u7528\u4f5c\u6240\u6709\u5b9a\u4e49\u6a21\u578b\u7684\u9ed8\u8ba4\u53c2\u6570\u3002</p>\n<pre><code class="language-js"><span class="hljs-string">const</span> <span class="hljs-string">sequelize</span> <span class="hljs-string">=</span> <span class="hljs-string">new</span> <span class="hljs-string">Sequelize(\'connectionUri\',</span> <span class="hljs-string">{</span>\n<span class="hljs-attr">  define:</span> <span class="hljs-string">{</span>\n<span class="hljs-attr">    timestamps:</span> <span class="hljs-literal">false</span> <span class="hljs-string">//</span> <span class="hljs-string">\u9ed8\u8ba4\u4e3a</span> <span class="hljs-literal">true</span>\n  <span class="hljs-string">}</span>\n<span class="hljs-string">});</span>\n\n<span class="hljs-string">const</span> <span class="hljs-string">User</span> <span class="hljs-string">=</span> <span class="hljs-string">sequelize.define(\'user\',</span> <span class="hljs-string">{});</span> <span class="hljs-string">//</span> <span class="hljs-string">\u65f6\u95f4\u6233\u9ed8\u8ba4\u4e3a</span> <span class="hljs-literal">false</span>\n<span class="hljs-string">const</span> <span class="hljs-string">Post</span> <span class="hljs-string">=</span> <span class="hljs-string">sequelize.define(\'post\',</span> <span class="hljs-string">{},</span> <span class="hljs-string">{</span>\n<span class="hljs-attr">  timestamps:</span> <span class="hljs-literal">true</span> <span class="hljs-string">//</span> <span class="hljs-string">\u65f6\u95f4\u6233\u6b64\u65f6\u4e3a</span> <span class="hljs-literal">false</span>\n<span class="hljs-string">});</span></code></pre>\n<h2 id="promise">Promise</h2>\n<p>Sequelize \u4f7f\u7528 <a href="http://bluebirdjs.com">Bluebird</a> promise \u6765\u63a7\u5236\u5f02\u6b65\u63a7\u5236\u6d41\u7a0b\u3002</p>\n<p><strong>\u6ce8\u610f:</strong> <em>Sequelize \u4f7f\u7528 Bluebird \u5b9e\u4f8b\u7684\u72ec\u7acb\u526f\u672c\u3002\u5982\u679c\u4f60\u60f3\u8bbe\u7f6e\u4efb\u4f55 Bluebird \u7279\u5b9a\u7684\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 <code>Sequelize.Promise</code> \u6765\u8bbf\u95ee\u5b83\u3002</em></p>\n<p>\u5982\u679c\u4f60\u4e0d\u719f\u6089 promise \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u522b\u62c5\u5fc3\uff0c\u4f60\u53ef\u4ee5\u9605\u8bfb\u4e00\u4e0b <a href="http://bluebirdjs.com/docs/why-promises.html">\u8fd9\u91cc</a>\u3002</p>\n<p>\u57fa\u672c\u4e0a\uff0c\u4e00\u4e2a promise \u4ee3\u8868\u4e86\u67d0\u4e2a\u65f6\u5019\u4f1a\u51fa\u73b0\u7684\u503c - \u8fd9\u610f\u5473\u7740\u201c\u6211\u4fdd\u8bc1\u4f60\u4f1a\u5728\u67d0\u4e2a\u65f6\u5019\u7ed9\u4f60\u4e00\u4e2a\u7ed3\u679c\u6216\u4e00\u4e2a\u9519\u8bef\u201d\u3002 </p>\n<pre><code class="language-js">// \u4e0d\u8981\u8fd9\u6837\u505a\n<span class="hljs-keyword">user</span> = <span class="hljs-keyword">User</span>.findOne()\n\nconsole.log(<span class="hljs-keyword">user</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">\'firstName\'</span>));</code></pre>\n<p>_\u8fd9\u5c06\u6c38\u8fdc\u4e0d\u53ef\u7528\uff01_\u8fd9\u662f\u56e0\u4e3a<code>user</code>\u662f promise \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u884c\u3002 \u6b63\u786e\u7684\u65b9\u6cd5\u662f\uff1a</p>\n<pre><code class="language-js"><span class="hljs-keyword">User</span>.findOne().<span class="hljs-keyword">then</span>(<span class="hljs-keyword">user</span> =&gt; {\n  console.log(<span class="hljs-keyword">user</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">\'firstName\'</span>));\n});</code></pre>\n<p>\u5f53\u60a8\u7684\u73af\u5883\u6216\u89e3\u91ca\u5668\u652f\u6301 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await">async/await</a> \u65f6\uff0c\u8fd9\u5c06\u53ef\u7528\uff0c\u4f46\u53ea\u80fd\u5728  <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function">async</a>  \u65b9\u6cd5\u4f53\u4e2d\uff1a</p>\n<pre><code class="language-js"><span class="hljs-keyword">user</span> = await <span class="hljs-keyword">User</span>.findOne()\n\nconsole.log(<span class="hljs-keyword">user</span>.<span class="hljs-keyword">get</span>(<span class="hljs-string">\'firstName\'</span>));</code></pre>\n<p>\u4e00\u65e6\u77e5\u9053\u4e86\u4ec0\u4e48\u662f promise \u4ee5\u53ca\u5b83\u4eec\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u8bf7\u4f7f\u7528 <a href="http://bluebirdjs.com/docs/api-reference.html">bluebird API reference</a> \u4f5c\u4e3a\u8f6c\u79fb\u5de5\u5177\u3002 \u5c24\u5176\u662f\uff0c\u4f60\u53ef\u80fd\u4f1a\u4f7f\u7528\u5f88\u591a <a href="http://bluebirdjs.com/docs/api/promise.all.html"><code>.all</code></a> \u3002</p>\n'}}]);