(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[333],{W34M:function(s,a){s.exports='<h1 id="querying---\u67e5\u8be2">Querying - \u67e5\u8be2</h1>\n<h2 id="\u5c5e\u6027">\u5c5e\u6027</h2>\n<p>\u60f3\u8981\u53ea\u9009\u62e9\u67d0\u4e9b\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>attributes</code> \u9009\u9879\u3002 \u901a\u5e38\u662f\u4f20\u9012\u4e00\u4e2a\u6570\u7ec4\uff1a</p>\n<pre><code class="language-js"><span class="hljs-selector-tag">Model</span><span class="hljs-selector-class">.findAll</span>({\n  <span class="hljs-attribute">attributes</span>: [<span class="hljs-string">\'foo\'</span>, <span class="hljs-string">\'bar\'</span>]\n});</code></pre>\n<pre><code class="language-sql"><span class="hljs-keyword">SELECT </span>foo, <span class="hljs-keyword">bar </span>...</code></pre>\n<p>\u5c5e\u6027\u53ef\u4ee5\u4f7f\u7528\u5d4c\u5957\u6570\u7ec4\u6765\u91cd\u547d\u540d\uff1a</p>\n<pre><code class="language-js"><span class="hljs-selector-tag">Model</span><span class="hljs-selector-class">.findAll</span>({\n  <span class="hljs-attribute">attributes</span>: [<span class="hljs-string">\'foo\'</span>, [<span class="hljs-string">\'bar\'</span>, <span class="hljs-string">\'baz\'</span>]]\n});</code></pre>\n<pre><code class="language-sql"><span class="hljs-keyword">SELECT </span>foo, <span class="hljs-keyword">bar </span>AS <span class="hljs-keyword">baz </span>...</code></pre>\n<p>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>sequelize.fn</code> \u6765\u8fdb\u884c\u805a\u5408\uff1a</p>\n<pre><code class="language-js"><span class="hljs-selector-tag">Model</span><span class="hljs-selector-class">.findAll</span>({\n  <span class="hljs-attribute">attributes</span>: [[sequelize.<span class="hljs-built_in">fn</span>(<span class="hljs-string">\'COUNT\'</span>, sequelize.col(<span class="hljs-string">\'hats\'</span>)), <span class="hljs-string">\'no_hats\'</span>]]\n});</code></pre>\n<pre><code class="language-sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(hats) <span class="hljs-keyword">AS</span> no_hats ...</code></pre>\n<p>\u4f7f\u7528\u805a\u5408\u529f\u80fd\u65f6\uff0c\u5fc5\u987b\u7ed9\u5b83\u4e00\u4e2a\u522b\u540d\uff0c\u4ee5\u4fbf\u80fd\u591f\u4ece\u6a21\u578b\u4e2d\u8bbf\u95ee\u5b83\u3002 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528  <code>instance.get(&#39;no_hats&#39;)</code> \u83b7\u5f97\u5e3d\u5b50\u6570\u91cf\u3002</p>\n<p>\u6709\u65f6\uff0c\u5982\u679c\u60a8\u53ea\u60f3\u6dfb\u52a0\u805a\u5408\uff0c\u5219\u5217\u51fa\u6a21\u578b\u7684\u6240\u6709\u5c5e\u6027\u53ef\u80fd\u4ee4\u4eba\u538c\u70e6\uff1a</p>\n<pre><code class="language-js"><span class="hljs-comment">// This is a tiresome way of getting the number of hats...</span>\n<span class="hljs-selector-tag">Model</span><span class="hljs-selector-class">.findAll</span>({\n  <span class="hljs-attribute">attributes</span>: [<span class="hljs-string">\'id\'</span>, <span class="hljs-string">\'foo\'</span>, <span class="hljs-string">\'bar\'</span>, <span class="hljs-string">\'baz\'</span>, <span class="hljs-string">\'quz\'</span>, [sequelize.fn(<span class="hljs-string">\'COUNT\'</span>, sequelize.col(<span class="hljs-string">\'hats\'</span>)), <span class="hljs-string">\'no_hats\'</span>]]\n});\n\n<span class="hljs-comment">// This is shorter, and less error prone because it still works if you add / remove attributes</span>\n<span class="hljs-selector-tag">Model</span><span class="hljs-selector-class">.findAll</span>({\n  <span class="hljs-attribute">attributes</span>: { <span class="hljs-attribute">include</span>: [[sequelize.fn(<span class="hljs-string">\'COUNT\'</span>, sequelize.col(<span class="hljs-string">\'hats\'</span>)), <span class="hljs-string">\'no_hats\'</span>]] }\n});</code></pre>\n<pre><code class="language-sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">id</span>, foo, bar, baz, quz, <span class="hljs-keyword">COUNT</span>(hats) <span class="hljs-keyword">AS</span> no_hats ...</code></pre>\n<p>\u540c\u6837\uff0c\u5b83\u4e5f\u53ef\u4ee5\u5220\u9664\u4e00\u4e9b\u6307\u5b9a\u7684\u5c5e\u6027\uff1a</p>\n<pre><code class="language-js"><span class="hljs-selector-tag">Model</span><span class="hljs-selector-class">.findAll</span>({\n  <span class="hljs-attribute">attributes</span>: { exclude: [<span class="hljs-string">\'baz\'</span>] }\n});</code></pre>\n<pre><code class="language-sql"><span class="hljs-keyword">SELECT </span>id, foo, <span class="hljs-keyword">bar, </span>quz ...</code></pre>\n<h2 id="where">Where</h2>\n<p>\u65e0\u8bba\u60a8\u662f\u901a\u8fc7 findAll/find \u6216\u6279\u91cf updates/destroys \u8fdb\u884c\u67e5\u8be2\uff0c\u90fd\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a <code>where</code> \u5bf9\u8c61\u6765\u8fc7\u6ee4\u67e5\u8be2\u3002</p>\n<p><code>where</code> \u901a\u5e38\u7528 attribute:value \u952e\u503c\u5bf9\u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u4e2d value \u53ef\u4ee5\u662f\u5339\u914d\u7b49\u5f0f\u7684\u6570\u636e\u6216\u5176\u4ed6\u8fd0\u7b97\u7b26\u7684\u952e\u503c\u5bf9\u8c61\u3002</p>\n<p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957 <code>or</code> \u548c <code>and</code> <code>\u8fd0\u7b97\u7b26</code> \u7684\u96c6\u5408\u6765\u751f\u6210\u590d\u6742\u7684 AND/OR \u6761\u4ef6\u3002</p>\n<h3 id="\u57fa\u7840">\u57fa\u7840</h3>\n<pre><code class="language-js">const Op = Sequelize.Op;\n\nPost.findAll({\n  <span class="hljs-keyword">where</span>: {\n    authorId: <span class="hljs-number">2</span>\n  }\n});\n// <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> post <span class="hljs-keyword">WHERE</span> authorId = <span class="hljs-number">2</span>\n\nPost.findAll({\n  <span class="hljs-keyword">where</span>: {\n    authorId: <span class="hljs-number">12</span>,\n    status: <span class="hljs-string">\'active\'</span>\n  }\n});\n// <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> post <span class="hljs-keyword">WHERE</span> authorId = <span class="hljs-number">12</span> <span class="hljs-keyword">AND</span> status = <span class="hljs-string">\'active\'</span>;\n\nPost.findAll({\n  <span class="hljs-keyword">where</span>: {\n    [Op.<span class="hljs-keyword">or</span>]: [{authorId: <span class="hljs-number">12</span>}, {authorId: <span class="hljs-number">13</span>}]\n  }\n});\n// <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> post <span class="hljs-keyword">WHERE</span> authorId = <span class="hljs-number">12</span> <span class="hljs-keyword">OR</span> authorId = <span class="hljs-number">13</span>;\n\nPost.findAll({\n  <span class="hljs-keyword">where</span>: {\n    authorId: {\n      [Op.<span class="hljs-keyword">or</span>]: [<span class="hljs-number">12</span>, <span class="hljs-number">13</span>]\n    }\n  }\n});\n// <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> post <span class="hljs-keyword">WHERE</span> authorId = <span class="hljs-number">12</span> <span class="hljs-keyword">OR</span> authorId = <span class="hljs-number">13</span>;\n\nPost.destroy({\n  <span class="hljs-keyword">where</span>: {\n    status: <span class="hljs-string">\'inactive\'</span>\n  }\n});\n// <span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> post <span class="hljs-keyword">WHERE</span> status = <span class="hljs-string">\'inactive\'</span>;\n\nPost.<span class="hljs-keyword">update</span>({\n  updatedAt: <span class="hljs-keyword">null</span>,\n}, {\n  <span class="hljs-keyword">where</span>: {\n    deletedAt: {\n      [Op.ne]: <span class="hljs-keyword">null</span>\n    }\n  }\n});\n// <span class="hljs-keyword">UPDATE</span> post <span class="hljs-keyword">SET</span> updatedAt = <span class="hljs-keyword">null</span> <span class="hljs-keyword">WHERE</span> deletedAt <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>;\n\nPost.findAll({\n  <span class="hljs-keyword">where</span>: sequelize.<span class="hljs-keyword">where</span>(sequelize.fn(<span class="hljs-string">\'char_length\'</span>, sequelize.col(<span class="hljs-string">\'status\'</span>)), <span class="hljs-number">6</span>)\n});\n// <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> post <span class="hljs-keyword">WHERE</span> char_length(status) = <span class="hljs-number">6</span>;</code></pre>\n<h3 id="\u64cd\u4f5c\u7b26">\u64cd\u4f5c\u7b26</h3>\n<p>Sequelize \u53ef\u7528\u4e8e\u521b\u5efa\u66f4\u590d\u6742\u6bd4\u8f83\u7684\u7b26\u53f7\u8fd0\u7b97\u7b26 -</p>\n<pre><code class="language-js">const Op = Sequelize.Op\n\n[<span class="hljs-symbol">Op.and</span>]: <span class="hljs-link">{a: 5}           // \u4e14 (a = 5)</span>\n[<span class="hljs-symbol">Op.or</span>]: <span class="hljs-link">[{a: 5}, {a: 6}]  // (a = 5 \u6216 a = 6)</span>\n[<span class="hljs-symbol">Op.gt</span>]: <span class="hljs-link">6,                // id &gt; 6</span>\n[<span class="hljs-symbol">Op.gte</span>]: <span class="hljs-link">6,               // id &gt;= 6</span>\n[<span class="hljs-symbol">Op.lt</span>]: <span class="hljs-link">10,               // id &lt; 10</span>\n[<span class="hljs-symbol">Op.lte</span>]: <span class="hljs-link">10,              // id &lt;= 10</span>\n[<span class="hljs-symbol">Op.ne</span>]: <span class="hljs-link">20,               // id != 20</span>\n[<span class="hljs-symbol">Op.eq</span>]: <span class="hljs-link">3,                // = 3</span>\n[<span class="hljs-symbol">Op.not</span>]: <span class="hljs-link">true,            // \u4e0d\u662f TRUE</span>\n[<span class="hljs-symbol">Op.between</span>]: <span class="hljs-link">[6, 10],     // \u5728 6 \u548c 10 \u4e4b\u95f4</span>\n[<span class="hljs-symbol">Op.notBetween</span>]: <span class="hljs-link">[11, 15], // \u4e0d\u5728 11 \u548c 15 \u4e4b\u95f4</span>\n[<span class="hljs-symbol">Op.in</span>]: <span class="hljs-link">[1, 2],           // \u5728 [1, 2] \u4e4b\u4e2d</span>\n[<span class="hljs-symbol">Op.notIn</span>]: <span class="hljs-link">[1, 2],        // \u4e0d\u5728 [1, 2] \u4e4b\u4e2d</span>\n[<span class="hljs-symbol">Op.like</span>]: <span class="hljs-link">\'%hat\',         // \u5305\u542b \'%hat\'</span>\n[<span class="hljs-symbol">Op.notLike</span>]: <span class="hljs-link">\'%hat\'       // \u4e0d\u5305\u542b \'%hat\'</span>\n[<span class="hljs-symbol">Op.iLike</span>]: <span class="hljs-link">\'%hat\'         // \u5305\u542b \'%hat\' (\u4e0d\u533a\u5206\u5927\u5c0f\u5199)  (\u4ec5\u9650 PG)</span>\n[<span class="hljs-symbol">Op.notILike</span>]: <span class="hljs-link">\'%hat\'      // \u4e0d\u5305\u542b \'%hat\'  (\u4ec5\u9650 PG)</span>\n[<span class="hljs-symbol">Op.regexp</span>]: <span class="hljs-link">\'^[h|a|t]\'    // \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f/~ \'^[h|a|t]\' (\u4ec5\u9650 MySQL/PG)</span>\n[<span class="hljs-symbol">Op.notRegexp</span>]: <span class="hljs-link">\'^[h|a|t]\' // \u4e0d\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f/!~ \'^[h|a|t]\' (\u4ec5\u9650 MySQL/PG)</span>\n[<span class="hljs-symbol">Op.iRegexp</span>]: <span class="hljs-link">\'^[h|a|t]\'    // ~* \'^[h|a|t]\' (\u4ec5\u9650 PG)</span>\n[<span class="hljs-symbol">Op.notIRegexp</span>]: <span class="hljs-link">\'^[h|a|t]\' // !~* \'^[h|a|t]\' (\u4ec5\u9650 PG)</span>\n[<span class="hljs-symbol">Op.like</span>]: <span class="hljs-link">{ [Op.any]: [\'cat\', \'hat\']} // \u5305\u542b\u4efb\u4f55\u6570\u7ec4[\'cat\', \'hat\'] - \u540c\u6837\u9002\u7528\u4e8e iLike \u548c notLike</span>\n[<span class="hljs-symbol">Op.overlap</span>]: <span class="hljs-link">[1, 2]       // &amp;&amp; [1, 2] (PG\u6570\u7ec4\u91cd\u53e0\u8fd0\u7b97\u7b26)</span>\n[<span class="hljs-symbol">Op.contains</span>]: <span class="hljs-link">[1, 2]      // @&gt; [1, 2] (PG\u6570\u7ec4\u5305\u542b\u8fd0\u7b97\u7b26)</span>\n[<span class="hljs-symbol">Op.contained</span>]: <span class="hljs-link">[1, 2]     // &lt;@ [1, 2] (PG\u6570\u7ec4\u5305\u542b\u4e8e\u8fd0\u7b97\u7b26)</span>\n[<span class="hljs-symbol">Op.any</span>]: <span class="hljs-link">[2,3]            // \u4efb\u4f55\u6570\u7ec4[2, 3]::INTEGER (\u4ec5\u9650PG)</span>\n\n[<span class="hljs-symbol">Op.col</span>]: <span class="hljs-link">\'user.organization_id\' // = \'user\'.\'organization_id\', \u4f7f\u7528\u6570\u636e\u5e93\u8bed\u8a00\u7279\u5b9a\u7684\u5217\u6807\u8bc6\u7b26, \u672c\u4f8b\u4f7f\u7528 PG</span></code></pre>\n<h4 id="\u8303\u56f4\u9009\u9879">\u8303\u56f4\u9009\u9879</h4>\n<p>\u6240\u6709\u64cd\u4f5c\u7b26\u90fd\u652f\u6301\u652f\u6301\u7684\u8303\u56f4\u7c7b\u578b\u67e5\u8be2\u3002</p>\n<p>\u8bf7\u8bb0\u4f4f\uff0c\u63d0\u4f9b\u7684\u8303\u56f4\u503c\u4e5f\u53ef\u4ee5<a href="/manual/tutorial/models-definition.html#range-types">\u5b9a\u4e49\u7ed1\u5b9a\u7684 inclusion/exclusion</a>\u3002</p>\n<pre><code class="language-js">// \u6240\u6709\u4e0a\u8ff0\u76f8\u7b49\u548c\u4e0d\u76f8\u7b49\u7684\u64cd\u4f5c\u7b26\u52a0\u4e0a\u4ee5\u4e0b\u5185\u5bb9:\n\n[Op.contains]: <span class="hljs-number">2</span>           // @&gt; <span class="hljs-string">\'2\'</span>::<span class="hljs-type">integer</span> (PG range contains element <span class="hljs-keyword">operator</span>)\n[Op.contains]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]      // @&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range contains range <span class="hljs-keyword">operator</span>)\n[Op.contained]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]     // &lt;@ [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range <span class="hljs-keyword">is</span> contained <span class="hljs-keyword">by</span> <span class="hljs-keyword">operator</span>)\n[Op.overlap]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]       // &amp;&amp; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range overlap (have points <span class="hljs-keyword">in</span> common) <span class="hljs-keyword">operator</span>)\n[Op.adjacent]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]      // -|- [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range <span class="hljs-keyword">is</span> adjacent <span class="hljs-keyword">to</span> <span class="hljs-keyword">operator</span>)\n[Op.strictLeft]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]    // &lt;&lt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range strictly left <span class="hljs-keyword">of</span> <span class="hljs-keyword">operator</span>)\n[Op.strictRight]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]   // &gt;&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range strictly right <span class="hljs-keyword">of</span> <span class="hljs-keyword">operator</span>)\n[Op.noExtendRight]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>] // &amp;&lt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range does <span class="hljs-keyword">not</span> extend <span class="hljs-keyword">to</span> the right <span class="hljs-keyword">of</span> <span class="hljs-keyword">operator</span>)\n[Op.noExtendLeft]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]  // &amp;&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>) (PG range does <span class="hljs-keyword">not</span> extend <span class="hljs-keyword">to</span> the left <span class="hljs-keyword">of</span> <span class="hljs-keyword">operator</span>)</code></pre>\n<h4 id="\u7ec4\u5408">\u7ec4\u5408</h4>\n<pre><code class="language-js">{\n  rank: {\n    [Op.<span class="hljs-keyword">or</span>]: {\n      [Op.lt]: <span class="hljs-number">1000</span>,\n      [Op.eq]: <span class="hljs-keyword">null</span>\n    }\n  }\n}\n// rank &lt; <span class="hljs-number">1000</span> <span class="hljs-keyword">OR</span> rank <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>\n\n{\n  createdAt: {\n    [Op.lt]: <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(),\n    [Op.gt]: <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>(<span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>() - <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>)\n  }\n}\n// createdAt &lt; [<span class="hljs-type">timestamp</span>] <span class="hljs-keyword">AND</span> createdAt &gt; [<span class="hljs-type">timestamp</span>]\n\n{\n  [Op.<span class="hljs-keyword">or</span>]: [\n    {\n      title: {\n        [Op.<span class="hljs-keyword">like</span>]: <span class="hljs-string">\'Boat%\'</span>\n      }\n    },\n    {\n      description: {\n        [Op.<span class="hljs-keyword">like</span>]: <span class="hljs-string">\'%boat%\'</span>\n      }\n    }\n  ]\n}\n// title <span class="hljs-keyword">LIKE</span> <span class="hljs-string">\'Boat%\'</span> <span class="hljs-keyword">OR</span> description <span class="hljs-keyword">LIKE</span> <span class="hljs-string">\'%boat%\'</span></code></pre>\n<h4 id="\u8fd0\u7b97\u7b26\u522b\u540d">\u8fd0\u7b97\u7b26\u522b\u540d</h4>\n<p>Sequelize \u5141\u8bb8\u5c06\u7279\u5b9a\u5b57\u7b26\u4e32\u8bbe\u7f6e\u4e3a\u64cd\u4f5c\u7b26\u7684\u522b\u540d -</p>\n<pre><code class="language-js">const <span class="hljs-keyword">Op</span> = Sequelize.<span class="hljs-keyword">Op</span>;\nconst operatorsAliases = {\n  $<span class="hljs-keyword">gt</span>: <span class="hljs-keyword">Op</span>.<span class="hljs-keyword">gt</span>\n}\nconst connection = new Sequelize(db, user, pass, { operatorsAliases })\n\n[<span class="hljs-keyword">Op</span>.<span class="hljs-keyword">gt</span>]: <span class="hljs-number">6</span> // &gt; <span class="hljs-number">6</span>\n$<span class="hljs-keyword">gt</span>: <span class="hljs-number">6</span> // \u7b49\u540c\u4e8e\u4f7f\u7528 <span class="hljs-keyword">Op</span>.<span class="hljs-keyword">gt</span> (&gt; <span class="hljs-number">6</span>)</code></pre>\n<h4 id="\u8fd0\u7b97\u7b26\u5b89\u5168\u6027">\u8fd0\u7b97\u7b26\u5b89\u5168\u6027</h4>\n<p>\u4f7f\u7528\u6ca1\u6709\u4efb\u4f55\u522b\u540d\u7684 Sequelize \u53ef\u4ee5\u63d0\u9ad8\u5b89\u5168\u6027\u3002</p>\n<p>\u4e00\u4e9b\u6846\u67b6\u4f1a\u81ea\u52a8\u5c06\u7528\u6237\u8f93\u5165\u89e3\u6790\u4e3ajs\u5bf9\u8c61\uff0c\u5982\u679c\u60a8\u65e0\u6cd5\u6e05\u7406\u8f93\u5165\uff0c\u5219\u53ef\u80fd\u4f1a\u5c06\u5177\u6709\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26\u7684\u5bf9\u8c61\u6ce8\u5165\u5230 Sequelize\u3002</p>\n<p>\u4e0d\u5e26\u4efb\u4f55\u5b57\u7b26\u4e32\u522b\u540d\u5c06\u4f7f\u8fd0\u7b97\u7b26\u4e0d\u592a\u53ef\u80fd\u88ab\u6ce8\u5165\uff0c\u4f46\u60a8\u5e94\u8be5\u59cb\u7ec8\u6b63\u786e\u9a8c\u8bc1\u548c\u6e05\u7406\u7528\u6237\u8f93\u5165\u3002</p>\n<p>\u7531\u4e8e\u5411\u540e\u517c\u5bb9\u6027\u539f\u56e0Sequelize\u9ed8\u8ba4\u8bbe\u7f6e\u4ee5\u4e0b\u522b\u540d -</p>\n<p>$eq, $ne, $gte, $gt, $lte, $lt, $not, $in, $notIn, $is, $like, $notLike, $iLike, $notILike, $regexp, $notRegexp, $iRegexp, $notIRegexp, $between, $notBetween, $overlap, $contains, $contained, $adjacent, $strictLeft, $strictRight, $noExtendRight, $noExtendLeft, $and, $or, $any, $all, $values, $col</p>\n<p>\u76ee\u524d\uff0c\u4ee5\u4e0b\u9057\u7559\u522b\u540d\u4e5f\u88ab\u8bbe\u7f6e\uff0c\u4f46\u8ba1\u5212\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u5b8c\u5168\u5220\u9664 -</p>\n<p>ne, not, in, notIn, gte, gt, lte, lt, like, ilike, $ilike, nlike, $notlike, notilike, .., between, !.., notbetween, nbetween, overlap, &amp;&amp;, @&gt;, &lt;@</p>\n<p>\u4e3a\u4e86\u66f4\u597d\u7684\u5b89\u5168\u6027\uff0c\u5efa\u8bae\u4f7f\u7528 <code>Sequelize.Op</code>\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4efb\u4f55\u5b57\u7b26\u4e32\u522b\u540d\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e<code>operatorsAliases</code>\u9009\u9879\u6765\u9650\u5236\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7684\u522b\u540d\uff0c\u8bf7\u8bb0\u4f4f\u8981\u6e05\u7406\u7528\u6237\u8f93\u5165\uff0c\u7279\u522b\u662f\u5f53\u60a8\u76f4\u63a5\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9 Sequelize \u65b9\u6cd5\u65f6\u3002</p>\n<pre><code class="language-js">const Op = Sequelize.Op;\n\n<span class="hljs-comment">// \u4e0d\u7528\u4efb\u4f55\u64cd\u4f5c\u7b26\u522b\u540d\u4f7f\u7528 sequelize </span>\nconst connection = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Sequelize(<span class="hljs-params">db</span>, <span class="hljs-params">user</span>, <span class="hljs-params">pass</span>, { <span class="hljs-params">operatorsAliases</span>: <span class="hljs-params">false</span> })</span>;\n\n<span class="hljs-comment">// \u53ea\u7528 $and =&gt; Op.and \u64cd\u4f5c\u7b26\u522b\u540d\u4f7f\u7528 sequelize </span>\nconst connection2 = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Sequelize(<span class="hljs-params">db</span>, <span class="hljs-params">user</span>, <span class="hljs-params">pass</span>, { <span class="hljs-params">operatorsAliases</span>: { $<span class="hljs-params">and</span>: Op.<span class="hljs-params">and</span> } })</span>;</code></pre>\n<p>\u5982\u679c\u4f60\u4f7f\u7528\u9ed8\u8ba4\u522b\u540d\u5e76\u4e14\u4e0d\u9650\u5236\u5b83\u4eec\uff0cSequelize\u4f1a\u53d1\u51fa\u8b66\u544a\u3002\u5982\u679c\u60a8\u60f3\u7ee7\u7eed\u4f7f\u7528\u6240\u6709\u9ed8\u8ba4\u522b\u540d\uff08\u4e0d\u5305\u62ec\u65e7\u7248\u522b\u540d\uff09\u800c\u4e0d\u53d1\u51fa\u8b66\u544a\uff0c\u60a8\u53ef\u4ee5\u4f20\u9012\u4ee5\u4e0b\u8fd0\u7b97\u7b26\u53c2\u6570 -</p>\n<pre><code class="language-js">const Op = Sequelize.Op;\nconst operatorsAliases = {\n  $eq: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>eq,\n  $ne: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>ne,\n  $gte: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>gte,\n  $gt: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>gt,\n  $lte: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>lte,\n  $lt: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>lt,\n  $not: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>not,\n  $<span class="hljs-keyword">in</span>: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span><span class="hljs-keyword">in</span>,\n  $notIn: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>notIn,\n  $is: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>is,\n  $like: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>like,\n  $notLike: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>notLike,\n  $iLike: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>iLike,\n  $notILike: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>notILike,\n  $regexp: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>regexp,\n  $notRegexp: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>notRegexp,\n  $iRegexp: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>iRegexp,\n  $notIRegexp: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>notIRegexp,\n  $between: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>between,\n  $notBetween: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>notBetween,\n  $overlap: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>overlap,\n  $contains: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>contains,\n  $contained: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>contained,\n  $adjacent: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>adjacent,\n  $strictLeft: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>strictLeft,\n  $strictRight: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>strictRight,\n  $noExtendRight: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>noExtendRight,\n  $noExtendLeft: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>noExtendLeft,\n  $<span class="hljs-keyword">and</span>: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span><span class="hljs-keyword">and</span>,\n  $<span class="hljs-keyword">or</span>: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span><span class="hljs-keyword">or</span>,\n  $any: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>any,\n  $all: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>all,\n  $values: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>values,\n  $col: <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Op</span>.</span></span>col\n};\n\nconst connection = <span class="hljs-keyword">new</span> <span class="hljs-constructor">Sequelize(<span class="hljs-params">db</span>, <span class="hljs-params">user</span>, <span class="hljs-params">pass</span>, { <span class="hljs-params">operatorsAliases</span> })</span>;</code></pre>\n<h3 id="json">JSON</h3>\n<p>JSON \u6570\u636e\u7c7b\u578b\u4ec5\u7531 PostgreSQL\uff0cSQLite \u548c MySQL \u8bed\u8a00\u652f\u6301\u3002</p>\n<h4 id="postgresql">PostgreSQL</h4>\n<p>PostgreSQL \u4e2d\u7684 JSON \u6570\u636e\u7c7b\u578b\u5c06\u503c\u5b58\u50a8\u4e3a\u7eaf\u6587\u672c\uff0c\u800c\u4e0d\u662f\u4e8c\u8fdb\u5236\u8868\u793a\u3002 \u5982\u679c\u60a8\u53ea\u662f\u60f3\u5b58\u50a8\u548c\u68c0\u7d22 JSON \u683c\u5f0f\u6570\u636e\uff0c\u90a3\u4e48\u4f7f\u7528 JSON \u5c06\u5360\u7528\u66f4\u5c11\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u5e76\u4e14\u4ece\u5176\u8f93\u5165\u6570\u636e\u4e2d\u6784\u5efa\u65f6\u95f4\u66f4\u5c11\u3002 \u4f46\u662f\uff0c\u5982\u679c\u60a8\u60f3\u5bf9 JSON \u503c\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u5219\u5e94\u8be5\u4f7f\u7528\u4e0b\u9762\u63cf\u8ff0\u7684 JSONB \u6570\u636e\u7c7b\u578b\u3002</p>\n<h4 id="mssql">MSSQL</h4>\n<p>MSSQL \u6ca1\u6709 JSON \u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u4f9b\u4e86\u5bf9\u4e8e\u81ea SQL Server 2016 \u4ee5\u6765\u901a\u8fc7\u67d0\u4e9b\u51fd\u6570\u5b58\u50a8\u4e3a\u5b57\u7b26\u4e32\u7684 JSON \u7684\u652f\u6301\u3002\u4f7f\u7528\u8fd9\u4e9b\u51fd\u6570\uff0c\u60a8\u5c06\u80fd\u591f\u67e5\u8be2\u5b58\u50a8\u5728\u5b57\u7b26\u4e32\u4e2d\u7684 JSON\uff0c\u4f46\u662f\u4efb\u4f55\u8fd4\u56de\u7684\u503c\u5c06\u9700\u8981\u5206\u522b\u8fdb\u884c\u89e3\u6790\u3002</p>\n<pre><code class="language-js">// ISJSON - \u6d4b\u8bd5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6709\u6548\u7684 <span class="hljs-type">JSON</span>\n<span class="hljs-keyword">User</span>.findAll({\n  <span class="hljs-keyword">where</span>: sequelize.<span class="hljs-keyword">where</span>(sequelize.fn(<span class="hljs-string">\'ISJSON\'</span>, sequelize.col(<span class="hljs-string">\'userDetails\'</span>)), <span class="hljs-number">1</span>)\n})\n\n// JSON_VALUE - \u4ece <span class="hljs-type">JSON</span> \u5b57\u7b26\u4e32\u63d0\u53d6\u6807\u91cf\u503c\n<span class="hljs-keyword">User</span>.findAll({\n  attributes: [[ sequelize.fn(<span class="hljs-string">\'JSON_VALUE\'</span>, sequelize.col(<span class="hljs-string">\'userDetails\'</span>), <span class="hljs-string">\'$.address.Line1\'</span>), <span class="hljs-string">\'address line 1\'</span>]]\n})\n\n// JSON_VALUE - \u4ece <span class="hljs-type">JSON</span> \u5b57\u7b26\u4e32\u4e2d\u67e5\u8be2\u6807\u91cf\u503c\n<span class="hljs-keyword">User</span>.findAll({\n  <span class="hljs-keyword">where</span>: sequelize.<span class="hljs-keyword">where</span>(sequelize.fn(<span class="hljs-string">\'JSON_VALUE\'</span>, sequelize.col(<span class="hljs-string">\'userDetails\'</span>), <span class="hljs-string">\'$.address.Line1\'</span>), <span class="hljs-string">\'14, Foo Street\'</span>)\n})\n\n// JSON_QUERY - \u63d0\u53d6\u4e00\u4e2a\u5bf9\u8c61\u6216\u6570\u7ec4\n<span class="hljs-keyword">User</span>.findAll({\n  attributes: [[ sequelize.fn(<span class="hljs-string">\'JSON_QUERY\'</span>, sequelize.col(<span class="hljs-string">\'userDetails\'</span>), <span class="hljs-string">\'$.address\'</span>), <span class="hljs-string">\'full address\'</span>]]\n})</code></pre>\n<h3 id="jsonb">JSONB</h3>\n<p>JSONB \u53ef\u4ee5\u4ee5\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2\u3002</p>\n<h4 id="\u5d4c\u5957\u5bf9\u8c61">\u5d4c\u5957\u5bf9\u8c61</h4>\n<pre><code class="language-js">{\n  meta: {\n    video: {\n      url: {\n        [Op.ne]: null\n      }\n    }\n  }\n}</code></pre>\n<h4 id="\u5d4c\u5957\u952e">\u5d4c\u5957\u952e</h4>\n<pre><code class="language-js">{\n  <span class="hljs-string">"meta.audio.length"</span>: {\n    [Op.gt]: <span class="hljs-number">20</span>\n  }\n}</code></pre>\n<h4 id="\u5916\u5305\u88f9">\u5916\u5305\u88f9</h4>\n<pre><code class="language-js">{\n  <span class="hljs-string">"meta"</span>: {\n    [Op.contains]: {\n      site: {\n        url: \'http://google.com\'\n      }\n    }\n  }\n}</code></pre>\n<h3 id="\u5173\u7cfb--\u5173\u8054">\u5173\u7cfb / \u5173\u8054</h3>\n<pre><code class="language-js">// \u627e\u5230\u6240\u6709\u5177\u6709\u81f3\u5c11\u4e00\u4e2a task \u7684  project\uff0c\u5176\u4e2d task.<span class="hljs-keyword">state</span> === project.<span class="hljs-keyword">state</span>\nProject.findAll({\n    include: [{\n        model: Task,\n        where: { <span class="hljs-keyword">state</span>: Sequelize.col(\'project.<span class="hljs-keyword">state</span>\') }\n    }]\n})</code></pre>\n<h2 id="\u5206\u9875--\u9650\u5236">\u5206\u9875 / \u9650\u5236</h2>\n<pre><code class="language-js"><span class="hljs-comment">// \u83b7\u53d610\u4e2a\u5b9e\u4f8b/\u884c</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Project</span>.</span></span>find<span class="hljs-constructor">All({ <span class="hljs-params">limit</span>: 10 })</span>\n\n<span class="hljs-comment">// \u8df3\u8fc78\u4e2a\u5b9e\u4f8b/\u884c</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Project</span>.</span></span>find<span class="hljs-constructor">All({ <span class="hljs-params">offset</span>: 8 })</span>\n\n<span class="hljs-comment">// \u8df3\u8fc75\u4e2a\u5b9e\u4f8b\uff0c\u7136\u540e\u53d65\u4e2a</span>\n<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Project</span>.</span></span>find<span class="hljs-constructor">All({ <span class="hljs-params">offset</span>: 5, <span class="hljs-params">limit</span>: 5 })</span></code></pre>\n<h2 id="\u6392\u5e8f">\u6392\u5e8f</h2>\n<p><code>order</code> \u9700\u8981\u4e00\u4e2a\u6761\u76ee\u7684\u6570\u7ec4\u6765\u6392\u5e8f\u67e5\u8be2\u6216\u8005\u4e00\u4e2a sequelize \u65b9\u6cd5\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u5c06\u8981\u4f7f\u7528\u4efb\u4e00\u5c5e\u6027\u7684 tuple/array\uff0c\u5e76\u786e\u5b9a\u6392\u5e8f\u7684\u6b63\u53cd\u65b9\u5411\u3002</p>\n<pre><code class="language-js">Subtask.<span class="hljs-keyword">findAll</span>({\n  order: [\n    <span class="hljs-comment">// \u5c06\u8f6c\u4e49\u7528\u6237\u540d\uff0c\u5e76\u6839\u636e\u6709\u6548\u7684\u65b9\u5411\u53c2\u6570\u5217\u8868\u9a8c\u8bc1DESC</span>\n    [<span class="hljs-string">\'title\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// \u5c06\u6309\u6700\u5927\u503c\u6392\u5e8f(age)</span>\n    sequelize.fn(<span class="hljs-string">\'max\'</span>, sequelize.col(<span class="hljs-string">\'age\'</span>)),\n\n    <span class="hljs-comment">// \u5c06\u6309\u6700\u5927\u987a\u5e8f(age) DESC</span>\n    [sequelize.fn(<span class="hljs-string">\'max\'</span>, sequelize.col(<span class="hljs-string">\'age\'</span>)), <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// \u5c06\u6309 otherfunction \u6392\u5e8f(`col1`, 12, \'lalala\') DESC</span>\n    [sequelize.fn(<span class="hljs-string">\'otherfunction\'</span>, sequelize.col(<span class="hljs-string">\'col1\'</span>), <span class="hljs-number">12</span>, <span class="hljs-string">\'lalala\'</span>), <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// \u5c06\u4f7f\u7528\u6a21\u578b\u540d\u79f0\u4f5c\u4e3a\u5173\u8054\u7684\u540d\u79f0\u6392\u5e8f\u5173\u8054\u6a21\u578b\u7684 created_at\u3002</span>\n    [<span class="hljs-keyword">Task</span>, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// Will order through an associated model\'s created_at using the model names as the associations\' names.</span>\n    [<span class="hljs-keyword">Task</span>, <span class="hljs-keyword">Project</span>, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// \u5c06\u4f7f\u7528\u5173\u8054\u7684\u540d\u79f0\u7531\u5173\u8054\u6a21\u578b\u7684created_at\u6392\u5e8f\u3002</span>\n    [<span class="hljs-string">\'Task\'</span>, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// Will order by a nested associated model\'s created_at using the names of the associations.</span>\n    [<span class="hljs-string">\'Task\'</span>, <span class="hljs-string">\'Project\'</span>, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// Will order by an associated model\'s created_at using an association object. (\u4f18\u9009\u65b9\u6cd5)</span>\n    [Subtask.associations.<span class="hljs-keyword">Task</span>, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// Will order by a nested associated model\'s created_at using association objects. (\u4f18\u9009\u65b9\u6cd5)</span>\n    [Subtask.associations.<span class="hljs-keyword">Task</span>, <span class="hljs-keyword">Task</span>.associations.<span class="hljs-keyword">Project</span>, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// Will order by an associated model\'s created_at using a simple association object.</span>\n    [{model: <span class="hljs-keyword">Task</span>, as: <span class="hljs-string">\'Task\'</span>}, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>],\n\n    <span class="hljs-comment">// \u5d4c\u5957\u5173\u8054\u6a21\u578b\u7684 created_at \u7b80\u5355\u5173\u8054\u5bf9\u8c61\u6392\u5e8f</span>\n    [{model: <span class="hljs-keyword">Task</span>, as: <span class="hljs-string">\'Task\'</span>}, {model: <span class="hljs-keyword">Project</span>, as: <span class="hljs-string">\'Project\'</span>}, <span class="hljs-string">\'createdAt\'</span>, <span class="hljs-string">\'DESC\'</span>]\n  ]\n\n  <span class="hljs-comment">// \u5c06\u6309\u5e74\u9f84\u6700\u5927\u503c\u964d\u5e8f\u6392\u5217</span>\n  order: sequelize.literal(<span class="hljs-string">\'max(age) DESC\'</span>)\n\n  <span class="hljs-comment">// \u6309\u6700\u5e74\u9f84\u5927\u503c\u5347\u5e8f\u6392\u5217\uff0c\u5f53\u7701\u7565\u6392\u5e8f\u6761\u4ef6\u65f6\u9ed8\u8ba4\u662f\u5347\u5e8f\u6392\u5217</span>\n  order: sequelize.fn(<span class="hljs-string">\'max\'</span>, sequelize.col(<span class="hljs-string">\'age\'</span>))\n\n  <span class="hljs-comment">// \u6309\u5347\u5e8f\u6392\u5217\u662f\u7701\u7565\u6392\u5e8f\u6761\u4ef6\u7684\u9ed8\u8ba4\u987a\u5e8f</span>\n  order: sequelize.col(<span class="hljs-string">\'age\'</span>)\n\n  <span class="hljs-comment">// \u5c06\u6839\u636e\u65b9\u8a00\u968f\u673a\u6392\u5e8f (\u800c\u4e0d\u662f fn(\'RAND\') \u6216 fn(\'RANDOM\'))</span>\n  order: sequelize.random()\n})</code></pre>\n<h2 id="table-hint">Table Hint</h2>\n<p>\u5f53\u4f7f\u7528 mssql \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>tableHint</code> \u6765\u9009\u62e9\u4f20\u9012\u4e00\u4e2a\u8868\u63d0\u793a\u3002 \u8be5\u63d0\u793a\u5fc5\u987b\u662f\u6765\u81ea <code>Sequelize.TableHints</code> \u7684\u503c\uff0c\u53ea\u80fd\u5728\u7edd\u5bf9\u5fc5\u8981\u65f6\u4f7f\u7528\u3002 \u6bcf\u4e2a\u67e5\u8be2\u5f53\u524d\u4ec5\u652f\u6301\u5355\u4e2a\u8868\u63d0\u793a\u3002</p>\n<p>\u8868\u63d0\u793a\u901a\u8fc7\u6307\u5b9a\u67d0\u4e9b\u9009\u9879\u6765\u8986\u76d6 mssql \u67e5\u8be2\u4f18\u5316\u5668\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002 \u5b83\u4eec\u53ea\u5f71\u54cd\u8be5\u5b50\u53e5\u4e2d\u5f15\u7528\u7684\u8868\u6216\u89c6\u56fe\u3002</p>\n<pre><code class="language-js">const TableHints = Sequelize.TableHints;\n\n<span class="hljs-keyword">Project</span>.<span class="hljs-keyword">findAll</span>({\n  <span class="hljs-comment">// \u6dfb\u52a0 table hint NOLOCK</span>\n  tableHint: TableHints.NOLOCK\n  <span class="hljs-comment">// \u8fd9\u5c06\u751f\u6210 SQL \'WITH (NOLOCK)\'</span>\n})</code></pre>\n'}}]);