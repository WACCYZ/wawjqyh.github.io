(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[46],{KMCp:function(s,a){s.exports='<h1 id="async-\u51fd\u6570">async \u51fd\u6570</h1>\n<h2 id="\u542b\u4e49">\u542b\u4e49</h2>\n<p>ES2017 \u6807\u51c6\u5f15\u5165\u4e86 async \u51fd\u6570\uff0c\u4f7f\u5f97\u5f02\u6b65\u64cd\u4f5c\u53d8\u5f97\u66f4\u52a0\u65b9\u4fbf\u3002</p>\n<p>async \u51fd\u6570\u662f\u4ec0\u4e48\uff1f\u4e00\u53e5\u8bdd\uff0c\u5b83\u5c31\u662f Generator \u51fd\u6570\u7684\u8bed\u6cd5\u7cd6\u3002</p>\n<p>\u524d\u6587\u6709\u4e00\u4e2a Generator \u51fd\u6570\uff0c\u4f9d\u6b21\u8bfb\u53d6\u4e24\u4e2a\u6587\u4ef6\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'fs\'</span>);\n\n<span class="hljs-keyword">const</span> readFile = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">fileName</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n    fs.readFile(fileName, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, data</span>) </span>{\n      <span class="hljs-keyword">if</span> (error) <span class="hljs-keyword">return</span> reject(error);\n      resolve(data);\n    });\n  });\n};\n\n<span class="hljs-keyword">const</span> gen = <span class="hljs-function"><span class="hljs-keyword">function</span>* (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">const</span> f1 = <span class="hljs-keyword">yield</span> readFile(<span class="hljs-string">\'/etc/fstab\'</span>);\n  <span class="hljs-keyword">const</span> f2 = <span class="hljs-keyword">yield</span> readFile(<span class="hljs-string">\'/etc/shells\'</span>);\n  <span class="hljs-built_in">console</span>.log(f1.toString());\n  <span class="hljs-built_in">console</span>.log(f2.toString());\n};</code></pre>\n<p>\u5199\u6210<code>async</code>\u51fd\u6570\uff0c\u5c31\u662f\u4e0b\u9762\u8fd9\u6837\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> asyncReadFile = <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">const</span> f1 = <span class="hljs-keyword">await</span> readFile(<span class="hljs-string">\'/etc/fstab\'</span>);\n  <span class="hljs-keyword">const</span> f2 = <span class="hljs-keyword">await</span> readFile(<span class="hljs-string">\'/etc/shells\'</span>);\n  <span class="hljs-built_in">console</span>.log(f1.toString());\n  <span class="hljs-built_in">console</span>.log(f2.toString());\n};</code></pre>\n<p>\u4e00\u6bd4\u8f83\u5c31\u4f1a\u53d1\u73b0\uff0c<code>async</code>\u51fd\u6570\u5c31\u662f\u5c06 Generator \u51fd\u6570\u7684\u661f\u53f7\uff08<code>*</code>\uff09\u66ff\u6362\u6210<code>async</code>\uff0c\u5c06<code>yield</code>\u66ff\u6362\u6210<code>await</code>\uff0c\u4ec5\u6b64\u800c\u5df2\u3002</p>\n<p><code>async</code>\u51fd\u6570\u5bf9 Generator \u51fd\u6570\u7684\u6539\u8fdb\uff0c\u4f53\u73b0\u5728\u4ee5\u4e0b\u56db\u70b9\u3002</p>\n<p>\uff081\uff09\u5185\u7f6e\u6267\u884c\u5668\u3002</p>\n<p>Generator \u51fd\u6570\u7684\u6267\u884c\u5fc5\u987b\u9760\u6267\u884c\u5668\uff0c\u6240\u4ee5\u624d\u6709\u4e86<code>co</code>\u6a21\u5757\uff0c\u800c<code>async</code>\u51fd\u6570\u81ea\u5e26\u6267\u884c\u5668\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>async</code>\u51fd\u6570\u7684\u6267\u884c\uff0c\u4e0e\u666e\u901a\u51fd\u6570\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u8981\u4e00\u884c\u3002</p>\n<pre><code class="language-javascript">asyncReadFile()<span class="hljs-comment">;</span></code></pre>\n<p>\u4e0a\u9762\u7684\u4ee3\u7801\u8c03\u7528\u4e86<code>asyncReadFile</code>\u51fd\u6570\uff0c\u7136\u540e\u5b83\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\uff0c\u8f93\u51fa\u6700\u540e\u7ed3\u679c\u3002\u8fd9\u5b8c\u5168\u4e0d\u50cf Generator \u51fd\u6570\uff0c\u9700\u8981\u8c03\u7528<code>next</code>\u65b9\u6cd5\uff0c\u6216\u8005\u7528<code>co</code>\u6a21\u5757\uff0c\u624d\u80fd\u771f\u6b63\u6267\u884c\uff0c\u5f97\u5230\u6700\u540e\u7ed3\u679c\u3002</p>\n<p>\uff082\uff09\u66f4\u597d\u7684\u8bed\u4e49\u3002</p>\n<p><code>async</code>\u548c<code>await</code>\uff0c\u6bd4\u8d77\u661f\u53f7\u548c<code>yield</code>\uff0c\u8bed\u4e49\u66f4\u6e05\u695a\u4e86\u3002<code>async</code>\u8868\u793a\u51fd\u6570\u91cc\u6709\u5f02\u6b65\u64cd\u4f5c\uff0c<code>await</code>\u8868\u793a\u7d27\u8ddf\u5728\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u7b49\u5f85\u7ed3\u679c\u3002</p>\n<p>\uff083\uff09\u66f4\u5e7f\u7684\u9002\u7528\u6027\u3002</p>\n<p><code>co</code>\u6a21\u5757\u7ea6\u5b9a\uff0c<code>yield</code>\u547d\u4ee4\u540e\u9762\u53ea\u80fd\u662f Thunk \u51fd\u6570\u6216 Promise \u5bf9\u8c61\uff0c\u800c<code>async</code>\u51fd\u6570\u7684<code>await</code>\u547d\u4ee4\u540e\u9762\uff0c\u53ef\u4ee5\u662f Promise \u5bf9\u8c61\u548c\u539f\u59cb\u7c7b\u578b\u7684\u503c\uff08\u6570\u503c\u3001\u5b57\u7b26\u4e32\u548c\u5e03\u5c14\u503c\uff0c\u4f46\u8fd9\u65f6\u7b49\u540c\u4e8e\u540c\u6b65\u64cd\u4f5c\uff09\u3002</p>\n<p>\uff084\uff09\u8fd4\u56de\u503c\u662f Promise\u3002</p>\n<p><code>async</code>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f Promise \u5bf9\u8c61\uff0c\u8fd9\u6bd4 Generator \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f Iterator \u5bf9\u8c61\u65b9\u4fbf\u591a\u4e86\u3002\u4f60\u53ef\u4ee5\u7528<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u4e0b\u4e00\u6b65\u7684\u64cd\u4f5c\u3002</p>\n<p>\u8fdb\u4e00\u6b65\u8bf4\uff0c<code>async</code>\u51fd\u6570\u5b8c\u5168\u53ef\u4ee5\u770b\u4f5c\u591a\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u5305\u88c5\u6210\u7684\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u800c<code>await</code>\u547d\u4ee4\u5c31\u662f\u5185\u90e8<code>then</code>\u547d\u4ee4\u7684\u8bed\u6cd5\u7cd6\u3002</p>\n<h2 id="\u57fa\u672c\u7528\u6cd5">\u57fa\u672c\u7528\u6cd5</h2>\n<p><code>async</code>\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528<code>then</code>\u65b9\u6cd5\u6dfb\u52a0\u56de\u8c03\u51fd\u6570\u3002\u5f53\u51fd\u6570\u6267\u884c\u7684\u65f6\u5019\uff0c\u4e00\u65e6\u9047\u5230<code>await</code>\u5c31\u4f1a\u5148\u8fd4\u56de\uff0c\u7b49\u5230\u5f02\u6b65\u64cd\u4f5c\u5b8c\u6210\uff0c\u518d\u63a5\u7740\u6267\u884c\u51fd\u6570\u4f53\u5185\u540e\u9762\u7684\u8bed\u53e5\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getStockPriceByName</span>(<span class="hljs-params">name</span>) </span>{\n  <span class="hljs-keyword">const</span> symbol = <span class="hljs-keyword">await</span> getStockSymbol(name);\n  <span class="hljs-keyword">const</span> stockPrice = <span class="hljs-keyword">await</span> getStockPrice(symbol);\n  <span class="hljs-keyword">return</span> stockPrice;\n}\n\ngetStockPriceByName(<span class="hljs-string">\'goog\'</span>).then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(result);\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u662f\u4e00\u4e2a\u83b7\u53d6\u80a1\u7968\u62a5\u4ef7\u7684\u51fd\u6570\uff0c\u51fd\u6570\u524d\u9762\u7684<code>async</code>\u5173\u952e\u5b57\uff0c\u8868\u660e\u8be5\u51fd\u6570\u5185\u90e8\u6709\u5f02\u6b65\u64cd\u4f5c\u3002\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u4f1a\u7acb\u5373\u8fd4\u56de\u4e00\u4e2a<code>Promise</code>\u5bf9\u8c61\u3002</p>\n<p>\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6307\u5b9a\u591a\u5c11\u6beb\u79d2\u540e\u8f93\u51fa\u4e00\u4e2a\u503c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeout</span>(<span class="hljs-params">ms</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n    setTimeout(resolve, ms);\n  });\n}\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">asyncPrint</span>(<span class="hljs-params">value, ms</span>) </span>{\n  <span class="hljs-keyword">await</span> timeout(ms);\n  <span class="hljs-built_in">console</span>.log(value);\n}\n\nasyncPrint(<span class="hljs-string">\'hello world\'</span>, <span class="hljs-number">50</span>);</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u6307\u5b9a 50 \u6beb\u79d2\u4ee5\u540e\uff0c\u8f93\u51fa<code>hello world</code>\u3002</p>\n<p>\u7531\u4e8e<code>async</code>\u51fd\u6570\u8fd4\u56de\u7684\u662f Promise \u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f5c\u4e3a<code>await</code>\u547d\u4ee4\u7684\u53c2\u6570\u3002\u6240\u4ee5\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u7684\u5f62\u5f0f\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeout</span>(<span class="hljs-params">ms</span>) </span>{\n  <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n    setTimeout(resolve, ms);\n  });\n}\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">asyncPrint</span>(<span class="hljs-params">value, ms</span>) </span>{\n  <span class="hljs-keyword">await</span> timeout(ms);\n  <span class="hljs-built_in">console</span>.log(value);\n}\n\nasyncPrint(<span class="hljs-string">\'hello world\'</span>, <span class="hljs-number">50</span>);</code></pre>\n<p>async \u51fd\u6570\u6709\u591a\u79cd\u4f7f\u7528\u5f62\u5f0f\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// \u51fd\u6570\u58f0\u660e</span>\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params"></span>) </span>{}\n\n<span class="hljs-comment">// \u51fd\u6570\u8868\u8fbe\u5f0f</span>\n<span class="hljs-keyword">const</span> foo = <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{};\n\n<span class="hljs-comment">// \u5bf9\u8c61\u7684\u65b9\u6cd5</span>\n<span class="hljs-keyword">let</span> obj = { <span class="hljs-keyword">async</span> foo() {} };\nobj.foo().then(...)\n\n<span class="hljs-comment">// Class \u7684\u65b9\u6cd5</span>\n<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Storage</span> </span>{\n  <span class="hljs-keyword">constructor</span>() {\n    <span class="hljs-keyword">this</span>.cachePromise = caches.open(<span class="hljs-string">\'avatars\'</span>);\n  }\n\n  <span class="hljs-keyword">async</span> getAvatar(name) {\n    <span class="hljs-keyword">const</span> cache = <span class="hljs-keyword">await</span> <span class="hljs-keyword">this</span>.cachePromise;\n    <span class="hljs-keyword">return</span> cache.match(<span class="hljs-string">`/avatars/<span class="hljs-subst">${name}</span>.jpg`</span>);\n  }\n}\n\n<span class="hljs-keyword">const</span> storage = <span class="hljs-keyword">new</span> Storage();\nstorage.getAvatar(<span class="hljs-string">\'jake\'</span>).then(\u2026);\n\n<span class="hljs-comment">// \u7bad\u5934\u51fd\u6570</span>\n<span class="hljs-keyword">const</span> foo = <span class="hljs-keyword">async</span> () =&gt; {};</code></pre>\n<h2 id="\u8bed\u6cd5">\u8bed\u6cd5</h2>\n<p><code>async</code>\u51fd\u6570\u7684\u8bed\u6cd5\u89c4\u5219\u603b\u4f53\u4e0a\u6bd4\u8f83\u7b80\u5355\uff0c\u96be\u70b9\u662f\u9519\u8bef\u5904\u7406\u673a\u5236\u3002</p>\n<h3 id="\u8fd4\u56de-promise-\u5bf9\u8c61">\u8fd4\u56de Promise \u5bf9\u8c61</h3>\n<p><code>async</code>\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\u3002</p>\n<p><code>async</code>\u51fd\u6570\u5185\u90e8<code>return</code>\u8bed\u53e5\u8fd4\u56de\u7684\u503c\uff0c\u4f1a\u6210\u4e3a<code>then</code>\u65b9\u6cd5\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-string">\'hello world\'</span>;\n}\n\nf().then(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(v))\n<span class="hljs-comment">// "hello world"</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u51fd\u6570<code>f</code>\u5185\u90e8<code>return</code>\u547d\u4ee4\u8fd4\u56de\u7684\u503c\uff0c\u4f1a\u88ab<code>then</code>\u65b9\u6cd5\u56de\u8c03\u51fd\u6570\u63a5\u6536\u5230\u3002</p>\n<p><code>async</code>\u51fd\u6570\u5185\u90e8\u629b\u51fa\u9519\u8bef\uff0c\u4f1a\u5bfc\u81f4\u8fd4\u56de\u7684 Promise \u5bf9\u8c61\u53d8\u4e3a<code>reject</code>\u72b6\u6001\u3002\u629b\u51fa\u7684\u9519\u8bef\u5bf9\u8c61\u4f1a\u88ab<code>catch</code>\u65b9\u6cd5\u56de\u8c03\u51fd\u6570\u63a5\u6536\u5230\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n}\n\nf().then(\n  <span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(v),\n  <span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(e)\n)\n<span class="hljs-comment">// Error: \u51fa\u9519\u4e86</span></code></pre>\n<h3 id="promise-\u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u5316">Promise \u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u5316</h3>\n<p><code>async</code>\u51fd\u6570\u8fd4\u56de\u7684 Promise \u5bf9\u8c61\uff0c\u5fc5\u987b\u7b49\u5230\u5185\u90e8\u6240\u6709<code>await</code>\u547d\u4ee4\u540e\u9762\u7684 Promise \u5bf9\u8c61\u6267\u884c\u5b8c\uff0c\u624d\u4f1a\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff0c\u9664\u975e\u9047\u5230<code>return</code>\u8bed\u53e5\u6216\u8005\u629b\u51fa\u9519\u8bef\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709<code>async</code>\u51fd\u6570\u5185\u90e8\u7684\u5f02\u6b65\u64cd\u4f5c\u6267\u884c\u5b8c\uff0c\u624d\u4f1a\u6267\u884c<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTitle</span>(<span class="hljs-params">url</span>) </span>{\n  <span class="hljs-keyword">let</span> response = <span class="hljs-keyword">await</span> fetch(<span class="hljs-built_in">url</span>);\n  <span class="hljs-keyword">let</span> html = <span class="hljs-keyword">await</span> response.text();\n  <span class="hljs-keyword">return</span> html.match(<span class="hljs-regexp">/&lt;title&gt;([\\s\\S]+)&lt;\\/title&gt;/i</span>)[<span class="hljs-number">1</span>];\n}\ngetTitle(<span class="hljs-string">\'https://tc39.github.io/ecma262/\'</span>).then(<span class="hljs-built_in">console</span>.log)\n<span class="hljs-comment">// "ECMAScript 2017 Language Specification"</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u51fd\u6570<code>getTitle</code>\u5185\u90e8\u6709\u4e09\u4e2a\u64cd\u4f5c\uff1a\u6293\u53d6\u7f51\u9875\u3001\u53d6\u51fa\u6587\u672c\u3001\u5339\u914d\u9875\u9762\u6807\u9898\u3002\u53ea\u6709\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u5168\u90e8\u5b8c\u6210\uff0c\u624d\u4f1a\u6267\u884c<code>then</code>\u65b9\u6cd5\u91cc\u9762\u7684<code>console.log</code>\u3002</p>\n<h3 id="await-\u547d\u4ee4">await \u547d\u4ee4</h3>\n<p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c<code>await</code>\u547d\u4ee4\u540e\u9762\u662f\u4e00\u4e2a Promise \u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u662f\uff0c\u4f1a\u88ab\u8f6c\u6210\u4e00\u4e2a\u7acb\u5373<code>resolve</code>\u7684 Promise \u5bf9\u8c61\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-number">123</span>;\n}\n\nf().then(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(v))\n<span class="hljs-comment">// 123</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>await</code>\u547d\u4ee4\u7684\u53c2\u6570\u662f\u6570\u503c<code>123</code>\uff0c\u5b83\u88ab\u8f6c\u6210 Promise \u5bf9\u8c61\uff0c\u5e76\u7acb\u5373<code>resolve</code>\u3002</p>\n<p><code>await</code>\u547d\u4ee4\u540e\u9762\u7684 Promise \u5bf9\u8c61\u5982\u679c\u53d8\u4e3a<code>reject</code>\u72b6\u6001\uff0c\u5219<code>reject</code>\u7684\u53c2\u6570\u4f1a\u88ab<code>catch</code>\u65b9\u6cd5\u7684\u56de\u8c03\u51fd\u6570\u63a5\u6536\u5230\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.reject(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n}\n\nf()\n.then(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(v))\n.catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(e))\n<span class="hljs-comment">// \u51fa\u9519\u4e86</span></code></pre>\n<p>\u6ce8\u610f\uff0c\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>await</code>\u8bed\u53e5\u524d\u9762\u6ca1\u6709<code>return</code>\uff0c\u4f46\u662f<code>reject</code>\u65b9\u6cd5\u7684\u53c2\u6570\u4f9d\u7136\u4f20\u5165\u4e86<code>catch</code>\u65b9\u6cd5\u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u91cc\u5982\u679c\u5728<code>await</code>\u524d\u9762\u52a0\u4e0a<code>return</code>\uff0c\u6548\u679c\u662f\u4e00\u6837\u7684\u3002</p>\n<p>\u53ea\u8981\u4e00\u4e2a<code>await</code>\u8bed\u53e5\u540e\u9762\u7684 Promise \u53d8\u4e3a<code>reject</code>\uff0c\u90a3\u4e48\u6574\u4e2a<code>async</code>\u51fd\u6570\u90fd\u4f1a\u4e2d\u65ad\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.reject(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n  <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.resolve(<span class="hljs-string">\'hello world\'</span>); <span class="hljs-comment">// \u4e0d\u4f1a\u6267\u884c</span>\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u7b2c\u4e8c\u4e2a<code>await</code>\u8bed\u53e5\u662f\u4e0d\u4f1a\u6267\u884c\u7684\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a<code>await</code>\u8bed\u53e5\u72b6\u6001\u53d8\u6210\u4e86<code>reject</code>\u3002</p>\n<p>\u6709\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u5373\u4f7f\u524d\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\u5931\u8d25\uff0c\u4e5f\u4e0d\u8981\u4e2d\u65ad\u540e\u9762\u7684\u5f02\u6b65\u64cd\u4f5c\u3002\u8fd9\u65f6\u53ef\u4ee5\u5c06\u7b2c\u4e00\u4e2a<code>await</code>\u653e\u5728<code>try...catch</code>\u7ed3\u6784\u91cc\u9762\uff0c\u8fd9\u6837\u4e0d\u7ba1\u8fd9\u4e2a\u5f02\u6b65\u64cd\u4f5c\u662f\u5426\u6210\u529f\uff0c\u7b2c\u4e8c\u4e2a<code>await</code>\u90fd\u4f1a\u6267\u884c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.reject(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n  } <span class="hljs-keyword">catch</span>(e) {\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.resolve(<span class="hljs-string">\'hello world\'</span>);\n}\n\nf()\n.then(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(v))\n<span class="hljs-comment">// hello world</span></code></pre>\n<p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f<code>await</code>\u540e\u9762\u7684 Promise \u5bf9\u8c61\u518d\u8ddf\u4e00\u4e2a<code>catch</code>\u65b9\u6cd5\uff0c\u5904\u7406\u524d\u9762\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.reject(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>)\n    .catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(e));\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.resolve(<span class="hljs-string">\'hello world\'</span>);\n}\n\nf()\n.then(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(v))\n<span class="hljs-comment">// \u51fa\u9519\u4e86</span>\n<span class="hljs-comment">// hello world</span></code></pre>\n<h3 id="\u9519\u8bef\u5904\u7406">\u9519\u8bef\u5904\u7406</h3>\n<p>\u5982\u679c<code>await</code>\u540e\u9762\u7684\u5f02\u6b65\u64cd\u4f5c\u51fa\u9519\uff0c\u90a3\u4e48\u7b49\u540c\u4e8e<code>async</code>\u51fd\u6570\u8fd4\u56de\u7684 Promise \u5bf9\u8c61\u88ab<code>reject</code>\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n  });\n}\n\nf()\n.then(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(v))\n.catch(<span class="hljs-function"><span class="hljs-params">e</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(e))\n<span class="hljs-comment">// Error\uff1a\u51fa\u9519\u4e86</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>async</code>\u51fd\u6570<code>f</code>\u6267\u884c\u540e\uff0c<code>await</code>\u540e\u9762\u7684 Promise \u5bf9\u8c61\u4f1a\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u5bf9\u8c61\uff0c\u5bfc\u81f4<code>catch</code>\u65b9\u6cd5\u7684\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u5b83\u7684\u53c2\u6570\u5c31\u662f\u629b\u51fa\u7684\u9519\u8bef\u5bf9\u8c61\u3002\u5177\u4f53\u7684\u6267\u884c\u673a\u5236\uff0c\u53ef\u4ee5\u53c2\u8003\u540e\u6587\u7684\u201casync \u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u201d\u3002</p>\n<p>\u9632\u6b62\u51fa\u9519\u7684\u65b9\u6cd5\uff0c\u4e5f\u662f\u5c06\u5176\u653e\u5728<code>try...catch</code>\u4ee3\u7801\u5757\u4e4b\u4e2d\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>{\n      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'\u51fa\u9519\u4e86\'</span>);\n    });\n  } <span class="hljs-keyword">catch</span>(e) {\n  }\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span>(<span class="hljs-string">\'hello world\'</span>);\n}</code></pre>\n<p>\u5982\u679c\u6709\u591a\u4e2a<code>await</code>\u547d\u4ee4\uff0c\u53ef\u4ee5\u7edf\u4e00\u653e\u5728<code>try...catch</code>\u7ed3\u6784\u4e2d\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">const</span> val1 = <span class="hljs-keyword">await</span> firstStep();\n    <span class="hljs-keyword">const</span> val2 = <span class="hljs-keyword">await</span> secondStep(val1);\n    <span class="hljs-keyword">const</span> val3 = <span class="hljs-keyword">await</span> thirdStep(val1, val2);\n\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Final: \'</span>, val3);\n  }\n  <span class="hljs-keyword">catch</span> (err) {\n    <span class="hljs-built_in">console</span>.error(err);\n  }\n}</code></pre>\n<p>\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528<code>try...catch</code>\u7ed3\u6784\uff0c\u5b9e\u73b0\u591a\u6b21\u91cd\u590d\u5c1d\u8bd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> superagent = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'superagent\'</span>);\n<span class="hljs-keyword">const</span> NUM_RETRIES = <span class="hljs-number">3</span>;\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">let</span> i;\n  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; NUM_RETRIES; ++i) {\n    <span class="hljs-keyword">try</span> {\n      <span class="hljs-keyword">await</span> superagent.get(<span class="hljs-string">\'http://google.com/this-throws-an-error\'</span>);\n      <span class="hljs-keyword">break</span>;\n    } <span class="hljs-keyword">catch</span>(err) {}\n  }\n  <span class="hljs-built_in">console</span>.log(i); <span class="hljs-comment">// 3</span>\n}\n\ntest();</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5982\u679c<code>await</code>\u64cd\u4f5c\u6210\u529f\uff0c\u5c31\u4f1a\u4f7f\u7528<code>break</code>\u8bed\u53e5\u9000\u51fa\u5faa\u73af\uff1b\u5982\u679c\u5931\u8d25\uff0c\u4f1a\u88ab<code>catch</code>\u8bed\u53e5\u6355\u6349\uff0c\u7136\u540e\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002</p>\n<h3 id="\u4f7f\u7528\u6ce8\u610f\u70b9">\u4f7f\u7528\u6ce8\u610f\u70b9</h3>\n<p>\u7b2c\u4e00\u70b9\uff0c\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\uff0c<code>await</code>\u547d\u4ee4\u540e\u9762\u7684<code>Promise</code>\u5bf9\u8c61\uff0c\u8fd0\u884c\u7ed3\u679c\u53ef\u80fd\u662f<code>rejected</code>\uff0c\u6240\u4ee5\u6700\u597d\u628a<code>await</code>\u547d\u4ee4\u653e\u5728<code>try...catch</code>\u4ee3\u7801\u5757\u4e2d\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myFunction</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">await</span> somethingThatReturnsAPromise();\n  } <span class="hljs-keyword">catch</span> (err) {\n    <span class="hljs-built_in">console</span>.log(err);\n  }\n}\n\n<span class="hljs-comment">// \u53e6\u4e00\u79cd\u5199\u6cd5</span>\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myFunction</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">await</span> somethingThatReturnsAPromise()\n  .catch(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>{\n    <span class="hljs-built_in">console</span>.log(err);\n  });\n}</code></pre>\n<p>\u7b2c\u4e8c\u70b9\uff0c\u591a\u4e2a<code>await</code>\u547d\u4ee4\u540e\u9762\u7684\u5f02\u6b65\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u7ee7\u53d1\u5173\u7cfb\uff0c\u6700\u597d\u8ba9\u5b83\u4eec\u540c\u65f6\u89e6\u53d1\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">let</span> foo = <span class="hljs-keyword">await</span> getFoo();\n<span class="hljs-keyword">let</span> bar = <span class="hljs-keyword">await</span> getBar();</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>getFoo</code>\u548c<code>getBar</code>\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u5f02\u6b65\u64cd\u4f5c\uff08\u5373\u4e92\u4e0d\u4f9d\u8d56\uff09\uff0c\u88ab\u5199\u6210\u7ee7\u53d1\u5173\u7cfb\u3002\u8fd9\u6837\u6bd4\u8f83\u8017\u65f6\uff0c\u56e0\u4e3a\u53ea\u6709<code>getFoo</code>\u5b8c\u6210\u4ee5\u540e\uff0c\u624d\u4f1a\u6267\u884c<code>getBar</code>\uff0c\u5b8c\u5168\u53ef\u4ee5\u8ba9\u5b83\u4eec\u540c\u65f6\u89e6\u53d1\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// \u5199\u6cd5\u4e00</span>\n<span class="hljs-keyword">let</span> [foo, bar] = <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.all([getFoo(), getBar()]);\n\n<span class="hljs-comment">// \u5199\u6cd5\u4e8c</span>\n<span class="hljs-keyword">let</span> fooPromise = getFoo();\n<span class="hljs-keyword">let</span> barPromise = getBar();\n<span class="hljs-keyword">let</span> foo = <span class="hljs-keyword">await</span> fooPromise;\n<span class="hljs-keyword">let</span> bar = <span class="hljs-keyword">await</span> barPromise;</code></pre>\n<p>\u4e0a\u9762\u4e24\u79cd\u5199\u6cd5\uff0c<code>getFoo</code>\u548c<code>getBar</code>\u90fd\u662f\u540c\u65f6\u89e6\u53d1\uff0c\u8fd9\u6837\u5c31\u4f1a\u7f29\u77ed\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u3002</p>\n<p>\u7b2c\u4e09\u70b9\uff0c<code>await</code>\u547d\u4ee4\u53ea\u80fd\u7528\u5728<code>async</code>\u51fd\u6570\u4e4b\u4e2d\uff0c\u5982\u679c\u7528\u5728\u666e\u901a\u51fd\u6570\uff0c\u5c31\u4f1a\u62a5\u9519\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dbFuc</span>(<span class="hljs-params">db</span>) </span>{\n  <span class="hljs-keyword">let</span> docs = [{}, {}, {}];\n\n  <span class="hljs-comment">// \u62a5\u9519</span>\n  docs.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">doc</span>) </span>{\n    <span class="hljs-keyword">await</span> db.post(doc);\n  });\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a<code>await</code>\u7528\u5728\u666e\u901a\u51fd\u6570\u4e4b\u4e2d\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u5c06<code>forEach</code>\u65b9\u6cd5\u7684\u53c2\u6570\u6539\u6210<code>async</code>\u51fd\u6570\uff0c\u4e5f\u6709\u95ee\u9898\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dbFuc</span>(<span class="hljs-params">db</span>) </span>{ <span class="hljs-comment">//\u8fd9\u91cc\u4e0d\u9700\u8981 async</span>\n  <span class="hljs-keyword">let</span> docs = [{}, {}, {}];\n\n  <span class="hljs-comment">// \u53ef\u80fd\u5f97\u5230\u9519\u8bef\u7ed3\u679c</span>\n  docs.forEach(<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">doc</span>) </span>{\n    <span class="hljs-keyword">await</span> db.post(doc);\n  });\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u53ef\u80fd\u4e0d\u4f1a\u6b63\u5e38\u5de5\u4f5c\uff0c\u539f\u56e0\u662f\u8fd9\u65f6\u4e09\u4e2a<code>db.post</code>\u64cd\u4f5c\u5c06\u662f\u5e76\u53d1\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u540c\u65f6\u6267\u884c\uff0c\u800c\u4e0d\u662f\u7ee7\u53d1\u6267\u884c\u3002\u6b63\u786e\u7684\u5199\u6cd5\u662f\u91c7\u7528<code>for</code>\u5faa\u73af\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dbFuc</span>(<span class="hljs-params">db</span>) </span>{\n  <span class="hljs-keyword">let</span> docs = [{}, {}, {}];\n\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> doc <span class="hljs-keyword">of</span> docs) {\n    <span class="hljs-keyword">await</span> db.post(doc);\n  }\n}</code></pre>\n<p>\u5982\u679c\u786e\u5b9e\u5e0c\u671b\u591a\u4e2a\u8bf7\u6c42\u5e76\u53d1\u6267\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>Promise.all</code>\u65b9\u6cd5\u3002\u5f53\u4e09\u4e2a\u8bf7\u6c42\u90fd\u4f1a<code>resolved</code>\u65f6\uff0c\u4e0b\u9762\u4e24\u79cd\u5199\u6cd5\u6548\u679c\u76f8\u540c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dbFuc</span>(<span class="hljs-params">db</span>) </span>{\n  <span class="hljs-keyword">let</span> docs = [{}, {}, {}];\n  <span class="hljs-keyword">let</span> promises = docs.map(<span class="hljs-function">(<span class="hljs-params">doc</span>) =&gt;</span> db.post(doc));\n\n  <span class="hljs-keyword">let</span> results = <span class="hljs-keyword">await</span> <span class="hljs-built_in">Promise</span>.all(promises);\n  <span class="hljs-built_in">console</span>.log(results);\n}\n\n<span class="hljs-comment">// \u6216\u8005\u4f7f\u7528\u4e0b\u9762\u7684\u5199\u6cd5</span>\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dbFuc</span>(<span class="hljs-params">db</span>) </span>{\n  <span class="hljs-keyword">let</span> docs = [{}, {}, {}];\n  <span class="hljs-keyword">let</span> promises = docs.map(<span class="hljs-function">(<span class="hljs-params">doc</span>) =&gt;</span> db.post(doc));\n\n  <span class="hljs-keyword">let</span> results = [];\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> promise <span class="hljs-keyword">of</span> promises) {\n    results.push(<span class="hljs-keyword">await</span> promise);\n  }\n  <span class="hljs-built_in">console</span>.log(results);\n}</code></pre>\n<p>\u76ee\u524d\uff0c<a href="https://www.npmjs.com/package/@std/esm"><code>@std/esm</code></a>\u6a21\u5757\u52a0\u8f7d\u5668\u652f\u6301\u9876\u5c42<code>await</code>\uff0c\u5373<code>await</code>\u547d\u4ee4\u53ef\u4ee5\u4e0d\u653e\u5728 async \u51fd\u6570\u91cc\u9762\uff0c\u76f4\u63a5\u4f7f\u7528\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// async \u51fd\u6570\u7684\u5199\u6cd5</span>\n<span class="hljs-keyword">const</span> start = <span class="hljs-keyword">async</span> () =&gt; {\n  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> fetch(<span class="hljs-string">\'google.com\'</span>);\n  <span class="hljs-keyword">return</span> res.text();\n};\n\nstart().then(<span class="hljs-built_in">console</span>.log);\n\n<span class="hljs-comment">// \u9876\u5c42 await \u7684\u5199\u6cd5</span>\n<span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> fetch(<span class="hljs-string">\'google.com\'</span>);\n<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">await</span> res.text());</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u7b2c\u4e8c\u79cd\u5199\u6cd5\u7684\u811a\u672c\u5fc5\u987b\u4f7f\u7528<code>@std/esm</code>\u52a0\u8f7d\u5668\uff0c\u624d\u4f1a\u751f\u6548\u3002</p>\n<h2 id="async-\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406">async \u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406</h2>\n<p>async \u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u5c31\u662f\u5c06 Generator \u51fd\u6570\u548c\u81ea\u52a8\u6267\u884c\u5668\uff0c\u5305\u88c5\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">args</span>) </span>{\n  <span class="hljs-comment">// ...</span>\n}\n\n<span class="hljs-comment">// \u7b49\u540c\u4e8e</span>\n\n<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params">args</span>) </span>{\n  <span class="hljs-keyword">return</span> spawn(<span class="hljs-function"><span class="hljs-keyword">function</span>* (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-comment">// ...</span>\n  });\n}</code></pre>\n<p>\u6240\u6709\u7684<code>async</code>\u51fd\u6570\u90fd\u53ef\u4ee5\u5199\u6210\u4e0a\u9762\u7684\u7b2c\u4e8c\u79cd\u5f62\u5f0f\uff0c\u5176\u4e2d\u7684<code>spawn</code>\u51fd\u6570\u5c31\u662f\u81ea\u52a8\u6267\u884c\u5668\u3002</p>\n<p>\u4e0b\u9762\u7ed9\u51fa<code>spawn</code>\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u57fa\u672c\u5c31\u662f\u524d\u6587\u81ea\u52a8\u6267\u884c\u5668\u7684\u7ffb\u7248\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">spawn</span>(<span class="hljs-params">genF</span>) </span>{\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resolve, reject</span>) </span>{\n    <span class="hljs-keyword">const</span> gen = genF();\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">step</span>(<span class="hljs-params">nextF</span>) </span>{\n      <span class="hljs-keyword">let</span> next;\n      <span class="hljs-keyword">try</span> {\n        next = nextF();\n      } <span class="hljs-keyword">catch</span>(e) {\n        <span class="hljs-keyword">return</span> reject(e);\n      }\n      <span class="hljs-keyword">if</span>(next.done) {\n        <span class="hljs-keyword">return</span> resolve(next.value);\n      }\n      <span class="hljs-built_in">Promise</span>.resolve(next.value).then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">v</span>) </span>{\n        step(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> gen.next(v); });\n      }, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>{\n        step(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> gen.throw(e); });\n      });\n    }\n    step(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> gen.next(<span class="hljs-literal">undefined</span>); });\n  });\n}</code></pre>\n<h2 id="\u4e0e\u5176\u4ed6\u5f02\u6b65\u5904\u7406\u65b9\u6cd5\u7684\u6bd4\u8f83">\u4e0e\u5176\u4ed6\u5f02\u6b65\u5904\u7406\u65b9\u6cd5\u7684\u6bd4\u8f83</h2>\n<p>\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6765\u770b async \u51fd\u6570\u4e0e Promise\u3001Generator \u51fd\u6570\u7684\u6bd4\u8f83\u3002</p>\n<p>\u5047\u5b9a\u67d0\u4e2a DOM \u5143\u7d20\u4e0a\u9762\uff0c\u90e8\u7f72\u4e86\u4e00\u7cfb\u5217\u7684\u52a8\u753b\uff0c\u524d\u4e00\u4e2a\u52a8\u753b\u7ed3\u675f\uff0c\u624d\u80fd\u5f00\u59cb\u540e\u4e00\u4e2a\u3002\u5982\u679c\u5f53\u4e2d\u6709\u4e00\u4e2a\u52a8\u753b\u51fa\u9519\uff0c\u5c31\u4e0d\u518d\u5f80\u4e0b\u6267\u884c\uff0c\u8fd4\u56de\u4e0a\u4e00\u4e2a\u6210\u529f\u6267\u884c\u7684\u52a8\u753b\u7684\u8fd4\u56de\u503c\u3002</p>\n<p>\u9996\u5148\u662f Promise \u7684\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chainAnimationsPromise</span>(<span class="hljs-params">elem, animations</span>) </span>{\n\n  <span class="hljs-comment">// \u53d8\u91cfret\u7528\u6765\u4fdd\u5b58\u4e0a\u4e00\u4e2a\u52a8\u753b\u7684\u8fd4\u56de\u503c</span>\n  <span class="hljs-keyword">let</span> ret = <span class="hljs-literal">null</span>;\n\n  <span class="hljs-comment">// \u65b0\u5efa\u4e00\u4e2a\u7a7a\u7684Promise</span>\n  <span class="hljs-keyword">let</span> p = <span class="hljs-built_in">Promise</span>.resolve();\n\n  <span class="hljs-comment">// \u4f7f\u7528then\u65b9\u6cd5\uff0c\u6dfb\u52a0\u6240\u6709\u52a8\u753b</span>\n  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> anim <span class="hljs-keyword">of</span> animations) {\n    p = p.then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">val</span>) </span>{\n      ret = val;\n      <span class="hljs-keyword">return</span> anim(elem);\n    });\n  }\n\n  <span class="hljs-comment">// \u8fd4\u56de\u4e00\u4e2a\u90e8\u7f72\u4e86\u9519\u8bef\u6355\u6349\u673a\u5236\u7684Promise</span>\n  <span class="hljs-keyword">return</span> p.catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>{\n    <span class="hljs-comment">/* \u5ffd\u7565\u9519\u8bef\uff0c\u7ee7\u7eed\u6267\u884c */</span>\n  }).then(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">return</span> ret;\n  });\n\n}</code></pre>\n<p>\u867d\u7136 Promise \u7684\u5199\u6cd5\u6bd4\u56de\u8c03\u51fd\u6570\u7684\u5199\u6cd5\u5927\u5927\u6539\u8fdb\uff0c\u4f46\u662f\u4e00\u773c\u770b\u4e0a\u53bb\uff0c\u4ee3\u7801\u5b8c\u5168\u90fd\u662f Promise \u7684 API\uff08<code>then</code>\u3001<code>catch</code>\u7b49\u7b49\uff09\uff0c\u64cd\u4f5c\u672c\u8eab\u7684\u8bed\u4e49\u53cd\u800c\u4e0d\u5bb9\u6613\u770b\u51fa\u6765\u3002</p>\n<p>\u63a5\u7740\u662f Generator \u51fd\u6570\u7684\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chainAnimationsGenerator</span>(<span class="hljs-params">elem, animations</span>) </span>{\n\n  <span class="hljs-keyword">return</span> spawn(<span class="hljs-function"><span class="hljs-keyword">function</span>*(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">let</span> ret = <span class="hljs-literal">null</span>;\n    <span class="hljs-keyword">try</span> {\n      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> anim <span class="hljs-keyword">of</span> animations) {\n        ret = <span class="hljs-keyword">yield</span> anim(elem);\n      }\n    } <span class="hljs-keyword">catch</span>(e) {\n      <span class="hljs-comment">/* \u5ffd\u7565\u9519\u8bef\uff0c\u7ee7\u7eed\u6267\u884c */</span>\n    }\n    <span class="hljs-keyword">return</span> ret;\n  });\n\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4f7f\u7528 Generator \u51fd\u6570\u904d\u5386\u4e86\u6bcf\u4e2a\u52a8\u753b\uff0c\u8bed\u4e49\u6bd4 Promise \u5199\u6cd5\u66f4\u6e05\u6670\uff0c\u7528\u6237\u5b9a\u4e49\u7684\u64cd\u4f5c\u5168\u90e8\u90fd\u51fa\u73b0\u5728<code>spawn</code>\u51fd\u6570\u7684\u5185\u90e8\u3002\u8fd9\u4e2a\u5199\u6cd5\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u4efb\u52a1\u8fd0\u884c\u5668\uff0c\u81ea\u52a8\u6267\u884c Generator \u51fd\u6570\uff0c\u4e0a\u9762\u4ee3\u7801\u7684<code>spawn</code>\u51fd\u6570\u5c31\u662f\u81ea\u52a8\u6267\u884c\u5668\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u800c\u4e14\u5fc5\u987b\u4fdd\u8bc1<code>yield</code>\u8bed\u53e5\u540e\u9762\u7684\u8868\u8fbe\u5f0f\uff0c\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a Promise\u3002</p>\n<p>\u6700\u540e\u662f async \u51fd\u6570\u7684\u5199\u6cd5\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">chainAnimationsAsync</span>(<span class="hljs-params">elem, animations</span>) </span>{\n  <span class="hljs-keyword">let</span> ret = <span class="hljs-literal">null</span>;\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> anim <span class="hljs-keyword">of</span> animations) {\n      ret = <span class="hljs-keyword">await</span> anim(elem);\n    }\n  } <span class="hljs-keyword">catch</span>(e) {\n    <span class="hljs-comment">/* \u5ffd\u7565\u9519\u8bef\uff0c\u7ee7\u7eed\u6267\u884c */</span>\n  }\n  <span class="hljs-keyword">return</span> ret;\n}</code></pre>\n<p>\u53ef\u4ee5\u770b\u5230 Async \u51fd\u6570\u7684\u5b9e\u73b0\u6700\u7b80\u6d01\uff0c\u6700\u7b26\u5408\u8bed\u4e49\uff0c\u51e0\u4e4e\u6ca1\u6709\u8bed\u4e49\u4e0d\u76f8\u5173\u7684\u4ee3\u7801\u3002\u5b83\u5c06 Generator \u5199\u6cd5\u4e2d\u7684\u81ea\u52a8\u6267\u884c\u5668\uff0c\u6539\u5728\u8bed\u8a00\u5c42\u9762\u63d0\u4f9b\uff0c\u4e0d\u66b4\u9732\u7ed9\u7528\u6237\uff0c\u56e0\u6b64\u4ee3\u7801\u91cf\u6700\u5c11\u3002\u5982\u679c\u4f7f\u7528 Generator \u5199\u6cd5\uff0c\u81ea\u52a8\u6267\u884c\u5668\u9700\u8981\u7528\u6237\u81ea\u5df1\u63d0\u4f9b\u3002</p>\n<h2 id="\u5b9e\u4f8b\uff1a\u6309\u987a\u5e8f\u5b8c\u6210\u5f02\u6b65\u64cd\u4f5c">\u5b9e\u4f8b\uff1a\u6309\u987a\u5e8f\u5b8c\u6210\u5f02\u6b65\u64cd\u4f5c</h2>\n<p>\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u7ecf\u5e38\u9047\u5230\u4e00\u7ec4\u5f02\u6b65\u64cd\u4f5c\uff0c\u9700\u8981\u6309\u7167\u987a\u5e8f\u5b8c\u6210\u3002\u6bd4\u5982\uff0c\u4f9d\u6b21\u8fdc\u7a0b\u8bfb\u53d6\u4e00\u7ec4 URL\uff0c\u7136\u540e\u6309\u7167\u8bfb\u53d6\u7684\u987a\u5e8f\u8f93\u51fa\u7ed3\u679c\u3002</p>\n<p>Promise \u7684\u5199\u6cd5\u5982\u4e0b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logInOrder</span>(<span class="hljs-params">urls</span>) </span>{\n  <span class="hljs-comment">// \u8fdc\u7a0b\u8bfb\u53d6\u6240\u6709URL</span>\n  <span class="hljs-keyword">const</span> textPromises = urls.map(<span class="hljs-function"><span class="hljs-params">url</span> =&gt;</span> {\n    <span class="hljs-keyword">return</span> fetch(url).then(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> response.text());\n  });\n\n  <span class="hljs-comment">// \u6309\u6b21\u5e8f\u8f93\u51fa</span>\n  textPromises.reduce(<span class="hljs-function">(<span class="hljs-params">chain, textPromise</span>) =&gt;</span> {\n    <span class="hljs-keyword">return</span> chain.then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> textPromise)\n      .then(<span class="hljs-function"><span class="hljs-params">text</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(text));\n  }, <span class="hljs-built_in">Promise</span>.resolve());\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4f7f\u7528<code>fetch</code>\u65b9\u6cd5\uff0c\u540c\u65f6\u8fdc\u7a0b\u8bfb\u53d6\u4e00\u7ec4 URL\u3002\u6bcf\u4e2a<code>fetch</code>\u64cd\u4f5c\u90fd\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u653e\u5165<code>textPromises</code>\u6570\u7ec4\u3002\u7136\u540e\uff0c<code>reduce</code>\u65b9\u6cd5\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a Promise \u5bf9\u8c61\uff0c\u7136\u540e\u4f7f\u7528<code>then</code>\uff0c\u5c06\u6240\u6709 Promise \u5bf9\u8c61\u8fde\u8d77\u6765\uff0c\u56e0\u6b64\u5c31\u53ef\u4ee5\u4f9d\u6b21\u8f93\u51fa\u7ed3\u679c\u3002</p>\n<p>\u8fd9\u79cd\u5199\u6cd5\u4e0d\u592a\u76f4\u89c2\uff0c\u53ef\u8bfb\u6027\u6bd4\u8f83\u5dee\u3002\u4e0b\u9762\u662f async \u51fd\u6570\u5b9e\u73b0\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logInOrder</span>(<span class="hljs-params">urls</span>) </span>{\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> <span class="hljs-built_in">url</span> <span class="hljs-keyword">of</span> urls) {\n    <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> fetch(<span class="hljs-built_in">url</span>);\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">await</span> response.text());\n  }\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u786e\u5b9e\u5927\u5927\u7b80\u5316\uff0c\u95ee\u9898\u662f\u6240\u6709\u8fdc\u7a0b\u64cd\u4f5c\u90fd\u662f\u7ee7\u53d1\u3002\u53ea\u6709\u524d\u4e00\u4e2a URL \u8fd4\u56de\u7ed3\u679c\uff0c\u624d\u4f1a\u53bb\u8bfb\u53d6\u4e0b\u4e00\u4e2a URL\uff0c\u8fd9\u6837\u505a\u6548\u7387\u5f88\u5dee\uff0c\u975e\u5e38\u6d6a\u8d39\u65f6\u95f4\u3002\u6211\u4eec\u9700\u8981\u7684\u662f\u5e76\u53d1\u53d1\u51fa\u8fdc\u7a0b\u8bf7\u6c42\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logInOrder</span>(<span class="hljs-params">urls</span>) </span>{\n  <span class="hljs-comment">// \u5e76\u53d1\u8bfb\u53d6\u8fdc\u7a0bURL</span>\n  <span class="hljs-keyword">const</span> textPromises = urls.map(<span class="hljs-keyword">async</span> <span class="hljs-built_in">url</span> =&gt; {\n    <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> fetch(<span class="hljs-built_in">url</span>);\n    <span class="hljs-keyword">return</span> response.text();\n  });\n\n  <span class="hljs-comment">// \u6309\u6b21\u5e8f\u8f93\u51fa</span>\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> textPromise <span class="hljs-keyword">of</span> textPromises) {\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">await</span> textPromise);\n  }\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u867d\u7136<code>map</code>\u65b9\u6cd5\u7684\u53c2\u6570\u662f<code>async</code>\u51fd\u6570\uff0c\u4f46\u5b83\u662f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u56e0\u4e3a\u53ea\u6709<code>async</code>\u51fd\u6570\u5185\u90e8\u662f\u7ee7\u53d1\u6267\u884c\uff0c\u5916\u90e8\u4e0d\u53d7\u5f71\u54cd\u3002\u540e\u9762\u7684<code>for..of</code>\u5faa\u73af\u5185\u90e8\u4f7f\u7528\u4e86<code>await</code>\uff0c\u56e0\u6b64\u5b9e\u73b0\u4e86\u6309\u987a\u5e8f\u8f93\u51fa\u3002</p>\n<h2 id="\u5f02\u6b65\u904d\u5386\u5668">\u5f02\u6b65\u904d\u5386\u5668</h2>\n<p>\u300a\u904d\u5386\u5668\u300b\u4e00\u7ae0\u8bf4\u8fc7\uff0cIterator \u63a5\u53e3\u662f\u4e00\u79cd\u6570\u636e\u904d\u5386\u7684\u534f\u8bae\uff0c\u53ea\u8981\u8c03\u7528\u904d\u5386\u5668\u5bf9\u8c61\u7684<code>next</code>\u65b9\u6cd5\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8868\u793a\u5f53\u524d\u904d\u5386\u6307\u9488\u6240\u5728\u7684\u90a3\u4e2a\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002<code>next</code>\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u7684\u7ed3\u6784\u662f<code>{value, done}</code>\uff0c\u5176\u4e2d<code>value</code>\u8868\u793a\u5f53\u524d\u7684\u6570\u636e\u7684\u503c\uff0c<code>done</code>\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8868\u793a\u904d\u5386\u662f\u5426\u7ed3\u675f\u3002</p>\n<p>\u8fd9\u91cc\u9690\u542b\u7740\u4e00\u4e2a\u89c4\u5b9a\uff0c<code>next</code>\u65b9\u6cd5\u5fc5\u987b\u662f\u540c\u6b65\u7684\uff0c\u53ea\u8981\u8c03\u7528\u5c31\u5fc5\u987b\u7acb\u523b\u8fd4\u56de\u503c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u6267\u884c<code>next</code>\u65b9\u6cd5\uff0c\u5c31\u5fc5\u987b\u540c\u6b65\u5730\u5f97\u5230<code>value</code>\u548c<code>done</code>\u8fd9\u4e24\u4e2a\u5c5e\u6027\u3002\u5982\u679c\u904d\u5386\u6307\u9488\u6b63\u597d\u6307\u5411\u540c\u6b65\u64cd\u4f5c\uff0c\u5f53\u7136\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u5f02\u6b65\u64cd\u4f5c\uff0c\u5c31\u4e0d\u592a\u5408\u9002\u4e86\u3002\u76ee\u524d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff0cGenerator \u51fd\u6570\u91cc\u9762\u7684\u5f02\u6b65\u64cd\u4f5c\uff0c\u8fd4\u56de\u4e00\u4e2a Thunk \u51fd\u6570\u6216\u8005 Promise \u5bf9\u8c61\uff0c\u5373<code>value</code>\u5c5e\u6027\u662f\u4e00\u4e2a Thunk \u51fd\u6570\u6216\u8005 Promise \u5bf9\u8c61\uff0c\u7b49\u5f85\u4ee5\u540e\u8fd4\u56de\u771f\u6b63\u7684\u503c\uff0c\u800c<code>done</code>\u5c5e\u6027\u5219\u8fd8\u662f\u540c\u6b65\u4ea7\u751f\u7684\u3002</p>\n<p>\u76ee\u524d\uff0c\u6709\u4e00\u4e2a<a href="https://github.com/tc39/proposal-async-iteration">\u63d0\u6848</a>\uff0c\u4e3a\u5f02\u6b65\u64cd\u4f5c\u63d0\u4f9b\u539f\u751f\u7684\u904d\u5386\u5668\u63a5\u53e3\uff0c\u5373<code>value</code>\u548c<code>done</code>\u8fd9\u4e24\u4e2a\u5c5e\u6027\u90fd\u662f\u5f02\u6b65\u4ea7\u751f\uff0c\u8fd9\u79f0\u4e3a\u201d\u5f02\u6b65\u904d\u5386\u5668\u201c\uff08Async Iterator\uff09\u3002</p>\n<h3 id="\u5f02\u6b65\u904d\u5386\u7684\u63a5\u53e3">\u5f02\u6b65\u904d\u5386\u7684\u63a5\u53e3</h3>\n<p>\u5f02\u6b65\u904d\u5386\u5668\u7684\u6700\u5927\u7684\u8bed\u6cd5\u7279\u70b9\uff0c\u5c31\u662f\u8c03\u7528\u904d\u5386\u5668\u7684<code>next</code>\u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a Promise \u5bf9\u8c61\u3002</p>\n<pre><code class="language-javascript">asyncIterator\n  .next<span class="hljs-literal">()</span>\n  .<span class="hljs-keyword">then</span>(\n    ({ <span class="hljs-keyword">value</span>, <span class="hljs-keyword">done</span> }) =&gt; /* ... */\n  );</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>asyncIterator</code>\u662f\u4e00\u4e2a\u5f02\u6b65\u904d\u5386\u5668\uff0c\u8c03\u7528<code>next</code>\u65b9\u6cd5\u4ee5\u540e\uff0c\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528<code>then</code>\u65b9\u6cd5\u6307\u5b9a\uff0c\u8fd9\u4e2a Promise \u5bf9\u8c61\u7684\u72b6\u6001\u53d8\u4e3a<code>resolve</code>\u4ee5\u540e\u7684\u56de\u8c03\u51fd\u6570\u3002\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5219\u662f\u4e00\u4e2a\u5177\u6709<code>value</code>\u548c<code>done</code>\u4e24\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8ddf\u540c\u6b65\u904d\u5386\u5668\u662f\u4e00\u6837\u7684\u3002</p>\n<p>\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u5bf9\u8c61\u7684\u540c\u6b65\u904d\u5386\u5668\u7684\u63a5\u53e3\uff0c\u90e8\u7f72\u5728<code>Symbol.iterator</code>\u5c5e\u6027\u4e0a\u9762\u3002\u540c\u6837\u5730\uff0c\u5bf9\u8c61\u7684\u5f02\u6b65\u904d\u5386\u5668\u63a5\u53e3\uff0c\u90e8\u7f72\u5728<code>Symbol.asyncIterator</code>\u5c5e\u6027\u4e0a\u9762\u3002\u4e0d\u7ba1\u662f\u4ec0\u4e48\u6837\u7684\u5bf9\u8c61\uff0c\u53ea\u8981\u5b83\u7684<code>Symbol.asyncIterator</code>\u5c5e\u6027\u6709\u503c\uff0c\u5c31\u8868\u793a\u5e94\u8be5\u5bf9\u5b83\u8fdb\u884c\u5f02\u6b65\u904d\u5386\u3002</p>\n<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5f02\u6b65\u904d\u5386\u5668\u7684\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> asyncIterable = createAsyncIterable([<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>]);\n<span class="hljs-keyword">const</span> asyncIterator = asyncIterable[<span class="hljs-built_in">Symbol</span>.asyncIterator]();\n\nasyncIterator\n.next()\n.then(<span class="hljs-function"><span class="hljs-params">iterResult1</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(iterResult1); <span class="hljs-comment">// { value: \'a\', done: false }</span>\n  <span class="hljs-keyword">return</span> asyncIterator.next();\n})\n.then(<span class="hljs-function"><span class="hljs-params">iterResult2</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(iterResult2); <span class="hljs-comment">// { value: \'b\', done: false }</span>\n  <span class="hljs-keyword">return</span> asyncIterator.next();\n})\n.then(<span class="hljs-function"><span class="hljs-params">iterResult3</span> =&gt;</span> {\n  <span class="hljs-built_in">console</span>.log(iterResult3); <span class="hljs-comment">// { value: undefined, done: true }</span>\n});</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5f02\u6b65\u904d\u5386\u5668\u5176\u5b9e\u8fd4\u56de\u4e86\u4e24\u6b21\u503c\u3002\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff1b\u7b49\u5230 Promise \u5bf9\u8c61<code>resolve</code>\u4e86\uff0c\u518d\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u5f53\u524d\u6570\u636e\u6210\u5458\u4fe1\u606f\u7684\u5bf9\u8c61\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u5f02\u6b65\u904d\u5386\u5668\u4e0e\u540c\u6b65\u904d\u5386\u5668\u6700\u7ec8\u884c\u4e3a\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u662f\u4f1a\u5148\u8fd4\u56de Promise \u5bf9\u8c61\uff0c\u4f5c\u4e3a\u4e2d\u4ecb\u3002</p>\n<p>\u7531\u4e8e\u5f02\u6b65\u904d\u5386\u5668\u7684<code>next</code>\u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a Promise \u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u628a\u5b83\u653e\u5728<code>await</code>\u547d\u4ee4\u540e\u9762\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">const</span> asyncIterable = createAsyncIterable([<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>]);\n  <span class="hljs-keyword">const</span> asyncIterator = asyncIterable[<span class="hljs-built_in">Symbol</span>.asyncIterator]();\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">await</span> asyncIterator.next());\n  <span class="hljs-comment">// { value: \'a\', done: false }</span>\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">await</span> asyncIterator.next());\n  <span class="hljs-comment">// { value: \'b\', done: false }</span>\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">await</span> asyncIterator.next());\n  <span class="hljs-comment">// { value: undefined, done: true }</span>\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>next</code>\u65b9\u6cd5\u7528<code>await</code>\u5904\u7406\u4ee5\u540e\uff0c\u5c31\u4e0d\u5fc5\u4f7f\u7528<code>then</code>\u65b9\u6cd5\u4e86\u3002\u6574\u4e2a\u6d41\u7a0b\u5df2\u7ecf\u5f88\u63a5\u8fd1\u540c\u6b65\u5904\u7406\u4e86\u3002</p>\n<p>\u6ce8\u610f\uff0c\u5f02\u6b65\u904d\u5386\u5668\u7684<code>next</code>\u65b9\u6cd5\u662f\u53ef\u4ee5\u8fde\u7eed\u8c03\u7528\u7684\uff0c\u4e0d\u5fc5\u7b49\u5230\u4e0a\u4e00\u6b65\u4ea7\u751f\u7684 Promise \u5bf9\u8c61<code>resolve</code>\u4ee5\u540e\u518d\u8c03\u7528\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c<code>next</code>\u65b9\u6cd5\u4f1a\u7d2f\u79ef\u8d77\u6765\uff0c\u81ea\u52a8\u6309\u7167\u6bcf\u4e00\u6b65\u7684\u987a\u5e8f\u8fd0\u884c\u4e0b\u53bb\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u628a\u6240\u6709\u7684<code>next</code>\u65b9\u6cd5\u653e\u5728<code>Promise.all</code>\u65b9\u6cd5\u91cc\u9762\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> asyncGenObj = createAsyncIterable([<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>]);\n<span class="hljs-keyword">const</span> [{<span class="hljs-keyword">value</span>: v1}, {<span class="hljs-keyword">value</span>: v2}] = <span class="hljs-keyword">await</span> Promise.all([\n  asyncGenObj.next(), asyncGenObj.next()\n]);\n\nconsole.log(v1, v2); <span class="hljs-comment">// a b</span></code></pre>\n<p>\u53e6\u4e00\u79cd\u7528\u6cd5\u662f\u4e00\u6b21\u6027\u8c03\u7528\u6240\u6709\u7684<code>next</code>\u65b9\u6cd5\uff0c\u7136\u540e<code>await</code>\u6700\u540e\u4e00\u6b65\u64cd\u4f5c\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> writer = openFile(<span class="hljs-string">\'someFile.txt\'</span>)<span class="hljs-comment">;</span>\nwriter.<span class="hljs-keyword">next</span>(<span class="hljs-string">\'hello\'</span>)<span class="hljs-comment">;</span>\nwriter.<span class="hljs-keyword">next</span>(<span class="hljs-string">\'world\'</span>)<span class="hljs-comment">;</span>\nawait writer.<span class="hljs-keyword">return</span>()<span class="hljs-comment">;</span></code></pre>\n<h3 id="for-awaitof">for await...of</h3>\n<p>\u524d\u9762\u4ecb\u7ecd\u8fc7\uff0c<code>for...of</code>\u5faa\u73af\u7528\u4e8e\u904d\u5386\u540c\u6b65\u7684 Iterator \u63a5\u53e3\u3002\u65b0\u5f15\u5165\u7684<code>for await...of</code>\u5faa\u73af\uff0c\u5219\u662f\u7528\u4e8e\u904d\u5386\u5f02\u6b65\u7684 Iterator \u63a5\u53e3\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">for</span> <span class="hljs-keyword">await</span> (<span class="hljs-keyword">const</span> x <span class="hljs-keyword">of</span> createAsyncIterable([<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>])) {\n    <span class="hljs-built_in">console</span>.log(x);\n  }\n}\n<span class="hljs-comment">// a</span>\n<span class="hljs-comment">// b</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>createAsyncIterable()</code>\u8fd4\u56de\u4e00\u4e2a\u5f02\u6b65\u904d\u5386\u5668\uff0c<code>for...of</code>\u5faa\u73af\u81ea\u52a8\u8c03\u7528\u8fd9\u4e2a\u904d\u5386\u5668\u7684<code>next</code>\u65b9\u6cd5\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a Promise \u5bf9\u8c61\u3002<code>await</code>\u7528\u6765\u5904\u7406\u8fd9\u4e2a Promise \u5bf9\u8c61\uff0c\u4e00\u65e6<code>resolve</code>\uff0c\u5c31\u628a\u5f97\u5230\u7684\u503c\uff08<code>x</code>\uff09\u4f20\u5165<code>for...of</code>\u7684\u5faa\u73af\u4f53\u3002</p>\n<p><code>for await...of</code>\u5faa\u73af\u7684\u4e00\u4e2a\u7528\u9014\uff0c\u662f\u90e8\u7f72\u4e86 asyncIterable \u64cd\u4f5c\u7684\u5f02\u6b65\u63a5\u53e3\uff0c\u53ef\u4ee5\u76f4\u63a5\u653e\u5165\u8fd9\u4e2a\u5faa\u73af\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">let</span> body = <span class="hljs-string">\'\'</span>;\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">for</span> <span class="hljs-keyword">await</span>(<span class="hljs-keyword">const</span> data <span class="hljs-keyword">of</span> req) body += data;\n  <span class="hljs-keyword">const</span> parsed = <span class="hljs-built_in">JSON</span>.parse(body);\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'got\'</span>, parsed);\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>req</code>\u662f\u4e00\u4e2a asyncIterable \u5bf9\u8c61\uff0c\u7528\u6765\u5f02\u6b65\u8bfb\u53d6\u6570\u636e\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4f7f\u7528<code>for await...of</code>\u5faa\u73af\u4ee5\u540e\uff0c\u4ee3\u7801\u4f1a\u975e\u5e38\u7b80\u6d01\u3002</p>\n<p>\u5982\u679c<code>next</code>\u65b9\u6cd5\u8fd4\u56de\u7684 Promise \u5bf9\u8c61\u88ab<code>reject</code>\uff0c<code>for await...of</code>\u5c31\u4f1a\u62a5\u9519\uff0c\u8981\u7528<code>try...catch</code>\u6355\u6349\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">for</span> <span class="hljs-keyword">await</span> (<span class="hljs-keyword">const</span> x <span class="hljs-keyword">of</span> createRejectingIterable()) {\n      <span class="hljs-built_in">console</span>.log(x);\n    }\n  } <span class="hljs-keyword">catch</span> (e) {\n    <span class="hljs-built_in">console</span>.error(e);\n  }\n}</code></pre>\n<p>\u6ce8\u610f\uff0c<code>for await...of</code>\u5faa\u73af\u4e5f\u53ef\u4ee5\u7528\u4e8e\u540c\u6b65\u904d\u5386\u5668\u3002</p>\n<pre><code class="language-javascript">(<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">for</span> <span class="hljs-keyword">await</span> (<span class="hljs-keyword">const</span> x <span class="hljs-keyword">of</span> [<span class="hljs-string">\'a\'</span>, <span class="hljs-string">\'b\'</span>]) {\n    <span class="hljs-built_in">console</span>.log(x);\n  }\n})();\n<span class="hljs-comment">// a</span>\n<span class="hljs-comment">// b</span></code></pre>\n<h3 id="\u5f02\u6b65-generator-\u51fd\u6570">\u5f02\u6b65 Generator \u51fd\u6570</h3>\n<p>\u5c31\u50cf Generator \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u540c\u6b65\u904d\u5386\u5668\u5bf9\u8c61\u4e00\u6837\uff0c\u5f02\u6b65 Generator \u51fd\u6570\u7684\u4f5c\u7528\uff0c\u662f\u8fd4\u56de\u4e00\u4e2a\u5f02\u6b65\u904d\u5386\u5668\u5bf9\u8c61\u3002</p>\n<p>\u5728\u8bed\u6cd5\u4e0a\uff0c\u5f02\u6b65 Generator \u51fd\u6570\u5c31\u662f<code>async</code>\u51fd\u6570\u4e0e Generator \u51fd\u6570\u7684\u7ed3\u5408\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">gen</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">yield</span> <span class="hljs-string">\'hello\'</span>;\n}\n<span class="hljs-keyword">const</span> genObj = gen();\ngenObj.next().then(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(x));\n<span class="hljs-comment">// { value: \'hello\', done: false }</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>gen</code>\u662f\u4e00\u4e2a\u5f02\u6b65 Generator \u51fd\u6570\uff0c\u6267\u884c\u540e\u8fd4\u56de\u4e00\u4e2a\u5f02\u6b65 Iterator \u5bf9\u8c61\u3002\u5bf9\u8be5\u5bf9\u8c61\u8c03\u7528<code>next</code>\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\u3002</p>\n<p>\u5f02\u6b65\u904d\u5386\u5668\u7684\u8bbe\u8ba1\u76ee\u7684\u4e4b\u4e00\uff0c\u5c31\u662f Generator \u51fd\u6570\u5904\u7406\u540c\u6b65\u64cd\u4f5c\u548c\u5f02\u6b65\u64cd\u4f5c\u65f6\uff0c\u80fd\u591f\u4f7f\u7528\u540c\u4e00\u5957\u63a5\u53e3\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-comment">// \u540c\u6b65 Generator \u51fd\u6570</span>\n<span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">map</span>(<span class="hljs-params">iterable, func</span>) </span>{\n  <span class="hljs-keyword">const</span> iter = iterable[<span class="hljs-built_in">Symbol</span>.iterator]();\n  <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {\n    <span class="hljs-keyword">const</span> {value, done} = iter.next();\n    <span class="hljs-keyword">if</span> (done) <span class="hljs-keyword">break</span>;\n    <span class="hljs-keyword">yield</span> func(value);\n  }\n}\n\n<span class="hljs-comment">// \u5f02\u6b65 Generator \u51fd\u6570</span>\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">map</span>(<span class="hljs-params">iterable, func</span>) </span>{\n  <span class="hljs-keyword">const</span> iter = iterable[<span class="hljs-built_in">Symbol</span>.asyncIterator]();\n  <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {\n    <span class="hljs-keyword">const</span> {value, done} = <span class="hljs-keyword">await</span> iter.next();\n    <span class="hljs-keyword">if</span> (done) <span class="hljs-keyword">break</span>;\n    <span class="hljs-keyword">yield</span> func(value);\n  }\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u4e86\u5f02\u6b65\u904d\u5386\u5668\u4ee5\u540e\uff0c\u540c\u6b65 Generator \u51fd\u6570\u548c\u5f02\u6b65 Generator \u51fd\u6570\u7684\u5199\u6cd5\u57fa\u672c\u4e0a\u662f\u4e00\u81f4\u7684\u3002</p>\n<p>\u4e0b\u9762\u662f\u53e6\u4e00\u4e2a\u5f02\u6b65 Generator \u51fd\u6570\u7684\u4f8b\u5b50\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">readLines</span>(<span class="hljs-params">path</span>) </span>{\n  <span class="hljs-keyword">let</span> file = <span class="hljs-keyword">await</span> fileOpen(path);\n\n  <span class="hljs-keyword">try</span> {\n    <span class="hljs-keyword">while</span> (!file.EOF) {\n      <span class="hljs-keyword">yield</span> <span class="hljs-keyword">await</span> file.readLine();\n    }\n  } <span class="hljs-keyword">finally</span> {\n    <span class="hljs-keyword">await</span> file.close();\n  }\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5f02\u6b65\u64cd\u4f5c\u524d\u9762\u4f7f\u7528<code>await</code>\u5173\u952e\u5b57\u6807\u660e\uff0c\u5373<code>await</code>\u540e\u9762\u7684\u64cd\u4f5c\uff0c\u5e94\u8be5\u8fd4\u56de Promise \u5bf9\u8c61\u3002\u51e1\u662f\u4f7f\u7528<code>yield</code>\u5173\u952e\u5b57\u7684\u5730\u65b9\uff0c\u5c31\u662f<code>next</code>\u65b9\u6cd5\u7684\u505c\u4e0b\u6765\u7684\u5730\u65b9\uff0c\u5b83\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u7684\u503c\uff08\u5373<code>await file.readLine()</code>\u7684\u503c\uff09\uff0c\u4f1a\u4f5c\u4e3a<code>next()</code>\u8fd4\u56de\u5bf9\u8c61\u7684<code>value</code>\u5c5e\u6027\uff0c\u8fd9\u4e00\u70b9\u662f\u4e0e\u540c\u6b65 Generator \u51fd\u6570\u4e00\u81f4\u7684\u3002</p>\n<p>\u5f02\u6b65 Generator \u51fd\u6570\u5185\u90e8\uff0c\u80fd\u591f\u540c\u65f6\u4f7f\u7528<code>await</code>\u548c<code>yield</code>\u547d\u4ee4\u3002\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c<code>await</code>\u547d\u4ee4\u7528\u4e8e\u5c06\u5916\u90e8\u64cd\u4f5c\u4ea7\u751f\u7684\u503c\u8f93\u5165\u51fd\u6570\u5185\u90e8\uff0c<code>yield</code>\u547d\u4ee4\u7528\u4e8e\u5c06\u51fd\u6570\u5185\u90e8\u7684\u503c\u8f93\u51fa\u3002</p>\n<p>\u4e0a\u9762\u4ee3\u7801\u5b9a\u4e49\u7684\u5f02\u6b65 Generator \u51fd\u6570\u7684\u7528\u6cd5\u5982\u4e0b\u3002</p>\n<pre><code class="language-javascript">(<span class="hljs-name">async</span> function () {\n  for await (<span class="hljs-name">const</span> line of readLines(<span class="hljs-name">filePath</span>)) {\n    console.log(<span class="hljs-name">line</span>)<span class="hljs-comment">;</span>\n  }\n})()</code></pre>\n<p>\u5f02\u6b65 Generator \u51fd\u6570\u53ef\u4ee5\u4e0e<code>for await...of</code>\u5faa\u73af\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">prefixLines</span>(<span class="hljs-params">asyncIterable</span>) </span>{\n  <span class="hljs-keyword">for</span> <span class="hljs-keyword">await</span> (<span class="hljs-keyword">const</span> line <span class="hljs-keyword">of</span> asyncIterable) {\n    <span class="hljs-keyword">yield</span> <span class="hljs-string">\'&gt; \'</span> + line;\n  }\n}</code></pre>\n<p>\u5f02\u6b65 Generator \u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5f02\u6b65 Iterator\uff0c\u5373\u6bcf\u6b21\u8c03\u7528\u5b83\u7684<code>next</code>\u65b9\u6cd5\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8ddf\u5728<code>yield</code>\u547d\u4ee4\u540e\u9762\u7684\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a Promise \u5bf9\u8c61\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">asyncGenerator</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Start\'</span>);\n  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> doSomethingAsync(); <span class="hljs-comment">// (A)</span>\n  <span class="hljs-keyword">yield</span> <span class="hljs-string">\'Result: \'</span>+ result; <span class="hljs-comment">// (B)</span>\n  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Done\'</span>);\n}\n\n<span class="hljs-keyword">const</span> ag = asyncGenerator();\nag.next().then({value, done} =&gt; {\n  <span class="hljs-comment">// ...</span>\n})</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>ag</code>\u662f<code>asyncGenerator</code>\u51fd\u6570\u8fd4\u56de\u7684\u5f02\u6b65 Iterator \u5bf9\u8c61\u3002\u8c03\u7528<code>ag.next()</code>\u4ee5\u540e\uff0c<code>asyncGenerator</code>\u51fd\u6570\u5185\u90e8\u7684\u6267\u884c\u987a\u5e8f\u5982\u4e0b\u3002</p>\n<ol>\n<li>\u6253\u5370\u51fa<code>Start</code>\u3002</li>\n<li><code>await</code>\u547d\u4ee4\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u4f46\u662f\u7a0b\u5e8f\u4e0d\u4f1a\u505c\u5728\u8fd9\u91cc\uff0c\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\u3002</li>\n<li>\u7a0b\u5e8f\u5728<code>B</code>\u5904\u6682\u505c\u6267\u884c\uff0c<code>yield</code>\u547d\u4ee4\u7acb\u523b\u8fd4\u56de\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5c31\u662f<code>ag.next()</code>\u7684\u8fd4\u56de\u503c\u3002</li>\n<li><code>A</code>\u5904<code>await</code>\u547d\u4ee4\u540e\u9762\u7684\u90a3\u4e2a Promise \u5bf9\u8c61 resolved\uff0c\u4ea7\u751f\u7684\u503c\u653e\u5165<code>result</code>\u53d8\u91cf\u3002</li>\n<li><code>B</code>\u5904\u7684 Promise \u5bf9\u8c61 resolved\uff0c<code>then</code>\u65b9\u6cd5\u6307\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u5f00\u59cb\u6267\u884c\uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c<code>value</code>\u7684\u503c\u662f\u8868\u8fbe\u5f0f<code>&#39;Result\uff1a &#39; + result</code>\u7684\u503c\uff0c<code>done</code>\u5c5e\u6027\u7684\u503c\u662f<code>false</code>\u3002</li>\n</ol>\n<p>A \u548c B \u4e24\u884c\u7684\u4f5c\u7528\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n  doSomethingAsync()\n  .then(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> {\n     resolve({\n       <span class="hljs-attr">value</span>: <span class="hljs-string">\'Result: \'</span>+result,\n       <span class="hljs-attr">done</span>: <span class="hljs-literal">false</span>,\n     });\n  });\n});</code></pre>\n<p>\u5982\u679c\u5f02\u6b65 Generator \u51fd\u6570\u629b\u51fa\u9519\u8bef\uff0c\u4f1a\u88ab Promise \u5bf9\u8c61<code>reject</code>\uff0c\u7136\u540e\u629b\u51fa\u7684\u9519\u8bef\u88ab<code>catch</code>\u65b9\u6cd5\u6355\u83b7\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">asyncGenerator</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'Problem!\'</span>);\n}\n\nasyncGenerator()\n.next()\n.catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(err)); <span class="hljs-comment">// Error: Problem!</span></code></pre>\n<p>\u6ce8\u610f\uff0c\u666e\u901a\u7684 async \u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2a Promise \u5bf9\u8c61\uff0c\u800c\u5f02\u6b65 Generator \u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5f02\u6b65 Iterator \u5bf9\u8c61\u3002\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0casync \u51fd\u6570\u548c\u5f02\u6b65 Generator \u51fd\u6570\uff0c\u662f\u5c01\u88c5\u5f02\u6b65\u64cd\u4f5c\u7684\u4e24\u79cd\u65b9\u6cd5\uff0c\u90fd\u7528\u6765\u8fbe\u5230\u540c\u4e00\u79cd\u76ee\u7684\u3002\u533a\u522b\u5728\u4e8e\uff0c\u524d\u8005\u81ea\u5e26\u6267\u884c\u5668\uff0c\u540e\u8005\u901a\u8fc7<code>for await...of</code>\u6267\u884c\uff0c\u6216\u8005\u81ea\u5df1\u7f16\u5199\u6267\u884c\u5668\u3002\u4e0b\u9762\u5c31\u662f\u4e00\u4e2a\u5f02\u6b65 Generator \u51fd\u6570\u7684\u6267\u884c\u5668\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">takeAsync</span>(<span class="hljs-params">asyncIterable, count = Infinity</span>) </span>{\n  <span class="hljs-keyword">const</span> result = [];\n  <span class="hljs-keyword">const</span> iterator = asyncIterable[<span class="hljs-built_in">Symbol</span>.asyncIterator]();\n  <span class="hljs-keyword">while</span> (result.length &lt; count) {\n    <span class="hljs-keyword">const</span> {value, done} = <span class="hljs-keyword">await</span> iterator.next();\n    <span class="hljs-keyword">if</span> (done) <span class="hljs-keyword">break</span>;\n    result.push(value);\n  }\n  <span class="hljs-keyword">return</span> result;\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5f02\u6b65 Generator \u51fd\u6570\u4ea7\u751f\u7684\u5f02\u6b65\u904d\u5386\u5668\uff0c\u4f1a\u901a\u8fc7<code>while</code>\u5faa\u73af\u81ea\u52a8\u6267\u884c\uff0c\u6bcf\u5f53<code>await iterator.next()</code>\u5b8c\u6210\uff0c\u5c31\u4f1a\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002\u4e00\u65e6<code>done</code>\u5c5e\u6027\u53d8\u4e3a<code>true</code>\uff0c\u5c31\u4f1a\u8df3\u51fa\u5faa\u73af\uff0c\u5f02\u6b65\u904d\u5386\u5668\u6267\u884c\u7ed3\u675f\u3002</p>\n<p>\u4e0b\u9762\u662f\u8fd9\u4e2a\u81ea\u52a8\u6267\u884c\u5668\u7684\u4e00\u4e2a\u4f7f\u7528\u5b9e\u4f8b\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">gen</span>(<span class="hljs-params"></span>) </span>{\n    <span class="hljs-keyword">yield</span> <span class="hljs-string">\'a\'</span>;\n    <span class="hljs-keyword">yield</span> <span class="hljs-string">\'b\'</span>;\n    <span class="hljs-keyword">yield</span> <span class="hljs-string">\'c\'</span>;\n  }\n\n  <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> takeAsync(gen());\n}\n\nf().then(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) </span>{\n  <span class="hljs-built_in">console</span>.log(result); <span class="hljs-comment">// [\'a\', \'b\', \'c\']</span>\n})</code></pre>\n<p>\u5f02\u6b65 Generator \u51fd\u6570\u51fa\u73b0\u4ee5\u540e\uff0cJavaScript \u5c31\u6709\u4e86\u56db\u79cd\u51fd\u6570\u5f62\u5f0f\uff1a\u666e\u901a\u51fd\u6570\u3001async \u51fd\u6570\u3001Generator \u51fd\u6570\u548c\u5f02\u6b65 Generator \u51fd\u6570\u3002\u8bf7\u6ce8\u610f\u533a\u5206\u6bcf\u79cd\u51fd\u6570\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u57fa\u672c\u4e0a\uff0c\u5982\u679c\u662f\u4e00\u7cfb\u5217\u6309\u7167\u987a\u5e8f\u6267\u884c\u7684\u5f02\u6b65\u64cd\u4f5c\uff08\u6bd4\u5982\u8bfb\u53d6\u6587\u4ef6\uff0c\u7136\u540e\u5199\u5165\u65b0\u5185\u5bb9\uff0c\u518d\u5b58\u5165\u786c\u76d8\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 async \u51fd\u6570\uff1b\u5982\u679c\u662f\u4e00\u7cfb\u5217\u4ea7\u751f\u76f8\u540c\u6570\u636e\u7ed3\u6784\u7684\u5f02\u6b65\u64cd\u4f5c\uff08\u6bd4\u5982\u4e00\u884c\u4e00\u884c\u8bfb\u53d6\u6587\u4ef6\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f02\u6b65 Generator \u51fd\u6570\u3002</p>\n<p>\u5f02\u6b65 Generator \u51fd\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>next</code>\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u63a5\u6536\u5916\u90e8\u4f20\u5165\u7684\u6570\u636e\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">const</span> writer = openFile(<span class="hljs-string">\'someFile.txt\'</span>);\nwriter.next(<span class="hljs-string">\'hello\'</span>); <span class="hljs-comment">// \u7acb\u5373\u6267\u884c</span>\nwriter.next(<span class="hljs-string">\'world\'</span>); <span class="hljs-comment">// \u7acb\u5373\u6267\u884c</span>\n<span class="hljs-keyword">await</span> writer.<span class="hljs-keyword">return</span>(); <span class="hljs-comment">// \u7b49\u5f85\u5199\u5165\u7ed3\u675f</span></code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>openFile</code>\u662f\u4e00\u4e2a\u5f02\u6b65 Generator \u51fd\u6570\u3002<code>next</code>\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5411\u8be5\u51fd\u6570\u5185\u90e8\u7684\u64cd\u4f5c\u4f20\u5165\u6570\u636e\u3002\u6bcf\u6b21<code>next</code>\u65b9\u6cd5\u90fd\u662f\u540c\u6b65\u6267\u884c\u7684\uff0c\u6700\u540e\u7684<code>await</code>\u547d\u4ee4\u7528\u4e8e\u7b49\u5f85\u6574\u4e2a\u5199\u5165\u64cd\u4f5c\u7ed3\u675f\u3002</p>\n<p>\u6700\u540e\uff0c\u540c\u6b65\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5f02\u6b65 Generator \u51fd\u6570\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">createAsyncIterable</span>(<span class="hljs-params">syncIterable</span>) </span>{\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> elem <span class="hljs-keyword">of</span> syncIterable) {\n    <span class="hljs-keyword">yield</span> elem;\n  }\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u7531\u4e8e\u6ca1\u6709\u5f02\u6b65\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e5f\u5c31\u6ca1\u6709\u4f7f\u7528<code>await</code>\u5173\u952e\u5b57\u3002</p>\n<h3 id="yield-\u8bed\u53e5">yield* \u8bed\u53e5</h3>\n<p><code>yield*</code>\u8bed\u53e5\u4e5f\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u5f02\u6b65\u904d\u5386\u5668\u3002</p>\n<pre><code class="language-javascript"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">gen1</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">yield</span> <span class="hljs-string">\'a\'</span>;\n  <span class="hljs-keyword">yield</span> <span class="hljs-string">\'b\'</span>;\n  <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;\n}\n\n<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">gen2</span>(<span class="hljs-params"></span>) </span>{\n  <span class="hljs-comment">// result \u6700\u7ec8\u4f1a\u7b49\u4e8e 2</span>\n  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">yield</span>* gen1();\n}</code></pre>\n<p>\u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c<code>gen2</code>\u51fd\u6570\u91cc\u9762\u7684<code>result</code>\u53d8\u91cf\uff0c\u6700\u540e\u7684\u503c\u662f<code>2</code>\u3002</p>\n<p>\u4e0e\u540c\u6b65 Generator \u51fd\u6570\u4e00\u6837\uff0c<code>for await...of</code>\u5faa\u73af\u4f1a\u5c55\u5f00<code>yield*</code>\u3002</p>\n<pre><code class="language-javascript">(<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n  <span class="hljs-keyword">for</span> <span class="hljs-keyword">await</span> (<span class="hljs-keyword">const</span> x <span class="hljs-keyword">of</span> gen2()) {\n    <span class="hljs-built_in">console</span>.log(x);\n  }\n})();\n<span class="hljs-comment">// a</span>\n<span class="hljs-comment">// b</span></code></pre>\n'}}]);